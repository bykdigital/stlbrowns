(function(){function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require=="function"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error("Cannot find module '"+o+"'");throw f.code="MODULE_NOT_FOUND",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require=="function"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s}return e})()({1:[function(require,module,exports){

var Config = {

	// cdn: 'path to your cdn server goes here',
	cdn: '/',

	fonts: {
		BRANDON: "'Brandon Grotesque Regular', sans-serif",
		BRANDONBLACK: "'Brandon Grotesque Black', sans-serif"
	},

	colors: {
		ORANGE: "#f15c28",
		BROWN: "#44312e",
		BASEUI: 'rgba(195, 77, 36, 0.75)'
	},

	easing: {
		MAIN: "easeOutCubic"
	}
}

module.exports = Config;

},{}],2:[function(require,module,exports){
var Data = {

	navigation: {

		sections: [
			{
				key: "history",
				title: "History",
				url: "#/history"
			},
			{
				key: "players",
				title: "Players",
				url: "#/players"
			},
			{
				key: "merchandise",
				title: "Merchandise",
				url: "/merchandise"
			},
			{
				key: "gallery",
				title: "Gallery",
				url: "/Gallery"
			},
			{
				key: "blog",
				title: "Blog",
				url: "Blog"
			},
			{
				key: "about",
				title: "About",
				url: "#/about"
			},
			{
				key: "membership",
				title: "Membership",
				url: "#/membership"
			}
		],

		social: [
			{
				key: "twitter",
				title: "Twitter",
				url: "https://twitter.com/Stl_browns",
				ogImage: "",
				ogDesc: ""
			},
			{
				key: "facebook",
				title: "Facebook",
				url: "https://www.facebook.com/SaintLouisBrowns",
				ogImage: "",
				ogDesc: ""
			},
			{
				key: "youtube",
				title: "YouTube",
				url: "https://www.youtube.com/user/OfficialSTLBrowns",
				ogImage: "",
				ogDesc: ""
			}
		],

	},

	historySection: {

		title: "History",

		sections: [

			{
				key: "the-early-years",
				title: "The Early Years",
				overviewImage: "the-early-years-index.jpg",
				hero: {
					image: "bg-the-early-years.jpg",
					coverImage: "cover-the-early-years.png"
				},
				dates: {
					from: 1902,
					to: 1922
				},
				overlayData: {
					"ty-cobb": {
						title: "The Ty Cobb Scandal",
						body: "<p>Ty Cobb was the almost-certain winner for the 1910 AL batting title. So certain, in fact, that he took the last day of the season off. Nap Lajoie, hardly behind by a hair, saw an opportunity — and so did Browns manager Jack O&rsquo;Connor, who happened to have it out for Cobb. O&rsquo;Connor ordered his third baseman to play deep on the grass for Lajoie, putting a perfect game well within reach. It was all Lajoie needed to surpass Cobb. In the end, Lajoie reached his last base on an error, giving Cobb the title he righteously earned. O&rsquo;Connor, and coach Harry Howell, who tried to bribe the official scorer out of the call, were fired from the Browns and never returned to the game.</p><p>Cobb&rsquo;s season was reinvestigated 70 years later. Sporting News historian Paul McFarlane found that he&rsquo;d been mistakenly credited for 2 hits — a difference that would&rsquo;ve given Lajoie the clear lead. Yet, the baseball commissioner at the time refused to strip Cobb of his honor, keeping Cobb&rsquo;s 9-season title streak in tact.</p>"
					},
					"almost": {
						title: "6½ Games Out",
						body: "<p>Years 2 through 6 weren&rsquo;t the Browns&rsquo; finest. They nearly hit 100 losses in 1905, but came back with a winning season (76-73) in 1906. Climbing out of the slump, the 1908 Browns were reasonably in the running for the pennant. They finished in 4th place, just 6 and a half games out of first.</p>"
					}
				}
			},

			{
				key: "the-bottom-dwellers",
				title: "The Bottom Dwellers",
				overviewImage: "the-bottom-dwellers-index.jpg",
				hero: {
					image: "bg-the-bottom-dwellers.jpg",
					coverImage: "cover-the-bottom-dwellers.png"
				},
				dates: {
					from: 1926,
					to: 1941
				},
				overlayData: {
					"dewitt": {
						title: "Bill DeWitt, Sr. (1902 &ndash; 1982)",
						body: "<p>After the Browns moved to Baltimore, DeWitt headed north. He was the assistant general manager of the New York Yankees from 1954 to 1958, then served as president and GM of the Detroit Tigers from 1959 to 1960.</p><p>His third move had a bit more staying power. He was GM of the Cincinnati Reds from 1960 to 1966. He became sole owner and led them to pennant victory in 1961, built up a productive farm system, and maintained the team&rsquo;s status as a serious contender throughout his tenure.</p><p>DeWitt sold the Reds in 1966. Regardless, DeWitt was still credited for drafting, developing and trading for the players who&rsquo;d become the league-dominating &ldquo;Big Red Machine&rdquo; of the 1970s.</p><p>For his final run, he sat as chairman of the Chicago White Sox from 1975-1981, working once again with the unforgettable Bill Veeck.</p><p>Baseball is a continued tradition in the DeWitt family. His son, William DeWitt, Jr., is the principal owner and managing partner of the St. Louis Cardinals. His grandson, William DeWitt, III, is the Cardinals&rsquo; president.</p>"
					}
				}
			},

			{
				key: "the-war-years",
				title: "The War Years",
				overviewImage: "the-war-years-index.jpg",
				hero: {
					image: "bg-the-war-years.jpg",
					coverImage: "cover-the-war-years.png"
				},
				dates: {
					from: 1942,
					to: 1946
				}
			},

			{
				key: "the-bill-veeck-era",
				title: "The Bill Veeck Era",
				overviewImage: "the-bill-veeck-era-index.jpg",
				hero: {
					image: "bg-the-veeck-era.jpg",
					coverImage: "cover-the-veeck-era.png"
				},
				dates: {
					from: 1949,
					to: 1953
				},
				overlayData: {
					"veeck": {
						title: "Bill Veeck (1914 &ndash; 1986)",
						body: "<p>After the St. Louis Browns, Bill Veeck licked his wounds, and returned to baseball again. When the White Sox won their first pennant in 40 years (1959), Bill Veeck was pulling the strings behind the scenes.</p><p>He had to sell his share of the White Sox in 1961 due to poor health, and briefly held down a commentating gig before disappearing from baseball for 14 years. In 1975, Veeck bought the White Sox and became the club&rsquo;s sole proprietor. He was back in the game, and back to his old clever ways.</p><p>He famously had Harry Caray sing &ldquo;Take Me Out to the Ball Game&rdquo; during the 7th-inning stretch. He offered fans free admission after the White Sox were defeated 10-2 on Opening Day in 1979. He held Disco Demolition Night, which ended in a riot at Comiskey Park and a forfeit to the Tigers.</p><p>When the free agent era arrived, Veeck couldn&rsquo;t keep up financially, so he sold the White Sox in early 1981. But he didn&rsquo;t exit the game entirely. Fans spotted him frequently at Wrigley Field, cheering on the Cubs, as he&rsquo;d done in his childhood.</p><p>Veeck was inducted to the Hall of Fame in 1991, five years after his death. He earned this recognition not solely for his wild promotions, but for the lasting and positive impact his approach had on the game. If it weren&rsquo;t for Veeck, baseball might not be the game we know and love today.</p>"
					}
				}
			}
		]
	},

	players: {

		title: "Players",

		players: [

			{
			  key: "clint-courtney",
			  firstName: "Clint",
			  lastName: "Courtney",
			  url: "http://www.baseball-reference.com/players/c/courtcl01.shtml",
			  bio: "<p>Listed at 5&rsquo; 8&rdquo; and 180 pounds, Courtney was an American League catcher whose pugnacity and timely base hits made headlines in the 1950s. Fiercely combative, he played his position under unusual handicaps. A natural left-hander, he taught himself to use his right arm, and he also was myopic, being widely considered as the first Major League catcher to wear eyeglasses. On July 16, 1953, Courtney entered the record books when the Browns tied, by then, a Major League mark with three successive home runs during the first inning of an 8–6 victory over the Yankees</p>",
			  details: {
			    position: "C",
			    bats: "Left",
			    arm: "Right",
			    height: {
			      feet: 5,
			      inches: 8
			    },
			    weight: 180,
			    city: "Hall Summit, LA",
			    born: {
			      year: 1927,
			      month: 5,
			      day: 16
			    }
			  }
			},

			{
			  key: "les-moss",
			  firstName: "Les",
			  lastName: "Moss",
			  url: "http://www.baseball-reference.com/players/m/mossle01.shtml",
			  bio: "<p>Les Moss platooned alongside left-handed-hitting catcher Jake Early, producing a .157 batting average in 96 games during the 1947 season. He caught the majority of the games for the Browns in 1948 while his hitting improved substantially, with a .257 average along with 14 home runs and 46 runs batted in. In 1949, the Browns acquired 24-year-old Sherm Lollar from the New York Yankees and, Moss became the second string catcher. Moss&rsquo; hitting continued to improve with a .291 average and an impressive .399 on-base percentage.</p>",
			  details: {
			    position: "C",
			    bats: "Right",
			    arm: "Right",
			    height: {
			      feet: 5,
			      inches: 11
			    },
			    weight: 205,
			    city: "Tulsa, OK",
			    born: {
			      year: 1925,
			      month: 5,
			      day: 14
			    }
			  }
			},

			{
			  key: "heinie-manush",
			  firstName: "Heinie",
			  lastName: "Manush",
			  url: "http://www.baseball-reference.com/players/m/manushe01.shtml",
			  bio: "<p>Henry Emmett Manush, nicknamed &ldquo;Heinie,&rdquo; was an American baseball outfielder. On December 13, 1927, the Tigers traded Manush and first baseman Lu Blue to the St. Louis Browns in exchange for outfielder Harry Rice, pitcher Elam Vangilder, and a player to be named later. The trade was promptly criticized as being one-sided in favor of St. Louis, and proved as much when Manush had an outstanding 1928 season for the Browns. Manush appeared in all 154 games as the Browns' starting left fielder in 1928 and compiled a .378 batting average, narrowly missing a second batting title to Goose Goslin who hit .379, one point higher than Manush.</p><p>The battle for the batting title was the closest in 18 years, and Manush, who appeared in 19 more games than Goslin, led the league with 241 hits, 68 more than Goslin. Manush also led the American League in 1928 with 241 hits and 47 doubles and finished among the league leaders with 367 total bases (second behind Babe Ruth), 20 triples (second), a 6.8 offensive wins above replacement rating (third behind Ruth and Lou Gehrig), 80 extra base hits (third behind Ruth and Gehrig), a .575 slugging percentage (fourth), and 108 RBIs (fourth). He helped the Browns improve by 23 wins from a 59-94 record in 1927 to an 82-72 record in 1928. He also finished second behind Mickey Cochrane in close voting for the 1928 American League Most Valuable Player award, with Cochrane garnering 53 vote points to 51 for Manush.</p>",
			  details: {
			    position: "LF",
			    bats: "Left",
			    arm: "Left",
			    height: {
			      feet: 6,
			      inches: 1
			    },
			    weight: 200,
			    city: "Tuscumbia, AL",
			    born: {
			      year: 1901,
			      month: 7,
			      day: 20
			    }
			  }
			},

			{
			  key: "goose-goslin",
			  firstName: "Goose",
			  lastName: "Goslin",
			  url: "http://www.baseball-reference.com/players/g/gosligo01.shtml",
			  bio: "<p>Leon Allen &ldquo;Goose&rdquo; Goslin was a left fielder in Major League Baseball known for his powerful left-handed swing and dependable clutch hitting. He played 18 seasons with the St. Louis Browns. He was inducted into the Baseball Hall of Fame in 1968. The 1928 batting title was not decided until the last day of the season.</p><p>Goslin and Heinie Manush of the St. Louis Browns were tied going into the final game, and the Senators and Browns played each other in the final game. Goslin was leading Manush when his turn came to bat in the ninth inning. If Goslin made an out, he would lose the batting crown. In 101 games for the Browns, Goslin had 30 home runs, 100 RBI, and 62 extra base hits. Goslin had another solid year for the Browns in 1931, batting .328 with a career-high 42 doubles, 76 extra base hits and 105 RBI.</p>",
			  hallOfFame: true,
			  details: {
			    position: "LF",
			    bats: "Left",
			    arm: "Right",
			    height: {
			      feet: 5,
			      inches: 11
			    },
			    weight: 185,
			    city: "Salem, NJ",
			    born: {
			      year: 1900,
			      month: 10,
			      day: 16
			    }
			  }
			},

			{
			  key: "eddie-plank",
			  firstName: "Eddie",
			  lastName: "Plank",
			  url: "http://www.baseball-reference.com/players/p/planked01.shtml",
			  bio: "<p>Edward Stewart Plank, nicknamed &ldquo;Gettysburg Eddie,&rdquo; was an American professional baseball player. A pitcher, Plank played in Major League Baseball for the St. Louis Browns in 1916 and 1917. When the Federal League folded, Plank applied for free agency but was declared to belong to the St. Louis Browns for 1916. In September of that year, Plank predicted that he might be able to pitch ten more seasons, saying, &ldquo;I don&rsquo;t know whether it is that I have more on the ball this season than I had in other years, but at any rate I feel that I have just as much stuff as I ever did.&rdquo;</p>",
			  hallOfFame: true,
			  details: {
			    position: "P",
			    bats: "Left",
			    arm: "Left",
			    height: {
			      feet: 5,
			      inches: 11
			    },
			    weight: 175,
			    city: "Gettysburg, PA",
			    born: {
			      year: 1875,
			      month: 8,
			      day: 31
			    }
			  }
			},

			{
			  key: "george-stone",
			  firstName: "George",
			  lastName: "Stone",
			  url: "http://www.baseball-reference.com/players/s/stonege01.shtml",
			  bio: "<p>Nicknamed Silent George, he was a left fielder in Major League Baseball who played for the St. Louis Browns from 1905–1910. Stone batted and threw left-handed. He was the 1906 American League batting champion. In a seven-season career, Stone posted a .301 batting average with 23 home runs and 268 RBI in 848 games played.</p>",
			  details: {
			    position: "LF",
			    bats: "Left",
			    arm: "Left",
			    height: {
			      feet: 5,
			      inches: 9
			    },
			    weight: 175,
			    city: "Lost Nation, IA",
			    born: {
			      year: 1876,
			      month: 9,
			      day: 3
			    }
			  }
			},

			{
			  key: "wayne-bromley-wright",
			  firstName: "Wayne Bromley &ldquo;Rasty&rdquo;",
			  lastName: "Wright",
			  url: "http://www.baseball-reference.com/players/w/wrighra02.shtml",
			  bio: "<p>Wayne Bromley &ldquo;Rasty&rdquo; Wright was a professional baseball pitcher. He played all or part of five seasons in Major League Baseball for the St. Louis Browns between 1917 and 1923.</p>",
			  details: {
			    position: "P",
			    bats: "Right",
			    arm: "Right",
			    height: {
			      feet: 5,
			      inches: 11
			    },
			    weight: 160,
			    city: "Ceredo, WV",
			    born: {
			      year: 1895,
			      month: 11,
			      day: 5
			    }
			  }
			},

			{
			  key: "rube-waddell",
			  firstName: "Rube",
			  lastName: "Waddell",
			  url: "http://www.baseball-reference.com/players/w/wadderu01.shtml",
			  bio: "<p>George Edward &ldquo;Rube&rdquo; Waddell was an American southpaw pitcher in Major League Baseball (MLB). In a career spanning 13 years, he played for the St. Louis Browns (1908–10) in the American League. Born in Bradford, Pennsylvania, Waddell was elected to the Baseball Hall of Fame in 1946. Born in 1876 outside of Bradford, Pennsylvania, Waddell grew up in the country. Biographer Alan Levy writes that Waddell was &ldquo;a decidedly different sort of child.&rdquo; At the age of three, he wandered over to a local fire station and stayed for several days.</p><p>Waddell did not attend school very often, but he was considered to be literate. He strengthened his arm as a child by throwing rocks at birds he encountered while plowing the family's land. He also worked on mining and drilling sites as a youngster, which helped his conditioning. Waddell was a remarkably dominant strikeout pitcher in an era when batters mostly slapped at the ball to get singles. He had an excellent fastball, a sharp-breaking curve, a screwball, and superb control (his strikeout-to-walk ratio was almost 3-to-1). He led the major leagues in strikeouts for six consecutive years. </p>",
			  hallOfFame: true,
			  details: {
			    position: "P",
			    bats: "Right",
			    arm: "Left",
			    height: {
			      feet: 6,
			      inches: 1
			    },
			    weight: 196,
			    city: "Bradford, PA",
			    born: {
			      year: 1876,
			      month: 10,
			      day: 13
			    }
			  }
			},

			{
			  key: "rollie-stiles",
			  firstName: "Rollie",
			  lastName: "Stiles",
			  url: "http://www.baseball-reference.com/players/s/stilero01.shtml",
			  bio: "<p>Rolland Mays Stiles was an American right-handed pitcher in Major League Baseball who played for the St. Louis Browns from 1930 to 1933. Born in Ratcliff, Arkansas, he batted and threw right-handed, and was 9–14 with an earned run average of 5.92 in his three seasons. Rollie attended Southeastern State Teachers College. His first game in the major leagues was on June 19, 1930, and his last game was October 1, 1933. Stiles&rsquo; nicknames when playing baseball were &ldquo;Leapin&rsquo; Lena,&rdquo; &ldquo;Lena,&rdquo; and &ldquo;Rollie,&rdquo; all typical of how he signed autographs for baseball fans. He died in his sleep at age 100 on July 22, 2007 at the Bethesda Southgate Nursing Home in St. Louis. He was the last living person to have pitched to Babe Ruth.</p>",
			  details: {
			    position: "P",
			    bats: "Right",
			    arm: "Right",
			    height: {
			      feet: 6,
			      inches: 1
			    },
			    weight: 180,
			    city: "Ratcliff, AR",
			    born: {
			      year: 1906,
			      month: 11,
			      day: 17
			    }
			  }
			},

			{
			  key: "dale-long",
			  firstName: "Dale",
			  lastName: "Long",
			  url: "http://www.baseball-reference.com/players/l/longda02.shtml",
			  bio: "<p>A native of Springfield, Missouri, Long turned down an offer from the Green Bay Packers to play football, opting instead to play baseball. Long spent six seasons in the minor leagues, playing for five different organizations before he debuted with the Pittsburgh Pirates in 1951, ending that season with the St. Louis Browns. </p>",
			  details: {
			    position: "1B",
			    bats: "Left",
			    arm: "Left",
			    height: {
			      feet: 6,
			      inches: 4
			    },
			    weight: 205,
			    city: "Springfield, MO",
			    born: {
			      year: 1926,
			      month: 2,
			      day: 6
			    }
			  }
			},

			{
			  key: "bob-dillinger",
			  firstName: "Bob",
			  lastName: "Dillinger",
			  url: "http://www.baseball-reference.com/players/d/dillibo01.shtml",
			  bio: "<p>Born in Glendale, California, Dillinger attended the University of Idaho in Moscow and played football for the Vandals, but broke his collarbone as a freshman in 1936 and was injured again as a sophomore; he left the school in the spring of 1938. He was signed by the Browns as an amateur free agent in 1939.</p>",
			  details: {
			    position: "3B",
			    bats: "Right",
			    arm: "Right",
			    height: {
			      feet: 5,
			      inches: 11
			    },
			    weight: 170,
			    city: "Glendale, CA",
			    born: {
			      year: 1918,
			      month: 9,
			      day: 17
			    }
			  }
			},

			{
				key: "rick-ferrell",
				firstName: "Rick",
				lastName: "Ferrell",
				url: "http://www.baseball-reference.com/players/f/ferreri01.shtml",
				bio: "<p>Rick Ferrell cut his teeth as catcher at home — his six brothers all wanted to be pitchers. It paid off. With a knack for catching knuckleballs and picking off stolen base attempts, this 8-time All-Star* became known as one of the best catchers in the game during the &lsquo;30s and &lsquo;40s. His skills at the plate weren&rsquo;t just limited to catching. Among catchers with 3,000 at-bats, Ferrell&rsquo;s .378 career on-base percentage is 8th all-time, and 4th among the 13 major league Hall of Fame catchers. Ferrell played for the Browns twice during his peak: from 1929-1933, and from 1941-1943.</p><p>As for his brothers? Only one of them, Wes, made it to the majors. When asked how it was to play against his brother, Rick said, &ldquo;We were brothers off the field, but there was no love lost on it. We fought like cats and dogs. Wes was always trying to strike me out, and meantime, I was always trying to hit a home run off him.&rdquo;</p><p>*His eighth appearance never actually happened. The 1945 All-Star Game was cancelled due to wartime travel restrictions.</p>",
				hallOfFame: true,
				details: {
					position: "C",
					bats: "Right",
					arm: "Right",
					height: {
						feet: 5,
						inches: 10
					},
					weight: 160,
					city: "Durham, NC",
					born: {
						year: 1905,
						month: 10,
						day: 12
					}
				}
			},

			{
				key: "bobby-wallace",
				firstName: "Bobby",
				lastName: "Wallace",
				url: "http://www.baseball-reference.com/players/w/wallabo01.shtml",
				bio: "<p>Bobby Wallace holds the record for longest career by a player who never reached the World Series. But that&rsquo;s not the only reason he&rsquo;s noteworthy. He was a top-10 RBI leader for eight seasons in the peak of his career. He also holds the American League record for most chances accepted in one game: 17 (against the Boston Red Sox on June 10, 1902).</p><p>What he lacked in height, he made up in his mental fortitude. Wallace reflected, &ldquo;As more speed afoot was constantly demanded for big league ball, I noticed the many infield bounders which the runner beat to first only by the thinnest fractions of a second. I also noted that the old-time three-phase movement — fielding a ball, coming erect for a toss and throwing to first — wouldn't do on certain hits with fast men&hellip; It was plain that the stop and toss had to be combined into a continuous movement.&rdquo;</p><p>In 1911, Pittsburgh Pirates owner Barney Dreyfuss declared, &ldquo;The best player in the American League, the only man I would get if I could, plays on a tail-end team, and few people pay any attention to him. I mean Bobby Wallace of St. Louis. I wish I had him.&rdquo; Indeed, this Hall of Famer might be the greatest defensive shortstop of his generation.</p>",
				hallOfFame: true,
				cardinalsPlayer: true,
				details: {
					position: "SS, 3B",
					bats: "Right",
					arm: "Right",
					height: {
						feet: 5,
						inches: 8
					},
					weight: 170,
					city: "Pittsburgh, PA",
					born: {
						year: 1873,
						month: 11,
						day: 4
					}
				}
			},

			{
				key: "dizzy-dean",
				firstName: "Dizzy",
				lastName: "Dean",
				url: "http://www.baseball-reference.com/players/d/deandi01.shtml",
				bio: "<p>From 1932 to 1937, Dizzy Dean was arguably the best pitcher in all of baseball. But in the 1937 All-Star game, a line drive back to the mound fractured Dizzy&rsquo;s toe, or as he would say &ldquo;Fractured, hell, the damn thing's broken!&rdquo; Dizzy was never the same man on the mound — a change in mechanics to deal with the toe injury led to an arm injury.</p><p>Thankfully, when it came to his colorful use of the English language, he hadn&rsquo;t changed a bit, as he quickly transitioned to a career in broadcasting. His wit and perfectly placed malapropisms earned him a large following as the radio voice for the Browns. Oddly, this led him to one more appearance on the mound. The pitching was so bad during the Browns&rsquo; lowly 1947 season, Dizzy would often remark in his broadcasts that he could do better. Six years removed from throwing in a game, Dizzy left his booth to be the Browns&rsquo; starting pitcher for the last game of the year. He pitched four shutout innings, and even got a hit, before leaving the game with a pulled muscle — the final injury of his playing career.</p>",
				hallOfFame: true,
				cardinalsPlayer: true,
				details: {
					position: "P",
					bats: "Right",
					arm: "Right",
					height: {
						feet: 6,
						inches: 2
					},
					weight: 182,
					city: "Lucas, AR",
					born: {
						year: 1910,
						month: 1,
						day: 16
					}
				}
			},

			{
				key: "george-sisler",
				firstName: "George",
				lastName: "Sisler",
				url: "http://www.baseball-reference.com/players/s/sislege01.shtml",
				bio: "<p>Who is George Sisler? Unquestionably, the greatest player in St. Louis Browns&rsquo; history. Once considered an equal to the likes of Ruth, Cobb and Hornsby, &ldquo;The Sizzler&rdquo; won the AL batting title twice (hitting over .400 both times), led the AL in stolen bases four times, and held the single-season hit record (257) for 84 years. He is also regarded as one of the best defensive first basemen to play the game.</p><p>Today, he&rsquo;s quite possibly the best player most baseball fans have never heard of. But greatness has a way of being rediscovered. Born 6,000 miles away and 80 years later, Ichiro Suzuki broke Sisler&rsquo;s single-season hit record in 2004. He later laid flowers on Sisler&rsquo;s grave to honor him. With the symbolic tip of his cap, Suzuki reawakened fans to one of baseball&rsquo;s greatest, nearly forgotten treasures.</p>",
				hallOfFame: true,
				details: {
					position: "1B",
					bats: "Left",
					arm: "Left",
					height: {
						feet: 5,
						inches: 11
					},
					weight: 180,
					city: "Manchester, OH",
					born: {
						year: 1893,
						month: 3,
						day: 24
					}
				}
			},

			{
				key: "ken-williams",
				firstName: "Ken",
				lastName: "Williams",
				url: "http://www.baseball-reference.com/players/w/willike01.shtml",
				bio: "<p>First player to poke two home runs in one inning. First to hit 30 out of the park and steal 30 bases in the same season. A six-game streak with a tater in each. League leader in homers and ribbies. Ken Williams didn&rsquo;t compile these stats over the course of a long career — it all happened in 1922. Despite the offensive prowess, Williams and the &lsquo;22 Browns (the organization&rsquo;s best club) still fell a game and a half short of the AL pennant.</p>",
				details: {
					position: "LF",
					bats: "Left",
					arm: "Right",
					height: {
						feet: 6,
						inches: 0
					},
					weight: 170,
					city: "Grants Pass, OR",
					born: {
						year: 1890,
						month: 6,
						day: 28
					}
				}
			},

			{
				key: "baby-doll-jacobson",
				firstName: "Baby Doll",
				lastName: "Jacobson",
				url: "http://www.baseball-reference.com/players/j/jacobba01.shtml",
				bio: "<p>Baby Doll Jacobson rivaled The Babe in stats and stature. Batting better than .300 for 7 consecutive seasons (1919-1925), he was no small threat to his opponents.</p><p>So, why the nickname? At a game in 1912, the band was playing &ldquo;Oh, You Beautiful Doll&rdquo; as Jacobson walked up to the plate. First pitch, he smoked the ball halfway to China. A lady shouted from stands, &ldquo;You must be that beautiful doll they were talking about.&rdquo; The rest is history.</p><p>After the Browns: &ldquo;Although he never received more than a passing glance in the Hall of Fame voting, Jacobson's credentials are superior to many of the old-timers who have been enshrined.&rdquo; &mdash; written in The Sporting News following Jacobson&rsquo;s death in 1977. Traded to the Boston Red Sox in 1926, Jacobson&rsquo;s .981 fielding percentage that season was second among AL center fielders. After short stints with the Indians, the Athletics and a few minor league teams, Jacobson left baseball and spent the remainder of his years on his Illinois farm, not too far from where he grew up.</p>",
				details: {
					position: "CF",
					bats: "Right",
					arm: "Right",
					height: {
						feet: 6,
						inches: 3
					},
					weight: 215,
					city: "Cable, IL",
					born: {
						year: 1890,
						month: 8,
						day: 16
					}
				}
			},

			{
				key: "jack-tobin",
				firstName: "Jack",
				lastName: "Tobin",
				url: "http://www.baseball-reference.com/players/t/tobinja01.shtml",
				bio: "<p>To his friends and the newspapers in St. Louis, he was Johnny. But in the record books, he was Jack. To teammate and legend-in-the-making George Sisler, he was &ldquo;one of the best leadoff men I ever saw&hellip; He was fast and a good outfielder with a strong throwing arm and, above all, he was the best drag-bunter anyone ever saw.&rdquo;</p><p>Tobin didn&rsquo;t see much playing time in his first year with the Browns (1916). However, he did face his former team, the Federal League&rsquo;s St. Louis Terriers, in a so-called City Series. They lost, but Tobin and the Browns swept the Cardinals in the City Series two years later.</p><p>After a productive trip to the Pacific Coast League, Tobin was back on the Browns by 1918. His best run was from 1919 to 1923. Tobin batted well over .300 every year, topping out at .352, and roping 13 homers two seasons in a row. He led the league in 1921 with 18 triples, and was second in runs scored with 132. When he dipped a point below .300 in 1924, legend has it that he had his teeth removed.</p><p>In 1925, Tobin was out-hit by rightfielder Harry Rice, and lost his starting privileges. He was traded to the Washington Senators before the start of the 1926 season.</p>",
				details: {
					position: "RF",
					bats: "Left",
					arm: "Left",
					height: {
						feet: 5,
						inches: 8
					},
					weight: 142,
					city: "St. Louis, MO",
					born: {
						year: 1892,
						month: 5,
						day: 4
					}
				}
			},

			{
				key: "pete-gray",
				firstName: "Pete",
				lastName: "Gray",
				url: "http://www.baseball-reference.com/players/g/graype01.shtml",
				bio: "<p>Before there was Jim Abbott, there was Pete Gray. At age six, Gray lost his right arm in a farming accident. But he never lost his determination to play ball. The natural righty learned to bat and throw left-handed to pursue his dream. After an MVP season in the minors, he was called up to play for the Browns in 1945. It was his only year in the majors; like so many two-handed players before him, Gray couldn't hit the off-speed pitch. Gray, more than anyone, knew his opportunity to play came about from depleted wartime rosters. While he himself couldn&rsquo;t serve, he honored veterans by visiting them at the hospital, becoming an inspiration for thousands of disabled servicemen returning from the war.</p>",
				details: {
					position: "OF",
					bats: "Left",
					arm: "Left",
					height: {
						feet: 6,
						inches: 1
					},
					weight: 169,
					city: "Nanticoke, PA",
					born: {
						year: 1915,
						month: 3,
						day: 6
					}
				}
			},

			{
				key: "eddie-gaedel",
				firstName: "Eddie",
				lastName: "Gaedel",
				url: "http://www.baseball-reference.com/players/g/gaedeed01.shtml",
				bio: "<p>Normally, one plate appearance wouldn&rsquo;t leave a mark on the history of baseball. But normally, Eddie Gaedel wasn&rsquo;t up to bat. On August 19, 1951, as part of a trademark Bill Veeck promotional stunt, the 3-foot-7 Gaedel came to the plate to pinch hit. He wore the number ⅛ on a jersey made for Bill DeWitt&rsquo;s son. Four balls later, Gaedel achieved a career on-base percentage of 1.000. Even though his contract was voided by the league two days later, Gaedel&rsquo;s jersey still has a spot in the National Baseball Hall of Fame.</p><p>&ldquo;He was, by golly, the best damn midget who ever played big-league ball. He was also the only one.&rdquo; - Bill Veeck</p>",
				details: {
					position: "PH",
					bats: "Right",
					arm: "Left",
					height: {
						feet: 3,
						inches: 7
					},
					weight: 65,
					city: "Chicago, IL",
					born: {
						year: 1925,
						month: 6,
						day: 8
					}
				}
			},

			{
				key: "ned-garver",
				firstName: "Ned",
				lastName: "Garver",
				url: "http://www.baseball-reference.com/players/g/garvene01.shtml",
				bio: "<p>In 1951, while the Browns lost 102 games, Ned Garver racked up 20 wins — the only pitcher in the majors to do so well for such a losing team, even to this day. He also led the American League in complete games (24) and was the starting pitcher for the All-Star game in Detroit. That same year, he earned (and clearly deserved) the highest salary on the team: a whopping $25,000.</p><p>Despite his triumphs on the mound, he never pitched in a World Series. Garver thought, &ldquo;If you played in a World Series, people get the impression that you were somewhat more of an outstanding player than if you never did. You're put in a kind of special category if you were on a pennant winning team.&rdquo;</p><p>Still, that didn&rsquo;t stop him from becoming a legend. Ted Williams, one of baseball&rsquo;s greatest hitters, said of Ned, &ldquo;He could throw anything up there and get me out.&rdquo;</p>",
				details: {
					position: "P",
					bats: "Right",
					arm: "Right",
					height: {
						feet: 5,
						inches: 10
					},
					weight: 180,
					city: "Ney, OH",
					born: {
						year: 1925,
						month: 12,
						day: 25
					}
				}
			},

			{
				key: "satchel-paige",
				firstName: "Satchel",
				lastName: "Paige",
				url: "http://www.baseball-reference.com/players/p/paigesa01.shtml",
				bio: "<p>As the Cleveland Indians owner, Bill Veeck signed Satchel to his first major league contract in 1948, when Satchel was 42, making him the oldest rookie ever in the major leagues. After Veeck bought into the Browns in 1951, he signed Paige once again. In 1952, Paige had proved himself to be such an asset, he either started or came in for relief every three games. That same year, Paige represented the Browns in the All-Star Game, but didn&rsquo;t see any playing time, so Casey Stengel nominated him again for the 1953 team.</p><p>The selling of the Browns to Baltimore was the last of Paige&rsquo;s major league career, until he returned with the Kansas City Athletics in 1965. (He went back to the Negro Leagues in between.) Although his major league career was only 6 seasons, his name will be remembered forever.</p><p>&ldquo;If Satch and I were pitching on the same team, we&rsquo;d clinch the pennant by the fourth of July and go fishing until World Series time.&rdquo; &mdash; Dizzy Dean</p>",
				hallOfFame: true,
				details: {
					position: "P",
					bats: "Right",
					arm: "Right",
					height: {
						feet: 6,
						inches: 3
					},
					weight: 180,
					city: "Mobile, AL",
					born: {
						year: 1906,
						month: 7,
						day: 7
					}
				}
			},

			{
				key: "vern-stephens",
				firstName: "Vern",
				lastName: "Stephens",
				url: "http://www.baseball-reference.com/players/s/stephve01.shtml",
				bio: "<p>With peers like Phil Rizzuto, Marty Marion, Pee Wee Reese and Johnny Pesky, Vern Stephens was part of a special crop of shortstops from the 1940s. While the legends of his peers have grown, the memory of Vern &ldquo;Junior&rdquo; Stephens has largely faded over time. It&rsquo;s a shame, because he just might have been the best of that bunch.</p><p>Growing up, Stephens was a slight kid, weighing in at just 100 lbs. But he built himself up, and soon became known for his power at the plate. An 8-time All-Star, 3-time RBI champ, and perennial MVP candidate, Stephens had an arm like a shotgun, and a trick knee that kept him from being drafted. History may have nearly forgotten him, but his stat lines will forever tell the story of one of the greatest power-hitting shortstops in baseball.</p>",
				details: {
					position: "SS, 3B",
					bats: "Right",
					arm: "Right",
					height: {
						feet: 5,
						inches: 10
					},
					weight: 185,
					city: "McAllister, NM",
					born: {
						year: 1920,
						month: 23,
						day: 10
					}
				}
			},

			{
				key: "len-schulte",
				firstName: "Len",
				lastName: "Schulte",
				url: "http://www.baseball-reference.com/players/s/schulle01.shtml",
				bio: "<p>Len Schulte&rsquo;s big league debut was soggy. In his only appearance for the 1944 Browns, Schulte drew a walk in a rainy late September 4-1 loss to the Boston Red Sox. He saw less rain and more playing time the next season, appearing in 110 games at third-base.</p>",
				details: {
					position: "3B, 2B, SS",
					bats: "Right",
					arm: "Right",
					height: {
						feet: 5,
						inches: 10
					},
					weight: 160,
					city: "St. Charles, MO",
					born: {
						year: 1916,
						month: 12,
						day: 5
					}
				}
			},

			{
				key: "george-caster",
				firstName: "George",
				lastName: "Caster",
				url: "http://www.baseball-reference.com/players/c/castege01.shtml",
				bio: "<p>After joining the Browns as a starting pitcher in 1941, George &ldquo;Ug&rdquo; Caster found his calling as a closer. &ldquo;I like to be in there when the going is tough, trying to save a game,&rdquo; Caster said. And save games he did — Caster led the American League in saves as he helped the Browns take the pennant in 1944.</p>",
				details: {
					position: "P",
					bats: "Right",
					arm: "Right",
					height: {
						feet: 6,
						inches: 1
					},
					weight: 180,
					city: "Colton, CA",
					born: {
						year: 1907,
						month: 8,
						day: 4
					}
				}
			},

			{
				key: "frank-demaree",
				firstName: "Frank",
				lastName: "Demaree",
				url: "http://www.baseball-reference.com/players/d/demarfr02.shtml",
				bio: "<p>A veteran outfielder, Frank Demaree joined the Browns just before the start of the 1944 season. He played in 16 games before being released, going 0-for-3 in what would be his final major league appearance. Had he made it to the postseason, he would have been on the losing side of five different World Series throughout his career.</p>",
				details: {
					position: "OF",
					bats: "Right",
					arm: "Right",
					cardinalsPlayer: true,
					height: {
						feet: 5,
						inches: 11
					},
					weight: 185,
					city: "Winters, CA",
					born: {
						year: 1910,
						month: 6,
						day: 10
					}
				}
			},

			{
				key: "denny-galehouse",
				firstName: "Denny",
				lastName: "Galehouse",
				url: "http://www.baseball-reference.com/players/g/galehde01.shtml",
				bio: "<p>After two seasons with the Browns (1942-1943), Denny Galehouse left the team to help the war effort, working 6 days a week at a plant in Akron, Ohio. Midway through the &lsquo;44 season, the Browns persuaded Galehouse to be their &ldquo;Sunday pitcher.&rdquo; After his Saturday shift, he&rsquo;d take an overnight train to St. Louis, pitch the first game of the Sunday double-header, then go back to Akron. It soon became clear that the Browns were on their way to first place in the American League. Galehouse came back to the Browns full-time, helping them win the pennant and Game 1 of the World Series.</p><p>&ldquo;The World Series Cardinals had Stan Musial, Whitey Kurowski, Marty Marion, Walker Cooper, Mort Cooper&hellip; they had pretty much a big league team,&rdquo; Galehouse recalled. (Most major league teams, like the Browns, were made up of 4-F guys who weren&rsquo;t able to fight in the war.) &ldquo;They weren&rsquo;t an easy squad,&rdquo; he said. But that didn&rsquo;t stop him from getting the win.</p>",
				details: {
					position: "P",
					bats: "Right",
					arm: "Right",
					height: {
						feet: 6,
						inches: 1
					},
					weight: 195,
					city: "Marshallville, OH",
					born: {
						year: 1911,
						month: 12,
						day: 7
					}
				}
			},

			{
				key: "hal-epps",
				firstName: "Hal",
				lastName: "Epps",
				url: "http://www.baseball-reference.com/players/e/eppsha01.shtml",
				bio: "<p>Hal Epps, known to some as &ldquo;The Reindeer,&rdquo; was one of just a handful of players to claim allegiance to both St. Louis teams. After a few years in the minors, 28 games with the Cardinals (in 1938 and 1940), and a tour in the South Pacific, Epps joined the Browns in 1943. Known for his speedy wheels and his dedication to making tough plays, Epps contributed greatly to the 9-game winning streak that helped the Browns win the 1944 AL pennant.</p>",
				cardinalsPlayer: true,
				details: {
					position: "CF",
					bats: "Left",
					arm: "Left",
					height: {
						feet: 6,
						inches: 0
					},
					weight: 175,
					city: "Athens, GA",
					born: {
						year: 1914,
						month: 3,
						day: 26
					}
				}
			},

			{
				key: "al-hollingsworth",
				firstName: "Al",
				lastName: "Hollingsworth",
				url: "http://www.baseball-reference.com/players/h/hollial01.shtml",
				bio: "<p>He was the pitcher they called &ldquo;Boots.&rdquo; 4 was not his lucky number — he came into Game 4 of the 1944 World Series in the 4th inning, 4 runs back, and never had the opportunity for a save. However, the following year, Boots brought home his second winning record of his Browns career and an ERA under 3.00.</p><p>After the Browns: Hollingsworth played his last game on September 22, 1946, as a member of the White Sox club, ending his professional playing career of 20 consecutive seasons (including time in the minors). He then became a manager for the St. Louis Cardinals and Cleveland Indians, a pitching coach for the Redbirds, and a scout for 4 major league teams.</p>",
				details: {
					position: "P",
					bats: "Left",
					arm: "Left",
					height: {
						feet: 6,
						inches: 0
					},
					weight: 174,
					city: "Cincinatti, OH",
					born: {
						year: 1908,
						month: 2,
						day: 25
					}
				}
			},

			{
				key: "willis-hudlin",
				firstName: "Willis",
				lastName: "Hudlin",
				url: "http://www.baseball-reference.com/players/h/hudliwi01.shtml",
				bio: "<p>Nicknamed &ldquo;Ace,&rdquo; Willis Hudlin was known for his sinker. It must have been a good one, because four teams wanted it&hellip; in one season. In 1940, Ace played for four different clubs, a distinction he shares with only a handful of other MLB players. There&rsquo;s one achievement that&rsquo;s all his own, giving up Babe Ruth&rsquo;s 500th home run. Don&rsquo;t feel too bad for Ace, though, he won the game 6-5.</p>",
				details: {
					position: "P",
					bats: "Right",
					arm: "Right",
					height: {
						feet: 6,
						inches: 0
					},
					weight: 190,
					city: "Wagoner, OK",
					born: {
						year: 1906,
						month: 5,
						day: 23
					}
				}
			},

			{
				key: "tom-hafey",
				firstName: "Tom",
				lastName: "Hafey",
				url: "http://www.baseball-reference.com/players/h/hafeyto01.shtml",
				bio: "<p>Tom &ldquo;Heave-O&rdquo; Hafey was born into a baseball family — his brother Bud and cousin Chick also played in the majors. While he had a rocket of an arm, his brief career skipped around a bit. After a season with the Giants in 1939, Hafey joined the Browns for 8 games in 1944. He played a game at first base, a game at third base, three games in left field, pinch hit four times, then said goodbye to baseball.</p>",
				details: {
					position: "3B, LF",
					bats: "Right",
					arm: "Right",
					height: {
						feet: 6,
						inches: 1
					},
					weight: 180,
					city: "Berkeley, CA",
					born: {
						year: 1913,
						month: 7,
						day: 12
					}
				}
			},

			{
				key: "mike-kreevich",
				firstName: "Mike",
				lastName: "Kreevich",
				url: "http://www.baseball-reference.com/players/k/kreevmi01.shtml",
				bio: "<p>By the time he reached the Browns in 1943, 35-year-old Mike Kreevich had seen a lot: coal mines, the Great Depression, and both Chicago baseball teams. But in 1944, he saw something really special: a World Series. Sure, he struck out five times. But he still managed three doubles and a .231 average for the Series.</p>",
				details: {
					position: "CF",
					bats: "Right",
					arm: "Right",
					height: {
						feet: 5,
						inches: 7
					},
					weight: 168,
					city: "Mount Olive, IL",
					born: {
						year: 1908,
						month: 10,
						day: 6
					}
				}
			},

			{
				key: "sig-jackuki",
				firstName: "Sig",
				lastName: "Jackuki",
				url: "http://www.baseball-reference.com/players/j/jakucsi01.shtml",
				bio: "<p>On the field and off, Big Sig Jakucki&rsquo;s story is as much of a roller coaster as the entirety of the Browns&rsquo; legacy. Ellis Clary recalls, &ldquo;He&rsquo;s a tough son of a bitch&hellip; but you couldn&rsquo;t help but like him if he was on your side. He was a fun guy, but gee, at night he&rsquo;d get a few belts and turn over a joint somewhere. No matter where he was, he&rsquo;d get in trouble.&rdquo;</p><p>Signed to the team in 1936, Jakucki&rsquo;s first year was a bust. Then, when World War II left the Browns lacking for players in 1944, they re-signed him. Jakucki not only went 13-9 that year, he pitched the last game of the season against the Yankees, helping the Browns clinch the pennant with a 5-2 win. Unfortunately, he went down fighting in a 5-1 loss in Game 4 of the World Series, giving up 4 runs before the 4th inning. Still, the Browns would never have gotten that far without him.</p>",
				details: {
					position: "P",
					bats: "Right",
					arm: "Right",
					height: {
						feet: 6,
						inches: 2
					},
					weight: 198,
					city: "Camden, NJ",
					born: {
						year: 1909,
						month: 8,
						day: 20
					}
				}
			},

			{
				key: "chet-laabs",
				firstName: "Chet",
				lastName: "Laabs",
				url: "http://www.baseball-reference.com/players/l/laabsch01.shtml",
				bio: "<p>Two home runs in back-to-back innings? That&rsquo;s a big deal for any player. But in a game that clinched the Browns&rsquo; only American League pennant, on the last day of the season? That&rsquo;s legendary. And that&rsquo;s the legend of Chet Laabs.</p>",
				details: {
					position: "OF",
					bats: "Right",
					arm: "Right",
					height: {
						feet: 5,
						inches: 8
					},
					weight: 175,
					city: "Milwaukee, WI",
					born: {
						year: 1912,
						month: 04,
						day: 30
					}
				}
			},

			{
				key: "jack-kramer",
				firstName: "Jack",
				lastName: "Kramer",
				url: "http://www.baseball-reference.com/players/k/krameja01.shtml",
				bio: "<p>At the start of the 1943 season, Jack Kramer earned the Browns their 8th straight Opening Day victory. Just a week later, he claimed the 6th win of the team&rsquo;s 9-game streak — the last of which he also won. With an impressive 17-13 regular season record, Kramer no doubt helped the Browns earn the pennant. Yet, his most notable moment awaited him in the post-season: He pitched a victorious Game Three in that year&rsquo;s historic all-St. Louis World Series.</p><p>This three-time All-Star (1945-1947) kept the dugout in stitches with his Bugs Bunny impression and wicked wit, but he occasionally let his wild side get the best of him. In 1944, Indians player-manager Lou Boudreau came up to the plate. The dugout was talking smack behind him. Kramer had no qualms about giving Boudreau a fastball to the ribs. Kramer met him at the first-baseline with a warning: &ldquo;If you don&rsquo;t keep those guys on the bench quiet, I&rsquo;ll stick one in your ear the next time you come to bat.&rdquo;</p>",
				details: {
					position: "P",
					bats: "Right",
					arm: "Right",
					height: {
						feet: 6,
						inches: 2
					},
					weight: 190,
					city: "New Orleans, LA",
					born: {
						year: 1918,
						month: 1,
						day: 5
					}
				}
			},

			{
				key: "gene-moore",
				firstName: "Gene",
				lastName: "Moore",
				url: "http://www.baseball-reference.com/players/m/moorege03.shtml",
				bio: "<p>Gene &ldquo;Rowdy&rdquo; Moore played 14 seasons in the majors, but it was number 13 that was especially lucky. The journeyman outfielder played for six different teams before joining the &lsquo;44 Browns, where he hit 13 doubles on the way to winning the American League pennant.</p>",
				cardinalsPlayer: true,
				details: {
					position: "RF",
					bats: "Left",
					arm: "Left",
					height: {
						feet: 5,
						inches: 11
					},
					weight: 175,
					city: "Lancaster, TX",
					born: {
						year: 1909,
						month: 26,
						day: 8
					}
				}
			},

			{
				key: "bob-muncrief",
				firstName: "Bob",
				lastName: "Muncrief",
				url: "http://www.baseball-reference.com/players/m/muncrbo01.shtml",
				bio: "<p>Bob Muncrief pitched for the Browns for 9 seasons. In 1941, he almost — almost — ended DiMaggio&rsquo;s hitting streak at 35. Later, he helped the Browns fight their way to the 1944 American League pennant victory. He also played in the All-Star Game that same year.</p>",
				details: {
					position: "P",
					bats: "Right",
					arm: "Right",
					height: {
						feet: 6,
						inches: 2
					},
					weight: 190,
					city: "Madill, OK",
					born: {
						year: 1916,
						month: 1,
						day: 28
					}
				}
			},

			{
				key: "tom-turner",
				firstName: "Tom",
				lastName: "Turner",
				url: "http://www.baseball-reference.com/players/t/turneto01.shtml",
				bio: "<p>Tom Turner broke into the bigs as a 23-year-old rookie. He was the Browns&rsquo; backstop in 1944, then went off to serve his country in WWII. Turner returned from service, but never returned to the majors. After a brief stint in the Pacific Coast League in 1946, he put down his lumber for good and retired among the timbers of the Pacific Northwest.</p>",
				details: {
					position: "C",
					bats: "Right",
					arm: "Right",
					height: {
						feet: 6,
						inches: 2
					},
					weight: 195,
					city: "Custer, OK",
					born: {
						year: 1916,
						month: 9,
						day: 8
					}
				}
			},

			{
				key: "nels-potter",
				firstName: "Nels",
				lastName: "Potter",
				url: "http://www.baseball-reference.com/players/p/pottene01.shtml",
				bio: "<p>Nels Potter never shaved on days he took the mound. Whether it was due to his superstition or his stinky cheddar, Nels went 19-7 in 1944 regular season games. But for some reason, he shaved before his start in Game Two of the 1944 World Series — a game he should&rsquo;ve won. Despite the loss, Potter&rsquo;s 1944 season was still remarkable. He finished 9th in American League MVP voting, had 16 complete games under his belt, 3 shutouts and a 2.83 ERA. Potter continued to play for the Browns with mixed results until 1948.</p>",
				cardinalsPlayer: true,
				details: {
					position: "P",
					bats: "Left",
					arm: "Right",
					height: {
						feet: 5,
						inches: 11
					},
					weight: 180,
					city: "Mount Morris, IL",
					born: {
						year: 1911,
						month: 23,
						day: 8
					}
				}
			},

			{
				key: "floyd-baker",
				firstName: "Floyd",
				lastName: "Baker",
				url: "http://www.baseball-reference.com/players/b/bakerfl01.shtml",
				bio: "<p>In his second year with the Browns, Floyd Baker played in 44 games. The year was 1944. And it was the only year the Browns clinched the American League pennant. Coincidence? Possibly. But Baker still called that season the &ldquo;highlight of [his] career.&rdquo;</p>",
				details: {
					position: "3B, 2B, SS",
					bats: "Left",
					arm: "Right",
					height: {
						feet: 5,
						inches: 9
					},
					weight: 160,
					city: "Luray, VA",
					born: {
						year: 1916,
						month: 10,
						day: 10
					}
				}
			},

			{
				key: "alvis-shirley",
				firstName: "Alvis &ldquo;Tex&rdquo;",
				lastName: "Shirley",
				url: "http://www.baseball-reference.com/players/s/shirlte01.shtml",
				bio: "<p>They called him &ldquo;Tex&rdquo; for good reason. He was known to be a little rowdy, on the mound and off, and he never went without a hat. In Game Four of the 1944 World Series, Tex pitched the last two innings without allowing a run.</p>",
				details: {
					position: "P",
					bats: "Switch",
					arm: "Right",
					height: {
						feet: 6,
						inches: 1
					},
					weight: 175,
					city: "Birthright, TX",
					born: {
						year: 1918,
						month: 4,
						day: 25
					}
				}
			},

			{
				key: "mike-chartak",
				firstName: "Mike",
				lastName: "Chartak",
				url: "http://www.baseball-reference.com/players/c/chartmi01.shtml",
				bio: "<p>It wasn&rsquo;t hard for Mike Chartak to choose between what he was doing (working the line at a war production factory) and what he wanted to do (play professional baseball full time). It was hard, however, for Chartak to hit the ball in the &lsquo;44 World Series. Two at-bats, two strikeouts — the second of which ended the Browns&rsquo; hopes for a Game 7.</p>",
				details: {
					position: "RF, 1B",
					bats: "Left",
					arm: "Left",
					height: {
						feet: 6,
						inches: 2
					},
					weight: 180,
					city: "Brooklyn, NY",
					born: {
						year: 1916,
						month: 4,
						day: 28
					}
				}
			},

			{
				key: "steve-sundra",
				firstName: "Steve",
				lastName: "Sundra",
				url: "http://www.baseball-reference.com/players/s/sundrst01.shtml",
				bio: "<p>Steve Sundra tasted World Series victory in 1938, as a member of the Yankees club. He brought a whiff of that victory with him when he joined the Browns, bringing home three consecutive winning records (1942&mdash;1944). He went on to serve in the military for a year, then rejoined the team for a short and much less productive stint.</p>",
				details: {
					position: "P",
					bats: "Right",
					arm: "Right",
					height: {
						feet: 6,
						inches: 2
					},
					weight: 190,
					city: "Luxor, PA",
					born: {
						year: 1910,
						month: 3,
						day: 27
					}
				}
			},

			{
				key: "mark-christman",
				firstName: "Mark",
				lastName: "Christman",
				url: "http://www.baseball-reference.com/players/c/chrisma01.shtml",
				bio: "<p>Born and raised on Browns&rsquo; baseball, Mark Christman got 148 hits in 148 games for the pennant-winning 1944 team. Christman, with a number six on his jersey, played in all six World Series games, but ended up with six strikeouts and just one RBI. Maybe six wasn&rsquo;t really his number.</p>",
				details: {
					position: "P",
					bats: "Right",
					arm: "Right",
					height: {
						feet: 5,
						inches: 11
					},
					weight: 175,
					city: "Maplewood, MO",
					born: {
						year: 1913,
						month: 10,
						day: 21
					}
				}
			},

			{
				key: "lefty-west",
				firstName: "Lefty",
				lastName: "West",
				url: "http://www.baseball-reference.com/players/w/westle01.shtml",
				bio: "<p>If Lefty West would have picked up a bat before he picked up a ball, he might have gone by Righty — he hit from the right side of the plate but pitched from the left. West spent &lsquo;44 with the Browns as a reliever and transitioned to a starter in 1945 before bowing out of the big leagues in September of that year.</p>",
				details: {
					position: "P",
					bats: "Right",
					arm: "Left",
					height: {
						feet: 6,
						inches: 0
					},
					weight: 165,
					city: "Gibsonville, NC",
					born: {
						year: 1915,
						month: 9,
						day: 3
					}
				}
			},

			{
				key: "ellis-clary",
				firstName: "Ellis",
				lastName: "Clary",
				url: "http://www.baseball-reference.com/players/c/claryel01.shtml",
				bio: "<p>He might have gone by &ldquo;Cat,&rdquo; but it was said that Ellis Clary could even make dogs laugh. Batting .256 during his Browns career, Clary probably cracked more jokes than bats. He only saw one at-bat in the &lsquo;44 World Series, but between their habits and his humor, he had a good time. &ldquo;They drank anything that would pour. If you went out with them, you wore a football helmet,&rdquo; he said about the 1944 team. According to some accounts, he&rsquo;d also sneak a listen to Chicago Bears games on the radio during the regular season. But lack of time at the plate didn&rsquo;t keep him out of the game. Clary went on to become a coach and well-respected scout for much of the next 50 years.</p>",
				details: {
					position: "2B, 3B",
					bats: "Right",
					arm: "Right",
					height: {
						feet: 5,
						inches: 8
					},
					weight: 160,
					city: "Valdosta, GA",
					born: {
						year: 1916,
						month: 9,
						day: 11
					}
				}
			},

			{
				key: "sam-zoldak",
				firstName: "Sam",
				lastName: "Zoldak",
				url: "http://www.baseball-reference.com/players/z/zoldasa01.shtml",
				bio: "<p>&ldquo;Sad Sam&rdquo; Zoldak was a rookie reliever for the 1944 Browns club, but the southpaw never pitched in the World Series. However, he still had a lot to smile about. With his sharp location, he went 23-27 and averaged a respectable 3.59 ERA over his 125-game Browns career. In 1948, Zoldak was traded to the Cleveland Indians for Bill Kennedy and $100,000 — but again was left out of the Fall Classic.</p>",
				details: {
					position: "P",
					bats: "Left",
					arm: "Left",
					height: {
						feet: 5,
						inches: 11
					},
					weight: 185,
					city: "Brooklyn, NY",
					born: {
						year: 1918,
						month: 12,
						day: 8
					}
				}
			},

			{
				key: "don-gutteridge",
				firstName: "Don",
				lastName: "Gutteridge",
				url: "http://www.baseball-reference.com/players/g/guttedo01.shtml",
				bio: "<p>Don Gutteridge started his major league career as a Cardinal in 1936, and joined the team across town 6 seasons later. Gutteridge was was a skillful and speedy fielder — he once turned 5 double-plays in a single game — though he was more known for his Gas House Gang style. According to Gutteridge, he was in good company: He said the Browns were &ldquo;a bunch of raggedy-assed guys, no college education. They just loved to play baseball.&rdquo; (A mostly true observation.)</p><p>Gutteridge was the leadoff batter in the Game One of the 1944 World Series. But before that, he was witness to the final out in the pennant-clinching last game of the season. He was playing second base when Oscar Grimes popped out to George McQuinn, just behind first. &ldquo;It was a foul ball and it went way high and I run over there&hellip; and I hollered, &lsquo;Squeeze it George, squeeze it George, squeeze it!&rsquo; And old George squeezed it and we won the pennant,&rdquo; Gutteridge recalls. &ldquo;It took me about 15 minutes to get back to the dugout,&rdquo; he explains, &ldquo;because the minute that last ball hit into George [McQuinn]&rsquo;s glove, we were swamped. George and I had to fight our way over to our dugout&hellip; There was a lot, a lot of people on that field long before we ever got there. I think (the fans) already jumped over the wall and they swarmed us.&rdquo;</p>",
				cardinalsPlayer: true,
				details: {
					position: "2B, 3B",
					bats: "Right",
					arm: "Right",
					height: {
						feet: 5,
						inches: 10
					},
					weight: 165,
					city: "Pittsburg, KS",
					born: {
						year: 1912,
						month: 6,
						day: 19
					}
				}
			},

			{
				key: "red-hayworth",
				firstName: "Red",
				lastName: "Hayworth",
				url: "http://www.baseball-reference.com/players/h/haywora01.shtml",
				bio: "<p>Red Hayworth&rsquo;s older brother, Ray, was a longtime catcher for the Detroit Tigers, and briefly played for the Brooklyn Dodgers and the New York Giants. In 1942, Ray even caught a game for the St. Louis Browns. Red joined the Browns two years later, after being stuck in the Yankees&rsquo; minor league clubs. Red&rsquo;s first season with the Browns (1944) was the highlight of his 2-year major league career. He was the starting catcher for all 6 games of the Browns&rsquo; only World Series appearance.</p>",
				details: {
					position: "C",
					bats: "Right",
					arm: "Right",
					height: {
						feet: 6,
						inches: 1
					},
					weight: 200,
					city: "High Point, NC",
					born: {
						year: 1916,
						month: 5,
						day: 14
					}
				}
			},

			{
				key: "george-mcquinn",
				firstName: "George",
				lastName: "McQuinn",
				url: "http://www.baseball-reference.com/players/m/mcquige02.shtml",
				bio: "<p>The only thing that wasn&rsquo;t quiet about George McQuinn was his bat. He consistently led the Browns at the plate, racking up over 1,200 hits in his 8 years with the team. He also caught the final pop fly that clinched the AL pennant for the Browns. (Don Gutteridge tells it vividly.) The star of the &lsquo;44 World Series, he hit .438 and drove in 5 of the team&rsquo;s 9 runs. The six time All-Star also hit the Browns&rsquo; only home run in the series, leading the team to a 2-1 victory in Game One.</p>",
				details: {
					position: "1B",
					bats: "Left",
					arm: "Left",
					height: {
						feet: 5,
						inches: 11
					},
					weight: 165,
					city: "Arlington, VA",
					born: {
						year: 1910,
						month: 29,
						day: 05
					}
				}
			},

			{
				key: "frank-mancuso",
				firstName: "Frank",
				lastName: "Mancuso",
				url: "http://www.baseball-reference.com/players/m/mancufr01.shtml",
				bio: "<p>In 1943, Frank Mancuso couldn&rsquo;t even walk. As an Army paratrooper, he broke his back and leg in a botched practice jump. Doctors told him he&rsquo;d never play baseball again. They were wrong.</p><p>Because of his injury, he couldn&rsquo;t field fly balls — he&rsquo;d pass out if he looked straight up. But that didn&rsquo;t keep him from a big-time win. Together with fellow first-year catcher Myron &ldquo;Red&rdquo; Hayworth, Mancuso helped the &lsquo;44 Browns capture the American League championship, the first team to ever do so with two rookie catchers.</p>",
				details: {
					position: "C",
					bats: "Right",
					arm: "Right",
					height: {
						feet: 6,
						inches: 0
					},
					weight: 195,
					city: "Houston, TX",
					born: {
						year: 1918,
						month: 5,
						day: 23
					}
				}
			},

			{
				key: "milt-byrnes",
				firstName: "Milt",
				lastName: "Byrnes",
				url: "http://www.baseball-reference.com/players/b/byrnemi01.shtml",
				bio: "<p>They called him Skippy, but Milt Byrnes sure knew how to draw a walk. In his 3-year major league career, he earned 199 bases on balls — the 26th highest BB count of all batters since 1901 with 1,500 career at-bats.</p>",
				details: {
					position: "OF",
					bats: "Left",
					arm: "Left",
					height: {
						feet: 5,
						inches: 10
					},
					weight: 170,
					city: "St. Louis, MO",
					born: {
						year: 1916,
						month: 11,
						day: 15
					}
				}
			},

			{
				key: "joe-schultz",
				firstName: "Joe",
				lastName: "Schultz",
				url: "http://www.baseball-reference.com/players/s/schuljo05.shtml",
				bio: "<p>Joe Schultz was practically born at the backstop. His dad, Joe Sr., was an outfielder for all but one of the National League teams. In 1932, Joe Sr. was managing the Class A Houston Buffaloes. Though he was just the batboy, Joe Jr. made his first professional plate appearance as a pinch hitter at the ripe age of 13. Ultimately, Joe Jr. would spend most of his career in his hometown. He was a backup catcher and pinch hitter for the Browns, bringing his solid glove and even better sense of humor to 218 games over 6 years (1943-1948).</p>",
				details: {
					position: "C, PH",
					bats: "Left",
					arm: "Right",
					height: {
						feet: 5,
						inches: 11
					},
					weight: 180,
					city: "Chicago, IL",
					born: {
						year: 1918,
						month: 8,
						day: 29
					}
				}
			},

			{
				key: "al-zarilla",
				firstName: "Al",
				lastName: "Zarilla",
				url: "http://www.baseball-reference.com/players/z/zarilal01.shtml",
				bio: "<p>&ldquo;Zarilla slud into third!&rdquo; called Dizzy Dean. This now-sorta-famous quip isn&rsquo;t the only reason we remember Al &ldquo;Zeke&rdquo; Zarilla. He scored and drove in a run to help the Browns win Game 3 of the 1944 World Series.</p><p>After the Browns: Zarilla was traded to the Boston Red Sox in 1949, where he would later achieve career highs in slugging percentage, runs and walks. On June 8, 1950, he tied a still-standing major league record when he hit 4 doubles in a game. He also spent time with the White Sox and, returned to the Browns briefly, but he finished out his career with the Red Sox in 1953.</p>",
				details: {
					position: "OF",
					bats: "Left",
					arm: "Right",
					height: {
						feet: 5,
						inches: 11
					},
					weight: 180,
					city: "Los Angeles, CA",
					born: {
						year: 1919,
						month: 5,
						day: 1
					}
				}
			},

			{
				key: "chuck-stevens",
				firstName: "Chuck",
				lastName: "Stevens",
				url: "http://www.baseball-reference.com/players/s/stevech01.shtml",
				bio: "<p>After a handful of years in the Browns&rsquo; minor league clubs, Chuck Stevens landed a major league gig in 1941. However, he only played 4 games with the Browns before he left for the Air Force. Stevens rejoined the Browns for a season in 1946, and again in 1948.</p><p>On July 9, 1948, Stevens came up to bat against Satchel Paige. It was Paige&rsquo;s first game in the Bigs. The two had faced each other in several exhibition games in California, and, although Paige&rsquo;s pitching reputation preceded him, Stevens hadn&rsquo;t thought too much of it. On the second pitch, he smacked a line drive out to left field, marking the first major league hit off of the soon-to-be legend.</p><p>&ldquo;Everybody was taken by Satchel and his reputation was awesome,&rdquo; Stevens said. &ldquo;When I got that hit against him, I was never terribly impressed by it, but the people thought that was a great accomplishment. To me, it was just, he was just another pitcher.&rdquo;</p>",
				details: {
					position: "1B",
					bats: "Switch",
					arm: "Left",
					height: {
						feet: 6,
						inches: 1
					},
					weight: 180,
					city: "Van Houten, NM",
					born: {
						year: 1918,
						month: 7,
						day: 10
					}
				}
			},

			{
				key: "tom-jordan",
				firstName: "Tom",
				lastName: "Jordan",
				url: "http://www.baseball-reference.com/players/j/jordato01.shtml",
				bio: "<p>Tom Jordan appeared in all of 39 games in the majors, but spent nearly 20 years playing the game he loved. Jordan started his baseball career at age 18 on a Class D team. Over the next six years, he worked his way up through the system. In 1944, he finally got his chance in the big show. His last cup of coffee was his first plate appearance for the Browns in 1948. Jordan returned to the minors and unaffiliated ball in 1949, where he stayed as a player/manager until the age of 37. Not a bad life for a kid from Lawton, Oklahoma.</p>",
				details: {
					position: "C, PH",
					bats: "Right",
					arm: "Right",
					height: {
						feet: 6,
						inches: 1
					},
					weight: 195,
					city: "Lawton, OK",
					born: {
						year: 1919,
						month: 9,
						day: 5
					}
				}
			},

			{
				key: "dick-starr",
				firstName: "Dick",
				lastName: "Starr",
				url: "http://www.baseball-reference.com/players/s/starrdi01.shtml",
				bio: "<p>After a rough first season with the Browns (1949), Dick Starr was a bright spot for the Browns in 1950. With a 7-5 record, he was the Browns&rsquo; only pitcher with a winning record.  </p>",
				details: {
					position: "P",
					bats: "Right",
					arm: "Right",
					height: {
						feet: 6,
						inches: 3
					},
					weight: 190,
					city: "Kittanning, PA",
					born: {
						year: 1921,
						month: 3,
						day: 2
					}
				}
			},

			{
				key: "george-elder",
				firstName: "George",
				lastName: "Elder",
				url: "http://www.baseball-reference.com/players/e/elderge01.shtml",
				bio: "<p>George Elder appeared in only 41 games during his major league career, all with the Browns in 1949. In his career, he hit exactly as many times as he struck out — 11 apiece. He is one of only two major league baseball players from Lebanon, KY.</p>",
				details: {
					position: "PH, PR, LF",
					bats: "Left",
					arm: "Right",
					height: {
						feet: 5,
						inches: 11
					},
					weight: 180,
					city: "Lebanon, KY",
					born: {
						year: 1921,
						month: 3,
						day: 10
					}
				}
			},

			{
				key: "neil-berry",
				firstName: "Neil",
				lastName: "Berry",
				url: "http://www.baseball-reference.com/players/b/berryne01.shtml",
				bio: "<p>Neil Berry was a utility infielder for the Browns for a mere 37 games in 1953. He was released in late August, then picked up by the Chicago White Sox a few days later. Some would consider it irony when he was traded to Baltimore&rsquo;s shiny new team (sort of) for the 1954 season.</p>",
				details: {
					position: "SS, 2B, 3B",
					bats: "Right",
					arm: "Right",
					height: {
						feet: 5,
						inches: 10
					},
					weight: 168,
					city: "Kalamazoo, MI",
					born: {
						year: 1922,
						month: 1,
						day: 11
					}
				}
			},

			{
				key: "johnny-hetki",
				firstName: "Johnny",
				lastName: "Hetki",
				url: "http://www.baseball-reference.com/players/h/hetkijo01.shtml",
				bio: "<p>Even though Johnny Hetki only pitched in three games for the 1952 Browns, he still managed to net four strikeouts. He took the mound in a Browns uniform for 9.1 innings total, which is technically a complete game. It just didn&rsquo;t happen all at the same time.</p>",
				details: {
					position: "P",
					bats: "Right",
					arm: "Right",
					height: {
						feet: 6,
						inches: 1
					},
					weight: 202,
					city: "Leavenworth, KS",
					born: {
						year: 1922,
						month: 5,
						day: 12
					}
				}
			},

			{
				key: "jim-rivera",
				firstName: "Jim",
				lastName: "Rivera",
				url: "http://www.baseball-reference.com/players/r/riverji01.shtml",
				bio: "<p>Daredevil. Army Corpsman. Light-heavyweight boxer. Inmate. And finally, major leaguer. Jungle Jim Rivera, as he came to be called, had many identities. Not all of them were friendly, but they earned him a lot of attention.</p><p>In 1951, Rivera was named the Pacific Coast League MVP. The White Sox quickly snapped him up, then the Browns got him in a 3-team, 8-player trade before the start of the 1952 season.</p><p>Browns manager Rogers Hornsby once said that Rivera was &ldquo;the only man I would pay admission to see.&rdquo; He slid head-first before it was in style. He made crowd-pleasing, game-saving catches. He was an all-around clutch player. As one reporter put it, &ldquo;He runs in the outfield like a deer, on the bases like an express train, and he throws like a rifle.&rdquo;</p><p>Unfortunately, Rivera&rsquo;s spunk and style didn&rsquo;t outweigh his early-season slump. He was traded back to the White Sox, and continued to make the news for the next 10 years.</p>",
				details: {
					position: "OF",
					bats: "Left",
					arm: "Left",
					height: {
						feet: 6,
						inches: 0
					},
					weight: 196,
					city: "New York, NY",
					born: {
						year: 1921,
						month: 7,
						day: 22
					}
				}
			},

			{
				key: "don-lenhardt",
				firstName: "Don",
				lastName: "Lenhardt",
				url: "http://www.baseball-reference.com/players/l/lenhado01.shtml",
				bio: "<p>Don Lenhardt was nicknamed &ldquo;Footsie&rdquo; because he often had trouble finding shoes that fit. He also had trouble finding a club that fit — he was traded 6 times in 5 years. With a career high of 22 home runs, his best season was his first. (This begs the question: which came first, the trades or the stats?) Lenhardt was also one of the players to be transplanted when the Browns became the Baltimore Orioles in 1954.</p>",
				details: {
					position: "LF, 1B, 3B",
					bats: "Right",
					arm: "Right",
					height: {
						feet: 6,
						inches: 3
					},
					weight: 190,
					city: "Alton, IL",
					born: {
						year: 1922,
						month: 10,
						day: 4
					}
				}
			},

			{
				key: "tom-wright",
				firstName: "Tom",
				lastName: "Wright",
				url: "http://www.baseball-reference.com/players/w/wrighto01.shtml",
				bio: "<p>Tom Wright was known as a pinch hitting specialist. In a 1950 Sporting News article, Steve O&rsquo;Neill said, &ldquo;You can call on him any time and he&rsquo;s just as likely as not to deliver the hit you need. Lots of players lose that split-second timing when they lay off for a while. But Tom can sit on the bench for three weeks, then get up and hit just as well as if he was in there every day.&rdquo; Wright would have much rather played every day than sit on the bench for three weeks, but it&rsquo;s good to know he could have done either equally as well.</p>",
				details: {
					position: "PH, OF",
					bats: "Left",
					arm: "Right",
					height: {
						feet: 5,
						inches: 11
					},
					weight: 180,
					city: "Shelby, NC",
					born: {
						year: 1923,
						month: 9,
						day: 22
					}
				}
			},

			{
				key: "billy-demars",
				firstName: "Billy",
				lastName: "Demars",
				url: "http://www.baseball-reference.com/players/d/demarbi01.shtml",
				bio: "<p>In his 209 games with the Browns, Billy &ldquo;Kid&rdquo; DeMars only had 13 RBIs. Although he came up short on the field, he went on to become one of the game&rsquo;s most respected batting coaches.</p><p>&ldquo;Baseball was my lifetime, 58 years. Every job has its ups and downs, but I still can't see me doing anything else. It was a great ride.&rdquo; &mdash; Billy DeMars</p><p>After the Browns: Billy DeMars didn&rsquo;t move with the Browns to Baltimore, but in 1958 he began an 11-year post as a manager in the Orioles&rsquo; farm system. From there, he moved up to the majors and found success as a batting coach. He was with the Phillies for 13 years, including their franchise-first World Series win in 1980. He later coached the Expos and the Reds, and earned the high respect of Pete Rose, who said DeMars was the best hitting coach he&rsquo;d ever had.</p>",
				details: {
					position: "SS, 3B",
					bats: "Right",
					arm: "Right",
					height: {
						feet: 5,
						inches: 10
					},
					weight: 160,
					city: "Brooklyn, NY",
					born: {
						year: 1925,
						month: 8,
						day: 26
					}
				}
			},

			{
				key: "frank-saucier",
				firstName: "Frank",
				lastName: "Saucier",
				url: "http://www.baseball-reference.com/players/s/saucifr01.shtml",
				bio: "<p>Out of the 14 times that Frank Saucier stepped up to the plate for the 1951 Browns, he&rsquo;s usually remembered for the one time he was asked not to. Saucier was replaced by pinch-hitter and shortest-ever baseball player Eddie Gaedel as part of a Bill Veeck promotional stunt in August 1951.</p>",
				details: {
					position: "PH, PR, OF",
					bats: "Left",
					arm: "Right",
					height: {
						feet: 6,
						inches: 1
					},
					weight: 180,
					city: "Leslie, MO",
					born: {
						year: 1926,
						month: 5,
						day: 28
					}
				}
			},

			{
				key: "johnny-groth",
				firstName: "Johnny",
				lastName: "Groth",
				url: "http://www.baseball-reference.com/players/g/grothjo01.shtml",
				bio: "<p>In 1949, Life magazine dubbed a young Johnny Groth the next Joe DiMaggio. Just 4 years later, Groth had the worst season of his career with the Browns during their final season in St. Louis. Even after a dismal season, he provided a little light at the end of a long tunnel for the soon-to-be defunct team: He scored the last-ever run for the Browns in a 2-1 loss to the Chicago White Sox on September 27, 1953.</p>",
				details: {
					position: "CF",
					bats: "Right",
					arm: "Right",
					height: {
						feet: 6,
						inches: 0
					},
					weight: 182,
					city: "Chicago, IL",
					born: {
						year: 1926,
						month: 7,
						day: 23
					}
				}
			},

			{
				key: "ed-mickelson",
				firstName: "Ed",
				lastName: "Mickelson",
				url: "http://www.baseball-reference.com/players/m/mickeed01.shtml",
				bio: "<p>Ed Mickelson recorded his first hit with the Browns&rsquo; cross-town rivals in 1950, but his last one was a little more memorable. Mickelson recorded the last-ever RBI for the Browns in a 2-1 extra-innings loss to the Chicago White Sox in September 1953.</p>",
				cardinalsPlayer: true,
				details: {
					position: "1B",
					bats: "Right",
					arm: "Right",
					height: {
						feet: 6,
						inches: 3
					},
					weight: 205,
					city: "Ottawa, IL",
					born: {
						year: 1926,
						month: 9,
						day: 9
					}
				}
			},

			{
				key: "don-johnson",
				firstName: "Don",
				lastName: "Johnson",
				url: "http://www.baseball-reference.com/players/j/johnsdo03.shtml",
				bio: "<p>Although he wasn&rsquo;t exactly a rookie, one could say Don Johnson cut his pitching teeth during his years with the Browns. His two losing seasons (1950-1951) were a poor measure of his future prowess — he went on to become the International League&rsquo;s most valuable pitcher in 1957.</p>",
				details: {
					position: "P",
					bats: "Right",
					arm: "Right",
					height: {
						feet: 6,
						inches: 3
					},
					weight: 200,
					city: "Portland, OR",
					born: {
						year: 1926,
						month: 11,
						day: 12
					}
				}
			},

			{
				key: "roy-sievers",
				firstName: "Roy",
				lastName: "Sievers",
				url: "http://www.baseball-reference.com/players/s/sievero01.shtml",
				bio: "<p>Roy &ldquo;Squirrel&rdquo; Sievers had a stellar rookie year. In fact, he was the American League Rookie of the Year in 1949, and was 18th in line for MVP. Sievers certainly earned it — he batted .306 with 16 home runs and 91 RBI. Shoulder and arm injuries crippled his playing time in his last three years with the Browns, but he remained a full-time major league player until the mid-1960s.</p>",
				details: {
					position: "OF, 1B",
					bats: "Right",
					arm: "Right",
					height: {
						feet: 6,
						inches: 1
					},
					weight: 195,
					city: "St. Louis, MO",
					born: {
						year: 1926,
						month: 11,
						day: 18
					}
				}
			},

			{
				key: "hal-hudson",
				firstName: "Hal",
				lastName: "Hudson",
				url: "http://www.baseball-reference.com/players/h/hudsoha01.shtml",
				bio: "<p>Some called him &ldquo;Bud.&rdquo; Others called him &ldquo;Lefty.&rdquo; After 9 seasons working his way through the Browns&rsquo; minor league clubs, he was finally called up. In 1952, the southpaw pitched relief in 3 games — half of his entire major league career.</p>",
				details: {
					position: "P",
					bats: "Left",
					arm: "Left",
					height: {
						feet: 5,
						inches: 10
					},
					weight: 175,
					city: "Grosse Pointe, MI",
					born: {
						year: 1927,
						month: 5,
						day: 4
					}
				}
			},

			{
				key: "al-naples",
				firstName: "Al",
				lastName: "Naples",
				url: "http://www.baseball-reference.com/players/n/napleal01.shtml",
				bio: "<p>Al Naples&rsquo; most memorable hit was also his only hit. Ever. It was a double. Way to hustle, Al.</p><p>&ldquo;I ran like all get-out when I poked that double down the right field line for my first hit in the Big Show. I felt rather good after that.&rdquo;  &mdash; Al Naples, in One Hit Wonders: Baseball Stories (George Rose)</p>",
				details: {
					position: "SS",
					bats: "Right",
					arm: "Right",
					height: {
						feet: 5,
						inches: 9
					},
					weight: 168,
					city: "Staten Island, NY",
					born: {
						year: 1926,
						month: 8,
						day: 29
					}
				}
			},

			{
				key: "billy-hunter",
				firstName: "Billy",
				lastName: "Hunter",
				url: "http://www.baseball-reference.com/players/h/huntebi03.shtml",
				bio: "<p>Billy Hunter&rsquo;s first year with the Browns was the last year the club existed: 1953. Batting just over the Mendoza line, Hunter earned his keep as starting shortstop by flashing his leather — and his team spirit. Perhaps surprisingly, Hunter hit the last home run in Browns history on September 26, 1953. Hunter was one of few Brownies who went on to play for the 1954 Baltimore Orioles club.</p>",
				details: {
					position: "SS",
					bats: "Right",
					arm: "Right",
					height: {
						feet: 6,
						inches: 0
					},
					weight: 180,
					city: "Punxatawney, PA",
					born: {
						year: 1928,
						month: 4,
						day: 6
					}
				}
			},

			{
				key: "joe-demaestri",
				firstName: "Joe",
				lastName: "Demaestri",
				url: "http://www.baseball-reference.com/players/d/demaejo01.shtml",
				bio: "<p>Joe DeMaestri didn&rsquo;t have much of a bat, but he had a solid glove. And when it came to Rogers Hornsby, he had sharp words and no sugar for coating. &ldquo;He was the worst manager and worst person I ever played for,&rdquo; DeMaestri said. &ldquo;Everyone hated him.&rdquo; The only time he liked Hornsby was when Hornsby got fired. Marty Marion became skipper, and DeMaestri took Marion&rsquo;s spot at short. Also short was DeMaestri&rsquo;s time on the Browns. He was traded to the White Sox after just 81 games with the team.</p>",
				details: {
					position: "SS",
					bats: "Right",
					arm: "Right",
					height: {
						feet: 6,
						inches: 0
					},
					weight: 170,
					city: "San Francisco, CA",
					born: {
						year: 1928,
						month: 12,
						day: 9
					}
				}
			},

			{
				key: "bud-thomas",
				firstName: "Bud",
				lastName: "Thomas",
				url: "http://www.baseball-reference.com/players/t/thomabu02.shtml",
				bio: "<p>Bud Thomas played all 14 games of his career in September 1951. During those 14 games, he had 20 at-bats, 7 hits, 2 stolen bases and 1 home run. Not too shabby, Bud.</p>",
				details: {
					position: "SS",
					bats: "Right",
					arm: "Right",
					height: {
						feet: 6,
						inches: 0
					},
					weight: 180,
					city: "Sedalia, MO",
					born: {
						year: 1929,
						month: 3,
						day: 10
					}
				}
			},

			{
				key: "don-larsen",
				firstName: "Don",
				lastName: "Larsen",
				url: "http://www.baseball-reference.com/players/l/larsedo01.shtml",
				bio: "<p>His rookie (and only) season with the Browns, Don Larsen finished with a 7-12 record. But he was first on the team in innings pitched (192⅔) and complete games (7), and second in strikeouts. He also held the then-record for consecutive hits by a pitcher, with 7. Yet, his greatest victory didn&rsquo;t come until 1956, when he pitched the only perfect game in World Series history&hellip; for the Yankees.</p><p>After the Browns: Larsen stayed on in Baltimore when the Browns became the Orioles in 1954. That year, he led the league in losses, but one of his three wins included a 10-0 shutout against the Yankees. In 1956, his luck had turned around. He pitched a 4-hit shutout in a regular season doubleheader against the Orioles. Then, he made baseball — and World Series — history. One of only 23 perfect games in MLB history, Larsen&rsquo;s 97-pitch no-no came in Game 5, wearing Yankee pinstripes, facing the Dodgers.</p>",
				details: {
					position: "P",
					bats: "Right",
					arm: "Right",
					height: {
						feet: 6,
						inches: 4
					},
					weight: 215,
					city: "Mmichigan City, IN",
					born: {
						year: 1929,
						month: 8,
						day: 7
					}
				}
			},

			{
				key: "jw-porter",
				firstName: "J.W.",
				lastName: "Porter",
				url: "http://www.baseball-reference.com/players/p/porteja01.shtml",
				bio: "<p>Browns GM/Owner Bill Veeck wasn&rsquo;t just J.W. Porter&rsquo;s boss when he joined the club in 1952. He was his roommate. Porter, then just 19, lived with Veeck at Sportsman&rsquo;s Park during his 33-game career with the team. Porter might have been better at eating eggs than playing ball. His favorite meal was &ldquo;two dozen over light,&rdquo; which he&rsquo;d eat in one sitting. That&rsquo;s almost 5 times the number of runs he scored during his tenure with the squad.</p>",
				cardinalsPlayer: true,
				details: {
					position: "C, PH, OF",
					bats: "Right",
					arm: "Right",
					height: {
						feet: 6,
						inches: 2
					},
					weight: 180,
					city: "Shawnee, OK",
					born: {
						year: 1933,
						month: 1,
						day: 17
					}
				}
			},
			{
				key: "babe-martin",
				firstName: "Babe",
				lastName: "Martin",
				url: "http://www.baseball-reference.com/players/m/martiba01.shtml",
				bio: "<p>Babe Martin was born Boris Michael Martinovich in Seattle, Washington to Serbian immigrant parents. The Martinovich family moved to Zeigler, Illinois when Babe was year old and subsequently moved to St. Louis, Missouri after the death of Babe’s father.</p><p>He started his professional baseball career in 1940 and had a breakout year in 1944 with the Toledo Mud Hens, batting .350 in 114 games. The following season, he joined the St. Louis Browns. Martin retired in 1954. In 69 Major League games, he had 2 home runs, 18 RBI, and a .214 batting average.</p>",
				cardinalsPlayer: false,
				details: {
					position: "LF, 1B, C",
					bats: "Right",
					arm: "Right",
					height: {
						feet: 5,
						inches: 11
					},
					weight: 194,
					city: "Seattle, WA",
					born: {
						year: 1920,
						month: 3,
						day: 28
					}
				}
		},
		{
				key: "bill-jennings",
				firstName: "Bill",
				lastName: "Jennings",
				url: "http://www.baseball-reference.com/players/j/jennibi01.shtml",
				bio: "<p>A native of St. Louis, Missouri, Jennings played briefly for the St. Louis Browns during the 1951 season. Jennings posted a .179 average (35-for-195) in 64 games for the Browns, driving in 13 runs and scoring 20 times, while collecting 10 doubles, two triples, and one stolen base.</p>",
				cardinalsPlayer: false,
				details: {
					position: "SS",
					bats: "Right",
					arm: "Right",
					height: {
						feet: 6,
						inches: 2
					},
					weight: 175,
					city: "St. Louis, MO",
					born: {
						year: 1925,
						month: 9,
						day: 28
					}
				}
			}
		]
	},

	blog: {

		title: "News &amp; Events",

		posts: [
			{
				title: '“The Saint Louis Browns: The Team That Baseball Forgot” Premieres on Nine Network',
				slug: "browns-documentary-premiere",
				date: "February 20, 2018",
				excerpt: "Documentary Preserves a Legacy that was Nearly Erased",
				images: {
					news: "/images/blog/browns-news-generic1.jpg",
					article: "/images/blog/browns-article-generic1.jpg"
				},
				body: '<p>Continuing our efforts to preserve our beloved team’s legacy, we are excited and proud to announce the premiere of our new documentary “The St. Louis Browns: The Team That Baseball Forgot.” The film will air on Thursday, March 8, 2018 at 8 p.m. CT on KETC-TV, St. Louis’s local PBS affiliate.<p>Thank you to all of the people who contributed time, resources and commentary to this documentary, and a special thanks to our partners at HLK for producing and directing this hour-long film.<p>Narrated by actor and St. Louis native Jon Hamm, the documentary follows the journey from the team’s inception, through their ups and downs, until the sale of the franchise to Baltimore, where they became the Orioles and the history of the Browns was nearly erased. Fans can reminisce at the team’s on-field antics and St. Louis’s original baseball rivalry. Those unfamiliar with the Browns will be introduced to characters like 3-foot-7-inch Eddie Gaedel, a surprise pinch-hitter wearing a batboy uniform with the number 1/8, and will quickly understand the undeniable lovability of this misfit franchise. Audiences everywhere will see that, beneath the tarnish, there is true baseball gold.<p>“The St. Louis Browns: The Team That Baseball Forgot” features archival photos and video footage of the Browns, discussions with St. Louis Browns Historical Society board members Bill Rogers and Emmett McAuliffe, and current interviews with some of the team’s last living players. The film follows the 2017 release of the critically acclaimed book, <i>St. Louis Browns: The Story of a Beloved Team</i>, by Bill Borst, Bill Rogers and Ed Wheatley, and the 2015 launch of our award-winning website.<p>So, tune in and watch as we take a look back and relive the story of what could have been, but never was — of baseball legends lost to time, glorious gimmicks and a beloved team turned fraternity of failure. This is the story of a team that found its place in history by losing its home. But thanks to this documentary, it\'s a story forgotten no more.'
			},
			{
				title: "The St. Louis Browns 2017 Reunion Luncheon",
				slug: "browns-2017-reunion-luncheon",
				date: "August 30, 2017",
				excerpt: "Browns 2017 Reunion Luncheon Set for September 26, 2017",
				images: {
					news: "/images/blog/browns-news-generic2.jpg",
					article: "/images/blog/browns-article-generic2.jpg"
				},
				body: '<p>Browns 2017 Reunion Luncheon Set for September 26, 2017</p><p>The St. Louis Browns Historical Society and Fan Club announced their 2017 Reunion luncheon set for September 26 featuring Whitey Herzog, Don Larsen and Sonny Siebert. The luncheon will be held at the Holiday Inn Hwy 66 located at 10709 Watson Rd. at Lindbergh, in Sunset Hills – St. Louis, MO at 11:15.</p><p>Reservations for the luncheon can be made on-line from our <a target="_blank"  href="http://thestlbrowns.blogspot.com/2017/08/invitation-to-annual-st-louis-browns.html">reservation blog site</a>. Information is available at 314-892-8632 or e-mail to <a target="_blank"  href="mailto:stlbrowns@swbell.net">stlbrowns@swbell.net</a>.</p>'
			},
			{
				title: "Introducing a new book: The St. Louis Browns – The Story Of A Beloved Team",
				slug: "the-story-of-a-beloved-team",
				date: "August 30, 2017",
				excerpt: "Introducing a new book: The St. Louis Browns – The Story Of A Beloved Team",
				images: {
					news: "/images/blog/browns-news-generic1.jpg",
					article: "/images/blog/browns-article-generic1.jpg"
				},
				body: '<p>On September 15, 2017 there will be a national release of St. Louis Browns:  The Story of a Beloved Team, by Bill Borst, Bill Rogers and Ed Wheatley; published by Reedy Press of St. Louis, with a special forward by Bob Costas.</p><p>Be sure to get in on a first edition of what will certainly become a baseball collector’s item. Our first run is 4000 books and, in addition to being sold through our Fan Club, copies will also be available nationwide in major box stores, as well as online sellers like Amazon and Barnes & Noble, so we’re expecting the first run to go fast. The best way to get your copy is to reserve one when you make your reservations for the St. Louis Browns Fan Club Annual Luncheon, scheduled for Tuesday, September 26, 2017.</p><p>Reservations for the luncheon can be made on-line from our <a target="_blank"  href="http://thestlbrowns.blogspot.com/2017/08/introducing-new-book-st-louis-browns.html">reservation blog site</a>. Information is available at 314-892-8632 or e-mail to <a target="_blank"  href="mailto:stlbrowns@swbell.net">stlbrowns@swbell.net</a>.</p>'
			},
			{
				title: "Browns 32nd Reunion Luncheon Set for June 9, 2016",
				slug: "browns-32nd-reunion-luncheon",
				date: "May 5, 2016",
				excerpt: "Browns 32nd Reunion Luncheon Set for June 9, 2016",
				images: {
					news: "/images/blog/browns-news-generic2.jpg",
					article: "/images/blog/browns-article-generic2.jpg"
				},
				body: '<p>Browns 32nd Reunion Luncheon Set for June 9, 2016</p><p>The St. Louis Browns Historical Society and Fan Club announced their 32nd annual luncheon set for June 9 at the Sheraton Westport Chalet Hotel. More than 300 fans are expected with some traveling from coast to coast.</p><p>Club president, Bill Rogers, reports invitations have been sent to family members of the Rogers Hornsby and Satchel Paige families. According to Bill Rogers, these two players rank in the very top of professional baseball history. We may not know if any family members are able to attend , but we’re in close touch with them, says Rogers.</p><p>Reservations for the luncheon can be made on-line from our reservation blog site at <a target="_blank" href="http://2015browns.blogspot.com" >http://2015browns.blogspot.com</a> or by mail. Send check for $48 per reservation to St. Louis Browns Fan Club, PO Box 510047, St. Louis, MO 63161. Information is available at 314-892-8632 or e-mail to <a target="_blank" href="mailto:stlbrowns@swbell.net">stlbrowns@swbell.net</a>.</p>'
			},
			{
				title: "Yogi, Garver and the 1951 AL MVP Award",
				slug: "yogi-garver-and-1951-al-mvp-award",
				date: "September 27, 2015",
				excerpt: "The passing of Yogi Berra reminds us of a controversey near and dear to the hearts of Browns fans.",
				images: {
					news: "/images/blog/browns-news-yogi.jpg",
					article: "/images/blog/browns-article-yogi.jpg"
				},
				body: '<p>In 1951, Browns&rsquo; right-handed pitcher Ned Garver was setting the record that still stands for pitchers who won 20 games for a team that finished in last place and lost 100 games.  Better still, Ned was in the fourth year of an incredible four-year rWAR spurt (4.6, 4.1, 7.3, and 5.6) which started right in Garver&rsquo;s rookie season, 1948.  Meanwhile, in &rsquo;51, Yogi could rise no higher than seventh in any major batting category (except for home runs where he was in a three-way tie for fourth place with a not-so-incredible 27 dingers).</p><p>Yogi of course also had &ldquo;being a catcher&rdquo; going for him.  But the Yanks had only the third-best pitching staff in the eight-team league.   And the staff featured - not kids who might need some grooming from their battery-mate - but veteran all-stars like Vic Raschi, Allie Reynolds and Eddie Lopat.  So &ldquo;Where was the beef?&rdquo; (as Yogi might have said himself).</p><p>Fielding-wise, Yogi was solid, but not spectacular, ranking only third in caught-stealing and fielding percentages and ranking first in errors.</p><p>Garver seemed to be the clear MVP.</p><p>And so Ned thought. The night before the announcement was due, back home for the off-season in Ney, Ohio, Ned received a call from a wire service reporter out of Cleveland (Ned doesn&rsquo;t remember whether it was AP or UPI) congratulating Ned on his MVP victory, and asking for his comment.</p><p>But then the announcement came out that Berra had won.</p><div class="image-list"><div class="image"><img src="/images/blog/browns-article-yogi.jpg" alt="Yogi Berra AL M.V.P."><div class="caption">A griming Yogi Berra, center, Squat New York Yankee catcher, receives thumping congratulation from other Major Leaguers at American Baseball Academy in New York on Nov. 7, 1951 after learning that he will be named on November 8, most valuable player in the American League for 1951. Berra polled 184 votes to 157 for runner-up Ned Garver of the St. Louis Browns. From Left to right are: Sid Gordon, Boston Braves; Ed Lopat, Yankees; Berra; Gil Hodges, Brooklyn Dodgers, and Gil McDougald, Yankees. (AP Photo/John Rooney) <em>(John Rooney)</em></div></div></div><p>The theory is that the votes were rigged by the New York press. Both American League and (especially importantly) New York Yankee attendance was falling in 1951, after robust postwar gains for several years. The baseball minions – and the press – decided that the very last thing the game needed was for a member of the laughingstock St. Louis Browns to win the MVP, and a pitcher at that. The likable and comical Yogi was the candidate to bring everybody out of the doldrums.</p><p>Ned himself says that the information he received down through the years was that the New York press even left Garver&rsquo;s name off of some ballots.</p><p>Yogi would repeat the MVP award in 1954 and 1955 with somewhat more formidable numbers.  But his 1951 award was the most inauspicious AL MVP winner until 1965&rsquo;s Zoilo Versailles of the Minnesota Twins.  The Browns, for their part, would never win a modern (post-1931) MVP award.</p><div class="image-list"><div class="image"><img src="/images/blog/ned-garver-browns_6.jpg" alt="Ned Garver"><div class="caption large">&ldquo;Gee, Yogi, gimme a break!&rdquo;</div></div></div>'
			},
			{
				title: "Last of the Living Former Browns",
				slug: "last-of-living-former-browns",
				date: "August 20, 2015",
				excerpt: "In 1902, the original Milwaukee Brewers moved to St. Louis and became the St. Louis Browns.",
				images: {
					news: "/images/blog/browns-news-generic1.jpg",
					article: "/images/blog/browns-article-generic1.jpg"
				},
				body: '<p>From 1902 through 1953, the St. Louis Browns, won only a single American League pennant and that was in the 1944 WWII year in which much of their Brownie good fortunes were attributable to the fact the Yankees and several other clubs were missing key players to military service while the St. Louis entry fared well with older players and draft-deferred flat foots. The Browns lost to their St. Louis NL rivals, the Cardinals, in six games in the 1944 World Series.</p><p>Over the years, the Browns were known best for finishing last or next to last; the great Hall of Fame first baseman George Sisler, who also led the city&rsquo;s greatest AL club, the 1922 Browns, to a one-game finish behind the Yankees; the single pennant of 1944; Willard Brown hits the first American League HR by a black player for the 1947 Browns; the Barnum &amp; Bailey world of new-in-1951 owner Bill Veeck; the August 19, 1951 appearance of 3&rsquo;7″ Eddie Gaedel as a pinch hitter; Satchel Paige; Fan Manager Night, also in 1951 under Veeck; and Ned Garver winning 20 games for a last place Browns club that won only 52 games the entire season.</p><p>The Garver feat led to one of the most memorable anecdotes in baseball history. When Garver asked for a raise in 1952, owner Veeck is said to have turned him down with a very simple explanation: &ldquo;No way. We could have finished last without you.&rdquo;</p><p>After a couple of years of falling attendance, more losing baseball, chicanery with also suffering Cardinals, and political pressure from the AL owners who wanted to get rid of Bill Veeck, the Browns were sold to Baltimore interests after the 1953 season. They were re-christened as the Baltimore Orioles in 1954.</p><p>The St. Louis Browns Historical Society and Browns Fan Club has existed since 1984 for the purpose of keeping alive the memory of the St. Louis Browns baseball club. The Pecan Park Eagle wants to thank current president <strong>Bill Rogers</strong> for sending us this new list of the current surviving Browns players. With death of former shortstop Bud Thomas on Saturday, August 15, 2015, the list of living former Browns now has dropped to only twenty names.</p><p><strong>The 20 Surviving St. Louis Browns Players </strong><strong>Through 8/16/2015<br>From Oldest to Youngest by Name, Birthdate, and Age in 2015</strong></p><ol><li>Chuck Stevens 07/10/18 – 97</li><li>Tom Jordan 09/05/19 – 94</li><li>Dick Starr 03/02/21 – 94</li><li>George Elder 03/10/21 – 94</li><li>Neil Berry 01/11/22 – 92</li><li>Johnny Hetki 05/12/22 – 93</li><li>Jim Rivera 07/22/22 – 93</li><li>Tom Wright 09/22/23 – 92</li><li>Billy DeMars 08/26/25 – 90</li><li>Ned Garver 12/25/25 – 90</li><li>Frank Saucier 05/28/26 – 89</li><li>Johnny Groth 07/23/26 – 89</li><li>Ed Mickelson 09/09/26 – 89</li><li>Roy Sievers 11/18/26 – 89</li><li>Hal Hudson 05/04/27 – 88</li><li>Al Naples 08/29/27 – 88</li><li>Billy Hunter 06/04/28 – 87</li><li>Joe DeMaestri 12/09/28 – 87</li><li>Don Larsen 08/07/29 – 86</li><li>J.W. Porter 01/17/33 – 82</li></ol>'
			},
			{
				title: "Celebrating 64th Anniversary of the Smallest Professional (?) Baseball Player Ever",
				slug: "celebrating-64th-anniversary-of",
				date: "August 20, 2015",
				excerpt: "It was August 19, 1951 when Eddie Gaedel stepped up to the plate as a pinch hitter for Frank Saucier. Today we have Eddie Gaedel Societies popping up around the country recognizing short people.",
				images: {
					news: "/images/blog/browns-news-keefe.jpg",
					article: "/images/blog/browns-article-keefe.jpg"
				},
				body: '<p>Pictured here is Bill Rogers, President of the St. Louis Browns Historical Society and Emmett McAuliffe, VP of the Organization. While not short in physical size, they say they are short of money.  Who isn&rsquo;t?</p><div class="image-list"><div class="image"><img src="/images/blog/rogers-mcauliffe.jpg" alt="Bill Rogers and Emmett McAuliffe"></div></div><p>Pictured in the outset at top left is Tom Keefe, founder of the Eddie Gaedel Society, preaching the gospel about Eddie Gaedel.</p><p>There is one surviving member of this 1951 event, Frank Saucier. Frank is pictured on the Browns luncheon flyer and can be seen at: <a href="http://2015browns.blogspot.com" target="_blank">http://2015browns.blogspot.com</a>.</p>'
			},
			{
				title: "Browns Lose Another Member of History",
				slug: "browns-lose-another-member-of-history",
				date: "August 19, 2015",
				excerpt: "Bud Thomas, 86, passed away on August 15, 2015 in Sedalia, MO. Bud had a short-lived career for the Browns playing in just one season in 1951.",
				images: {
					news: "/images/blog/browns-news-bud-thomas.jpg",
					article: "/images/blog/browns-article-bud-thomas.jpg"
				},
				body: '<p>Although his time was brief, Bud hit .350 in 20 at bats for the &rsquo;51 team.</p><p>Bud was born in Sedalia in 1929 and was selected by the Browns in the amateur draft in 1947 after then owner Bill Veeck saw him perform at Yankee Stadium under the tutelage of Ty Cobb and Babe Ruth. Although he had an abbreviated career in baseball, he touched many lives during his career as a teacher, principal and school administrator. Give your thoughts and prayers to the Thomas family.</p>'
			},
			{
				title: "Rugger Ardizoia, 95, Made Lone Big League Appearance at Sportsman's Park in '47",
				slug: "rugger-ardizoia-95-made-lone-appearance",
				date: "July 21, 2015",
				excerpt: "Pitcher Mopped Up 15-5 Loss to Muddy Ruel's Browns*",
				images: {
					news: "/images/blog/browns-news-ardizoia.jpg",
					article: "/images/blog/browns-article-ardizoia.jpg"
				},
				body: '<p>Gave Up 2-Run Homer to Fellow San Franciscan and Iwo Jima &lsquo;Teammate&rsquo; Wally Judnich.</p><p>Yankee Was One of Only 7 Players in Major League History Born in Italy.</p><p><em>* There are no surviving members of the 1947 Browns. The last survivor, John Lester &ldquo;Les&rdquo; Moss, died August 29, 2012.</em></p>'
			},
			{
				title: 'Cubs Manager Maddon: "Browns were more popular than Cardinals"',
				slug: "cubs-manager-maddon-browns-were-more",
				date: "June 28, 2015",
				excerpt: "Chicago Cubs manager Joe Maddon was discussing with MLB Network the tenacity of Central-division rivals the St. Louis Cardinals and felt the need to name-check the Browns.",
				images: {
					news: "/images/blog/browns-news-maddon.jpg",
					article: "/images/blog/browns-article-maddon.jpg"
				},
				body: '<p>Keep the name alive Joe! I wonder if he would want to take our fan club membership <a href="/#/membership">pledge</a>?</p><p>Read Joe&rsquo;s Browns comment at: <a href="http://m.mlb.com/news/article/122414962/mike-bauman-no-adam-wainwright-no-problem-for-determined-cardinals" target="_blank">http://m.mlb.com/news/article/122414962/mike-bauman-no-adam-wainwright-no-problem-for-determined-cardinals</a></p>'
			},
			{
				title: "Present-day Cardinals Slugger Has Browns Family Roots",
				slug: "present-day-cardinals-slugger-has",
				date: "June 28, 2015",
				excerpt: "When recent AAA call-up Greg Garcia hit his first major-league homerun Friday night, a pinch-hit job, most fans probably did not realize that Garcia comes from a family with deep baseball roots",
				images: {
					news: "/images/blog/browns-news-garcia.jpg",
					article: "/images/blog/browns-article-garcia.jpg"
				},
				body: '<p>... that all started with the St. Louis Browns in 1937.  The 24-year old infielder&rsquo;s 94-year old grandfather, <strong>Dave Garcia Sr.</strong>,  was an infielder signed by the St. Louis Browns as a 16-year-old in 1937.</p><p>The elder Garcia, well and active at age 94 living in San Diego, spent a lifetime in baseball as a manager, coach and scout. He has watched every living Hall of Famer from the dugout or the field. He was a minor league teammate of Ty Cobb Jr. <a href="http://www.nytimes.com/2009/05/03/sports/baseball/03garcia.html" target="_blank">A semi-recent New York Times article on Dave.</a></p><div class="image-list"><div class="image"><img src="/images/blog/browns-article-garcia.jpg" alt="Dave Garcia Sr."></div><div class="image"><img src="/images/blog/059f40ab_mlbam.jpg" alt="Greg Garcia" width="212" height="320"></div></div>'
			},
			{
				title: "When the Browns Weren't the Browns: Alternate Nicknames, 1902-1953",
				slug: "when-browns-werent-browns-alternate",
				date: "June 28, 2015",
				excerpt: "If you go back into the early days of baseball, team nicknames were more informal than they are today. Indeed many fans took to calling their team what their favorite newspaper called them.",
				images: {
					news: "/images/blog/browns-news-raven.jpg",
					article: "/images/blog/browns-article-raven.jpg"
				},
				body: '<p>Although &ldquo;the Browns&rdquo; was the official nickname of the franchise beginning in 1902, a few other names popped up, even one that appeared to be official.</p><p>According to <em>Baseball Team Names: A Worldwide Dictionary, 1869-2011</em>, &ldquo;In the era 1890-1910, some teams received bird nicknames based on their stocking color, i.e. Blackbirds, Bluebirds, Blue Jays, Cardinals, Crows, Doves, Ravens and Redbirds.&rdquo; In 1905 and 1906, according to this book, the Browns were actually officially called <em>the Ravens</em>.</p><p>Through 1909 some newspapers took to referring to the team as the <em>Macaleerites, </em>after the team&rsquo;s inaugural manager, Jimmy McAleer.</p><p>In 1928 the Sporting News Guide referred to the Browns as <em>Howley&rsquo;s Sensations</em>. Dan Howley was the manager of the 1928 team and indeed he seemed to have started the Browns on something of an uptick after the short and futile managerial reign of player-manager George Sisler.</p><p>In 1939, the year the Browns set a franchise record for lowest winning percentage which still stands, they were apparently referred to as the <em>Little Brownies</em>.</p><p>In 1944 the Browns only pennant spurred an explosion of journalistic creativity: <em>Cinderella Boys, Cinderella Brownies, Rags-to-Riches Boys, Sackcloth Brownies, </em>and <em>Sewell&rsquo;s Wonders. </em>And add to the list<em>Sewellmen</em> which I personally have seen in the 1944 <em>Sporting News</em>.</p><p> All in all, the &ldquo;St. Louis Americans&rdquo; suffered through much less nickname identity crisis than did other franchises of the time (see Brooklyn, Cleveland, Boston N.L., Philadelphia N.L. e.g.).</p>'
			},
			{
				title: "Francona Missed High School Graduation to Report to Browns",
				slug: "francona-missed-high-school-graduation",
				date: "June 13, 2015",
				excerpt: "John Patsy &ldquo;Tito&rdquo; Francona was inducted this week in the Western Pennsylvania Interscholastic Athletic League Hall of Fame.",
				images: {
					news: "/images/blog/browns-news-tito-francona.jpg",
					article: "/images/blog/browns-article-tito-francona.jpg"
				},
				body: '<p>At that banquet, Tito told a story about the circumstances of his being signed by the St. Louis Browns in 1952.  It seems he signed with the Browns the very day before he graduated high school.  And baseball - and the Browns&rsquo; management - proved to be a harsh mistress.</p><p><em>He was ordered to skip graduation ceremonies and report directly to the Browns&rsquo; Class B farm team!</em></p><p>The decision to forgo cap-and-gown and don pinstripes was a good one for Tito.  He went on to have a successful major-league career as a first baseman-outfielder including being elected by Cleveland baseball writers as the 1959 Man of the Year, and an appearance in the second 1961 All-Star game.</p><p>Tito played two years in the Browns farm system before the team was sold to Baltimore: one year with the <strong>York White Roses</strong> and one year with the <strong>Aberdeen Pheasants</strong>.   At Aberdeen, Tito met his future wife, a local girl named Roberta Jackson.  <strong>Terry Francona</strong>, their son and current manager of the Cleveland Indians, was born in Aberdeen in 1959.</p><p>Here is a scorecard featuring Tito as an Aberdeen Pheasant. Note that <strong>Roger Maris</strong> (misspelled Maras), is in the lineup that day as a right-fielder for the <strong>Fargo-Moorhead Twins</strong>.</p><div class="image-list"><div class="image"><img src="/images/blog/aberdeen-pheasants.jpg" alt=""></div><div class="image"><img src="/images/blog/aberdeen-pheasants-2.png" alt=""></div></div><p>The Western Pennsylvania Interscholastic Athletic League was founded in 1907 for high school sports. Its Hall Of Fame includes <strong>Stan Musial</strong> and<strong>Arnold Palmer</strong>.</p><p>Other famous Aberdeen Pheasants that later came up to be major leaguers include <strong>Don Larsen, Bob Turley, Don Lenhardt, Perry Currin</strong> (all very recent attendees at the annual St. Louis Browns Fan Club and Historical Society banquet) and <strong>Blackie Schwamb</strong>.</p><p>Although Tito did not make it up to the big leagues in time to be a Brownie, he did eventually make it to Sportsman&rsquo;s Park as a St. Louis Cardinal.  Tito also played with Baltimore, Cleveland, Chicago (AL), Detroit, Atlanta, Philadelphia, Oakland and Milwaukee.</p><h3>Tito Trivia</h3><ul class="bulleted"><li>was traded twice for the same player: Larry Doby.  Once by the Orioles, and once by the Tigers.</li><li>shares the record (with Paul Baka) of being the player who played in the most contiguous states.  Francona played for teams in seven contiguous states: MO, IL, WI, MI, OH, PA, MD.</li><li>is the only player signed by the Browns to have played into the 1970s.</li></ul><p>Read more: <a href="http://triblive.com/sports/hssports/otherhighschoolsports/8542448-74/wpial-francona-basketball#ixzz3cyUWtJcO" target="_blank">http://triblive.com/sporas a member of the St. Louis Cardinals ts/hssports/otherhighschoolsports/8542448-74/wpial-francona-basketball#ixzz3cyUWtJcO</a></p>'
			},
			{
				title: "Bitsy parade is big on spunk",
				slug: "bitsy-parade-is-big-on-spunk",
				date: "June 10, 2015",
				excerpt: "Dozens gathered around the Tiny Bar on Locust Street to witness the self-proclaimed &quot;world's tiniest parade&quot; to honor the 90th birthday of former Browns player Eddie Gaedel.",
				images: {
					news: "/images/blog/browns-news-gaedel.jpg",
					article: "/images/blog/browns-article-gaedel.jpg"
				},
				body: '<p><strong>(The following story appeared on the front page of the June 10, 2015 <i>St. Louis Post-Dispatch</i>. The Browns are finally front-page news, 61 years after their last season).</strong></p><p>by Jack Witthaus of the St. Louis Post-Dispatch staff</p><p><strong>ST. LOUIS </strong> Emmett McAuliffe remembers exchanging baseball cards with an older kid in Creve Coeur in the 1960s and happening upon one from the Browns.</p><p>He couldn&rsquo;t believe it. There was another baseball team in St. Louis besides the Cardinals? Immediately, the team&rsquo;s colors, losing tendencies and elf logo mystified him.</p><p>Now, McAuliffe, [an officer in the St. Louis Browns Fan Club,] collects hats and other gear from the Browns. On Monday, he donned a milky white Browns jersey and a bow tie as he told stories about the team&rsquo;s history.</p><p>McAuliffe was among dozens gathered Monday night around the Tiny Bar on Locust Street to witness the self-proclaimed &quot;world&rsquo;s tiniest parade&quot; to honor the 90th birthday of former Browns player Eddie Gaedel.</p><p>The parade featured a Smart car, a float in a child-size wagon pulled by child, a toy dog, a one-man band and the world&rsquo;s smallest horse, Thumbelina. Led by Mayor Francis Slay, the 1/8th-block-long parade started and ended in minutes. Attendees broke into applause when the parade halted at the entrance of the Tiny Bar.</p><p>Parade organizer Aaron Perlut &mdash; a founding partner of Elasticity, a digital marketing and public relations firm at 1010 Locust Street &mdash; helped open the Tiny Bar on May 27. Perlut said the 250-square-foot establishment is used to celebrate the &quot;little guy&quot; in a world that often cherishes huge things.</p><p>At 3 feet, 7 inches, Gaedel was the shortest Major League Baseball player ever to record an at-bat. During his August 1951 debut, Gaedel walked on four straight pitches. Then-Browns owner Bill Veeck signed Gaedel as a part of a stunt. Gaedel died in 1961 at the age of 36.</p><p>A large Gaedel mural greets guests who enter the Tiny Bar, and his name is part of the bar&rsquo;s Wi-Fi password. &quot;He&rsquo;s the patron saint,&quot; Perlut said.</p><p>Although the city issued a permit for Monday&rsquo;s little celebration, Cindy Riordan, executive assistant to the director of streets, said the streets department didn&rsquo;t call the &quot;tiny parade&quot; a parade for permit purposes. Due to the small size, the parade was dubbed a &quot;special event.&quot; Riordan said people who apply for parade permits generally do not ask to hold parades less than a block long.</p><p>&quot;It&rsquo;s definitely the smallest one anyone&rsquo;s called a parade,&quot; she said, noting that it might have been the shortest one in St. Louis history.</p><p>Travis Sheridan operated the 2010 yellow Smart car that was in the parade. He said he liked the atmosphere of the event. Music played while attendees milled around and ate birthday cake.</p><p>Sheridan said St. Louis might have an inferiority complex, but it shouldn&rsquo;t see itself as little. Small events like Monday&rsquo;s parade make Sheridan, a friend of Perlut&rsquo;s, optimistic about the future of the city that he moved to about three years ago.</p><p>&quot;People doing tiny things can have a big impact for St. Louis,&quot; Sheridan said.</p>'
			},
			{
				title: "Marlin's Dee Gordon Chasing Feat Done Only by Cobb, Wagner and Browns' George Sisler.",
				slug: "marlins-dee-gordon-chasing-feat-done",
				date: "May 30, 2015",
				excerpt: "The Miami Marlins' Dee Gordon is chasing this year a feat that has only been accomplished by the Uber-Hall of Famers Ty Cobb, Honus Wagner and Brownie George Sisler.",
				images: {
					news: "/images/blog/browns-news-george-sisler.jpg",
					article: "/images/blog/browns-article-george-sisler.jpg"
				},
				body: '<p>That feat is leading the major leagues in both batting average and stolen bases.</p><div class="image-list"><div class="image"><img src="/images/blog/dee-gordon.png" alt="Dee Gordon"></div></div><div class="image-list"><div class="image"><img src="/images/blog/browns-article-george-sisler.jpg" alt="George Sisler"><div class="caption medium">George Sisler</div></div><div class="image"><img src="/images/blog/honus-wagner.jpg" alt="Honus Wagner"><div class="caption medium">Honus Wagner</div></div><div class="image"><img src="/images/blog/ty-cobb.jpg" alt="Ty Cobb"><div class="caption medium">Ty Cobb</div></div></div><p>Good luck to Dee! <a href="http://www.nytimes.com/2015/05/31/sports/baseball/marlins-gordon-tries-to-match-notable-names-cobb-sisler-snuffy-stirnweiss.html?_r=0" target="_blank">http://www.nytimes.com/2015/05/31/sports/baseball/marlins-gordon-tries-to-match-notable-names-cobb-sisler-snuffy-stirnweiss.html?_r=0</a></p>'
			},
			{
				title: "75 Years-Ago: First Pro Baseball Game Under the Lights in St. Louis",
				slug: "75-years-ago-first-pro-baseball-game",
				date: "May 24, 2015",
				excerpt: "Browns vs. Indians (and Bob Feller),  Attendance. 24,827",
				images: {
					news: "/images/blog/browns-news-night-baseball.jpg",
					article: "/images/blog/browns-article-night-baseball.jpg"
				},
				body: '<p>Since the Browns owned the stadium, they got the honors of hosting the first night game. (The Cardinals first was on June 4, and drew only 23,500.)</p><p><a href="http://www.baseball-reference.com/boxes/SLA/SLA194005240.shtml" target="_blank">http://www.baseball-reference.com/boxes/SLA/SLA194005240.shtml</a></p><div class="image-list"><div class="image"><img src="/images/blog/browns-article-night-baseball.jpg" alt=""></div></div>'
			},
			{
				title: "Lookee down by the train depot! I do declare, the St. Louis Browns are passing through our lil' ol' town!",
				slug: "lookee-down-by-train-depot-st-louis",
				date: "May 7, 2015",
				excerpt: "100 years ago this week, the <em>Daily Journal-Gazette</em> of Mattoon, Ill., reported in their April 30 edition:",
				images: {
					news: "/images/blog/browns-news-branch-rickey.jpg",
					article: "/images/blog/browns-article-branch-rickey.jpg"
				},
				body: '<p>MATTOON &mdash; The St. Louis Browns baseball club of the American League will pass through Mattoon on the Big Four Railroad the morning of May 2.</p><p>I shall leave it to our readers in the railroad buff community to explain the details of the Big Four Railroad (the name popularly given to the Central Pacific Railroad, a/k/a the first transcontinental railroad).*</p><p>The Browns were finishing up a road trip in Cleveland and heading home to St. Louis to begin a homestand Tuesday. <strong>Robert Lee Hedges</strong>, the original owner of the Browns is still owner for one last year. Still on the team is Hall of Famer <strong>Bobby Wallace</strong>, who goes all the way back to the St. Louis Perfectos (they of <a href="http://www.vivaelbirdos.com/2015/5/5/8551277/the-st-louis-perfectos-and-the-birth-of-modern-baseball" target="_blank">&ldquo;best opening record in franchise history fame&rdquo;</a>). <strong>Branch Rickey</strong> is the manager. The Browns are stagnant in 8th place.</p><p>You can peruse other stories noted on April 30, 1915, courtesy of the <em>Mattoon Journal Gazette and Times-Courier</em> <a href="http://jg-tc.com/news/opinion/glancing-back-april--may/article_37f98a07-c319-57fd-bd47-9828b340d1d0.html" target="_blank">website</a>.</p><p>I would note three things:</p><ol class="bulleted"><li>The daily newspaper was the thing, not twitter. But the amount of minutia is roughly the same.</li><li>The Browns are in last place, but simply being part of the &ldquo;Big 8 teams&rdquo; of any one of the three major leagues operating at the time, was, at least by Mattoon standards, an attraction.</li><li>Not sure if there is a freight rail-line still passing through Mattoon, but look at how amazingly straight-arrow it is to pass over there &ldquo;as the crow flies&rdquo; from Cleveland to St. Louis.</li></ol><div class="image-list"><div class="image"><img src="/images/blog/map-stlouis-to-cleveland.png" alt="Google Maps route from St. Louis, MO to Cleveland, OH via airplane"></div></div><p>If you went by Amtrak today, you would have to go through Chicago; if you drove, through Effingham.</p><p><em>* Though I can&rsquo;t resist pointing out that the railroad had its origins with a bill introduced by Senator Thomas Hart Benton of Missouri for a &ldquo;Great National Highway from St. Louis to the Pacific Ocean, straight as may be, with branches to Oregon and Mexico. The Government was to reserve a strip one mile wide for it, so as to provide for every kind of a road and means of conveyance – railway, plank, macadamized, with railroad trains, wagons, stages, pack trains and even sleds in Winter.&rdquo;</em></p>'
			},
			{
				title: "The One-Month Brown",
				slug: "the-one-month-brown",
				date: "March 25, 2015",
				excerpt: "My Way, a new book by Colin Gunderson about Tommy Lasorda, chronicles the life of one of the greatest managers and personalities in baseball history.",
				images: {
					news: "/images/blog/browns-news-lasorda.jpg",
					article: "/images/blog/browns-article-lasorda.jpg"
				},
				body: '<p>The book leads you on a journey through time as Gunderson takes you from Tommy&rsquo;s upbringing in Norristown, Pennsylvania to his continued service as an admirable baseball ambassador with the Dodgers. However, for a one-month period in 1953, Tommy was destined to be a starting pitcher for the St. Louis Browns.</p><p>Prior to the Browns final season in St. Louis in 1953, Bill Veeck acquired Lasorda for $50,000 from the Brooklyn Dodgers. Convinced that he was going to be able to move the team to Baltimore, Veeck began acquiring talent in anticipation of the move and the $2 million he was promised once he landed in Baltimore. But at this point, Veeck has made too many enemies throughout the league and his continual attempts to move were blocked by other owners determined to force him to sell the team. So, Veeck was obliged to return Lasorda back to the Dodgers during spring training.</p><p>Lasorda would go on to a dubious major league playing career followed by a Hall of Fame managerial career with the Los Angeles Dodgers. Tommy brought championships to Los Angeles in 1981 and 1988 and has served as one of the Dodgers and baseball&rsquo;s greatest champions. However, if not for financial issues and the hatred of Bill Veeck around the league, the man who famously said Dodger blue runs through his veins may, in fact, have bled brown.</p><p>Tommy was gracious enough to be the keynote speaker at the 2010 St. Louis Browns Historical Society luncheon. You can view his speech <a href="https://www.youtube.com/watch?v=GNamjlsXH6U" target="_blank">here</a> and also <a href="http://www.amazon.com/Tommy-Lasorda-Way-Colin-Gunderson/dp/1629370711" target="_blank">buy</a> his new book to learn more about the one-month Brown.</p>'
			},
			{
				title: "St. Louis Browns Historical Society Unveils New Digital Experience",
				slug: "new-digital-experience",
				date: "March 4, 2015",
				excerpt: "Site brings forgotten franchise back to the forefront of baseball history",
				images: {
					news: "/images/blog/browns-news-generic2.jpg",
					article: "/images/blog/browns-article-generic2.jpg"
				},
				body: '<p>ST. LOUIS &mdash; As the Orioles embark on their 62nd season after abandoning St. Louis, The St. Louis Browns Historical Society, an organization dedicated to preserving the story and legacy of the St. Louis Browns baseball team, today announced the launch of its new website. St. Louis-based digital agency, HLK, developed the new site, <a href="www.thestlbrowns.com" target="_blank">www.thestlbrowns.com</a>.</p><p>&ldquo;What the Browns lacked in the win column, they more than made up for with peculiar happenings and stunts on the diamond, as well as various, records that will never be broken,&rdquo; said Emmett McAuliffe, Historical Society board member.  &ldquo;You could not write a Hollywood script better than what actually happened during the 52 years that this team tried to win games and attract fans on a shoestring budget.&rdquo;</p><p>The Browns Historical Society celebrated the launch of the new site yesterday at Tiny Bar in downtown St. Louis, Mo. A photo from the event can be found at <a href="http://bit.ly/1H7ZkNb" target="_blank">http://bit.ly/1H7ZkNb</a> (from left to right: Joe Leahy, partner, HLK; Emmett McAuliffe, board member, Browns Historical Society; Bill Rogers, president, Browns Historical Society; and Eric Karlovic, partner, HLK).</p><p>Featuring an enhanced experience, the site includes a comprehensive overview of the franchise&rsquo;s storied history, biographies and statistics on St. Louis Browns players, and information about the Society and its members.</p><p>&ldquo;At HLK we believe, it is essential to preserve history through digital channels,&rdquo; noted Eric Karlovic, partner at St. Louis-based digital agency HLK. &ldquo;This site was designed in a meaningful storytelling style and experience that will appeal to existing fans and open an avenue to new audiences so the team and players are never forgotten.&rdquo;</p><p>The site launch is the first tactic of a larger strategy for the Society to preserve and remember the St. Louis Browns history, as well as create interest and increase membership in the Society, including the introduction of new merchandise and a documentary, which are set to launch over the next year.</p><p>The Browns moved to St. Louis in 1902, after playing as the Milwaukee Brewers for only one season, joining the already established Cardinals franchise in a baseball-crazy town. Named the Browns by owners, Robert Lee Hedges and the Orthwein brothers, Ralph and Max, the team reopened Sportsman&rsquo;s Park, which had previously served as home for the American Association St. Louis Browns (who one four-straight pennants).   In the Browns&rsquo; 52 years in St. Louis, the team finished sixth or worse in the American League 33 times and had 41 losing seasons, making the phrase &ldquo;St. Louis. First in shoes, first in booze, and last in the American League&rdquo; popular among the locals.</p><p>Along with a losing record the franchise was often  plagued with poor attendance, with the 1935 season only drawing 80,922 total fans to home games. The Browns had many memorable and notable players, and 13 future Hall of Famers would play for the club at one point in their careers, including George Sisler and Bobby Wallace.</p><p>The franchise played in the World Series only once,  in 1944; however, this success did not come without criticism, as most clubs during the time had lost many of their best players to fight in World War II. The Browns lost the Series to the Cardinals, and within three years, the team was back to last place in the American League.</p><p>Following a string of short-lived owners, the Browns were sold to the colorful Bill Veeck, , who would stop at nothing to attract fans with creative promotions. For his first game as the team&rsquo;s owner, Veeck offered all attendees a free beer or soda. Then, on August 19, 1951, Veeck had 3-foot-7-inch Eddie Gaedel, wearing a batboys&rsquo; uniform, pinch hit. Veeck took a $1,000,000 life insurance policy on Gaedel and threatened his life if he tried to swing at a pitch.</p><p>Although he had some valiant efforts, Veeck was unsuccessful in drawing a crowd and eventually sold the team to a Baltimore attorney at the end of the 1953 season. The club played its last game in St. Louis to a crowd of only 3,174 fans before moving to Baltimore to become the Orioles.</p> <p>&ldquo;It&rsquo;s been over a century since the Browns played their first game in St. Louis, and the Historical Society is dedicated to keeping all of the great, and not so great, moments of the team&rsquo;s history alive,&rdquo; said Bill Rogers, president of the St. Louis Browns Historical Society. &ldquo;We&rsquo;re excited to give fans a new way to learn about and remember the Browns.&rdquo;</p><h3>About the St. Louis Browns Historical Society</h3><p>The St. Louis Browns Historical Society and Fan Club is an organization dedicated to preserving every stat and story of the franchise, so that the history of baseball&rsquo;s most intriguing underdogs can continue to entertain fans. To learn more about the Browns history, players or to become a member of the Society, visit <a target="_blank" href="www.thestlbrowns.com">www.thestlbrowns.com</a>.</p><h3>About HLK</h3><p>HLK is a full-service digital agency driven to create authentic brand experiences. Active clients include Ameren, Nestle Purina, Monsanto, On The Run, Germ-X, St. Louis Cardinals, MapQuest, St. Patrick Center and Webster University.</p>'
			},
			{
				title: "Hank Peters, Baseball Executive, Died January 4, 2015 ",
				slug: "hank-peters",
				date: "January 5, 2015",
				excerpt: "Henry J. &ldquo;Hank&rdquo; Peters began his career after answering an ad from the St. Louis Browns, eventually working his way up to the scouting department.",
				images: {
					news: "/images/blog/browns-news-hank-peters.jpg",
					article: "/images/blog/browns-article-hank-peters.jpg"
				},
				body: '<p>When the team moved to Baltimore after the 1953 season, Peters declined to make the move and subsequently joined the front office of the <a target="_blank" href="http://en.wikipedia.org/wiki/Oakland_Athletics">Kansas City Athletics</a>.</p><p>During more than a decade with the franchise, Peters would eventually direct the team&rsquo;s scouting and minor league system in the mid-1960s under owner <a target="_blank" href="http://en.wikipedia.org/wiki/Charlie_Finley">Charlie Finley</a>. He held the title of <a target="_blank" href="http://en.wikipedia.org/wiki/General_manager_(baseball)">general manager</a> of the Athletics during the <a target="_blank" href="http://en.wikipedia.org/wiki/1965_Major_League_Baseball_season">1965</a> season.</p><p>Peters joined the <a target="_blank" href="http://en.wikipedia.org/wiki/Cleveland_Indians">Cleveland Indians</a> following the 1965 campaign as director of player personnel and assistant general manager to <a target="_blank" href="http://en.wikipedia.org/wiki/Gabe_Paul">Gabe Paul</a> for the remainder of the 1960s through 1971. He then served as the sixth president in the history of the National Association of Professional Baseball Leagues, the umbrella group that governs <a target="_blank" href="http://en.wikipedia.org/wiki/Minor_league_baseball">minor league baseball</a>, from 1972 to 1975, president and general manager of the Orioles from 1975 to 1987, and president of the Indians from 1987 to 1991.</p><p>As Orioles&rsquo; general manager, he kept the team competitive in the tough American League <a target="_blank" href="http://en.wikipedia.org/wiki/American_League_East_Division">East Division</a>, and won AL pennants in <a target="_blank" href="http://en.wikipedia.org/wiki/1979_Major_League_Baseball_season">1979</a> and <a target="_blank" href="http://en.wikipedia.org/wiki/1983_Major_League_Baseball_season">1983</a>, as well as the <a target="_blank" href="http://en.wikipedia.org/wiki/1983_World_Series">1983</a> World Series.</p><p>Prior to his baseball career, Peters served in the United States Army during World War II. He died of complications from a stroke in <a target="_blank" href="http://en.wikipedia.org/wiki/Boca_Raton,_Florida">Boca Raton, Florida</a> on January 4, 2015, aged 90.</p>'
			},
			{
				title: "He Threw Games for Gamblers Yet He Still Holds Record for Most Innings Pitched Without Allowing a Home Run",
				slug: "he-threw-games-for-gamblers",
				date: "December 29, 2014",
				images: {
					news: "/images/blog/browns-news-joe-blong.jpg",
					article: "/images/blog/browns-article-joe-blong.jpg"
				},
				excerpt: "We present now for your amusement, the curious case of one Joe Blong. St. Louis Brown Stockings right-handed pitcher, St. Louis native, son of Irish immigrants, and University of Notre Dame alumnus.",
				body: '<p>He holds the major league record for most innings pitched without allowing a home run in a career (320.1 innings). But it also seems he had a nasty habit of throwing games, &ldquo;hippodroming&rdquo; as the newspapers of the day colorfully called it, and was kicked out of baseball for it not once but twice.</p><p>When Joe and two other Browns teammates were kicked out of baseball and blacklisted from all respectable leagues in November 1877, it was curtains for repeat-offender Blong. How do you develop a reputation for throwing games and still hold a positive record that lasts forever? Perhaps he had so much pitching control that he was able to serve up only singles and doubles so that it did not look too obvious that he was throwing a game? In that case, still remarkable control for a pitcher.</p><p>The modern record is quite a ways off from Blong&rsquo;s mark: (269.1 Greg Minton, San Francisco Giants reliever - June 1, 1979 through May 1, 1982), symptomatic of home runs that happen about 8 times as often as they did in the eighteen seventies. But nonetheless even if someday someone surpasses 320.1 innings, it is not likely to represent the entire career of that pitcher. Organized baseball did not know what a favor they were doing for Joe when they expelled him in 1877: bestowing him with an almost impossible record of pitching an entire career, consisting of more than 300 innings, without giving up a home run.</p><p>Blong is buried in Calvary Cemetery in north St. Louis.</p><p>p.s. for Notre Dame fans, one of Blong&rsquo;s partners in crime was the unfortunately named ballplayer Trick McSorley, his classmate at Notre Dame.</p><p>Here is the account from <a href="http://thisgameofgames.blogspot.com/2007/09/joe-blong.html" target="_blank">This Game of Games</a> blog.</p>'
			},
			{
				title: "St. Louis Browns Were Colorful",
				slug: "st-louis-browns-were-colorful",
				date: "December 9, 2014",
				images: {
					news: "/images/blog/browns-news-branch-rickey.jpg",
					article: "/images/blog/browns-article-branch-rickey.jpg"
				},
				excerpt: "Major League Baseball fans in Illinois are divided into several camps. Cardinals fans rule the south, while White Sox fans creep in farther north. The Cubs have a strong base statewide. Sixty years ago, there was another, more interesting choice.",
				body: '<p>Until 1953, St. Louis was home to two teams, the National League&lsquo;s Cardinals as well as the Browns of the American League. Though the Browns lost a bundle of games over the decades, they left a legacy of some of baseball&rsquo;s most colorful moments.</p><p>The Browns opened play in St. Louis in 1902, a year after the founding of the American League, when the last-place Milwaukee franchise moved to the Gateway City after only one season. They were named for the color of their uniforms, which were replete with brown trim. The name also had been an early moniker of the other team in town, the Cardinals, before the turn of the century.</p><p>The Browns finished second at 78-58 in that inaugural season, which was not a sign of things to come. In their 52 years in St. Louis, the Browns finished first once, second twice and sixth or worse 33 times. Their ineptitude gave rise to the saying, &ldquo;St. Louis. First in shoes, first in booze and last in the American League.&rdquo;</p><p>Despite their struggles, the Browns never lacked for color. The team gave rise to the brilliant career of Branch Rickey, who came to St. Louis in 1913 from a successful stint as head baseball coach at the </p><p>University of Michigan. Rickey later moved across town and built the first minor-league farm system, which helped the Cardinals win four World Series titles before he left in 1942 for Brooklyn. There, he introduced Jackie Robinson, the first African-American to play in the major leagues.</p><p>&ldquo;The owner of the Browns at the time did not recognize Rickey&rsquo;s value,&rdquo; said Bill Rogers, of St. Louis, who has researched the Browns extensively. &ldquo;Had Rickey stayed on, I think things would have turned out much differently.&rdquo;</p><p>Rickey also is responsible for the player that many believe was the greatest in Browns history. First baseman George Sisler was a former Michigan star who batted .420 with 51 stolen bases and 105 RBIs in 1922 to lead the Browns to a 93-61 record, their best ever. Sisler batted .340 in a 15-year major league career, 12 with the Browns. He was elected to the Baseball Hall of Fame in 1939.</p><p>Poor attendance was a recurring theme in Browns history. The 1935 team drew 80,922 fans for the entire season, and the Great Depression was not entirely to blame. St. Louis never won more than 67 games in a 154-game season at any point in the 1930s and was a miserable 43-111 in 1939.</p><p>Finally, the Browns broke through in 1942, finishing third at 82-69 under manager Luke Sewell.</p><p>With a strong pitching staff and a formidable infield, St. Louis was primed for a run. In 1944, they remained in contention for most of the season and swept a season-ending, four-game series against the Yankees at home to capture the pennant with an 89-65 mark.</p><p>Ironically, their World Series opponents were their crosstown rivals, the Cardinals. Since the early 1920s, the Browns actually had been the Cardinals&rsquo; landlords as the owners of Sportsmans&rsquo; Park. Unfortunately for the Browns, they had to suffer as the Cardinals rose to the top of the National League and routinely outdrew their counterparts at the box office.</p><p>The Browns jumped to a 2-1 Series lead, but the Cardinals won the last three to clinch in six games. &ldquo;The Series appearance was a tremendous shot in the arm for the Browns,&rdquo; said Rogers. &ldquo;But in St. Louis, the fans of one team did not like the other team. Even Stan Musial remarked about that once.&rdquo;</p><p>The Browns nearly repeated in 1945, but were eliminated from the pennant race on the last day of the season. That year, the star attraction for the Browns was Pete Gray, a one-armed outfielder who batted .218 in 77 games in his sole major league season.</p><p>For most of their existence, the Browns were financially strapped, and often had to sell off star players simply to keep afloat. After their glorious run of the mid-1940s, many top players were sold for needed cash, and the team fell into steep decline.</p><p>&ldquo;I hate to say it, but I think the Browns were often mismanaged,&rdquo; remarked Rogers. &ldquo;That put them in a financial bind often, and they had to trade or sell their best players to cover expenses.&rdquo;</p><p>However, there were plenty of memorable episodes. Many were courtesy of the flamboyant Bill Veeck, who bought the team in 1951 from an ownership tandem including Bill DeWitt, whose son is a current Cardinals&rsquo; team owner. Veeck challenged the Cardinals head on with a series of wacky promotions.</p><p>Soon after buying the team, Veeck signed Eddie Gaedel, a three-foot-seven-inch midget to a one-day contract and sent him up to bat in the second game of an Aug. 19, 1951, doubleheader against Detroit. Wearing the number &ldquo;1/8" and creating a strike zone of a mere inch-and-a-half, Gaedel walked on four pitches.</p><p>Six days later, the Browns hosted &ldquo;Grandstand Manager&rsquo;s Night,&rdquo; in which fans were allowed to make on-field decisions. Manager Zack Taylor held up signs such as &ldquo;Should the Browns Bunt?,&rdquo; &ldquo;Take Out the Pitcher?&rdquo; and &ldquo;Steal?,&rdquo; while spectators held signs replying &ldquo;Yes&rdquo; or &ldquo;No.&rdquo; The Browns knocked off the Philadelphia A&rsquo;s 5-3 that night, a highlight for a squad that went 52-102.</p><p>Still, many of the players preferred playing for the Browns than the other team in town. Though the Cardinals never finished lower than second from 1941-49, many Browns were happier with their cellar-dwelling franchise. In an interview for a 2000 book, Don Gutteridge, a former Cardinal who was the Browns&rsquo; second baseman through their 1940s heyday, said that &ldquo;the Cardinals were always pinching pennies. The Browns were a better club to play for than the Cardinals.&rdquo;</p><p>Some of the later Browns are among the franchise&rsquo;s most recognizable names. They include the legendary Satchel Paige, who won 12 games at age 46 in 1952, as well as righthander Ned Garver, who won 20 games in 1951. Garver is one of 23 surviving Browns players today, a list that includes Ottawa native Ed Mickelson, who saw action in seven games for the Browns in 1953 and is said to have driven in the final run in Browns history.</p><p>Mickelson, now 88, played in a total of 18 Major League games over three seasons with the Browns, White Sox and Cardinals and later wrote a memoir of his 11 seasons in pro ball, mostly in the minors.</p><p>Another surviving ex-Brown is Don Larsen, a St. Louis rookie in 1953. Three years later, he tossed a perfect game for New York in the 1956 World Series.</p><p>When the Cardinals were sold to Anheuser-Busch in December 1952, Veeck realized he could no longer survive against a larger-budget rival. His tumultuous run as Browns&rsquo; owner came to an end when he sold the team after the 1953 season. The franchise moved to Baltimore and became the Orioles.</p><p>Sixty years later, the Browns are hardly forgotten. In 1984, the St. Louis Browns Fan Club was founded and now numbers 370 members. The club holds an annual banquet, publishes an in-house magazine and offers a line of collectibles.</p><p>&ldquo;Interest in the Browns is extremely high,&rdquo; said Rogers, the president of the club. &ldquo;Even though only 23 Browns survive, there are tens of thousands of fans left. Even younger people have experienced the Browns through the memories of their parents and grandparents. Like one person said to me, &lsquo;we can&rsquo;t bring back the Browns, but we can at least keep their memory alive.&rsquo; &rdquo;</p>'
			}
		]
	}
}

module.exports = Data;

},{}],3:[function(require,module,exports){

var Router = require('./Router');
var ViewManager = require('./ViewManager');
var ViewMediator = require('./ViewMediator');

function Application( descriptor ) {

	if( !( this instanceof Application ) )
		return new Application( descriptor );

	this.settings = descriptor;
}

Application.prototype = {

	init: function() {

		var s = this.settings;

		if( s === undefined )
			throw new Error( 'You must define a settings object at initialization' );

		if( s.routes === undefined )
			throw new Error( 'You must define routes in your settings object' );

		s.autoResize = s.autoResize === undefined ? true : s.autoResize;

		this.onRouteCallback = s.onRoute;
		s.routes.onRoute = this.show.bind( this );
		this.router = Router(s.routes);

		this.vm = ViewManager( this.settings );

		if( s.autoResize ) {

			window.addEventListener( 'resize', this.onResize.bind( this ) );
			window.addEventListener( 'orientationchange', this.onResize.bind( this ) );
			this.onResize();
		}

		if( s.initSection ) {
			this.show( s.initSection.bind( undefined, this.router.init.bind( this.router ) ) );
		} else {
			this.router.init();
		}
	},

	show: function( content, data ) {

		if( this.onRouteCallback )
			this.onRouteCallback( content, data );

		if( Array.isArray( content ) ) {

			var contents = [];

			for( var i = 0, l = content.length; i < l; i ++ ) {

				if( typeof content[ i ] == 'object' ) {
					contents[ i ] = content[ i ];
				} else if( typeof content[ i ] == 'function' ) {
					contents[ i ] = new content[ i ];
				}
			}

			this.doShow( ViewMediator.apply( undefined, contents ), data );
		} else if( typeof content == 'object' ) {

			this.doShow( content, data );
		} else if( typeof content == 'function' ) {

			this.doShow( new content, data );
		}
	},

	doShow: function( content, data ) {

		this.vm.show( content, data );
	},

	resize: function( w, h ) {

		this.vm.resize( w, h );
	},

	onResize: function( w, h ) {

		this.resize( window.innerWidth, window.innerHeight );
	},

	go: function( to ) {

		this.router.go( to );
	}
}

module.exports = Application;
},{"./Router":17,"./ViewManager":24,"./ViewMediator":25}],4:[function(require,module,exports){
module.exports = ["images/about-photo-bill-borst.png","images/about-photo-bill-rogers.png","images/about-photo-emmett.png","images/about-photo-fred-heger.png","images/about-photo-john-rappold.png","images/about-photo-vicki-martin.png","images/about-stlsports-hof.png","images/arrow-left.png","images/arrow-right.png","images/bg-blog-post-border.jpg","images/bg-border-h.jpg","images/bg-border-v.jpg","images/bg-input.png","images/bg-nav-icon-1-dark.png","images/bg-nav-icon-1.png","images/bg-overlay.png","images/bg-players-controls.png","images/bg-social-email.png","images/bg-social-facebook.png","images/bg-social-twitter.png","images/cards-badge.png","images/hof-badge.png","images/home-text.png","images/icn-facebook-hover.png","images/icn-facebook.png","images/icn-nav-dark.png","images/icn-nav.png","images/icn-twitter-hover.png","images/icn-twitter.png","images/icn-youtube-hover.png","images/icn-youtube.png","images/img-footer-logo.png","images/img-intro-icon.png","images/main-dark.jpg","images/main-light-large.jpg","images/main-light.jpg","images/member-level-bleed-brown.png","images/member-level-gold.png","images/member-level-silver.png","images/type-dark.png","images/type.png"];
},{}],5:[function(require,module,exports){

var $ = require('./DOM');
var Class = require('./oop/Class');
var Device = require('./Device');
var Util = require('./Utils');
var Velocity = require('velocity-animate');

var arrowRight, arrowLeft;

var Carousel = new Class({

	initialize: function( element, opts ) {

		this.options = opts;
		this.index = 0;
		this.el = element;
		this.wrapper = $.select('.slides', element);
		this.slides = $.select('.slide', element);

		this.addListeners();
		this.move();
	},

	addListeners: function() {

		var _this = this;
		arrowRight = $.select('.arrow-right', this.el)[ 0 ];
		arrowLeft = $.select('.arrow-left', this.el)[ 0 ];

		if( Device.system.touch ) {

			$.on( arrowRight, 'touchend', function() { _this.updateIndex(1) } );
			$.on( arrowLeft, 'touchend', function() { _this.updateIndex(-1) } );
		} else {

			$.on( arrowRight, 'click', function() { _this.updateIndex(1) } );
			$.on( arrowLeft, 'click', function() { _this.updateIndex(-1) } );
		}
	},

	move: function() {

		var amt = (this.slides[ 0 ].scrollWidth) * (this.index * -1);

		Velocity(this.wrapper, {
			translateX: amt,
			translateZ: 0
		}, {
			duration: this.options.speed || 350,
			easing: this.options.easing || 'easeInOutCubic',
			queue: false
		});

		$.show(arrowLeft);
		$.show(arrowRight);

		if( this.index == 0 ) $.hide(arrowLeft);
		if( this.index == (this.slides.length - 1) ) $.hide(arrowRight);
	},

	updateIndex: function( amt ) {

		this.index = Util.clamp(this.index + amt, 0, this.slides.length - 1);
		this.move();
	},

	resize: function() {

		this.move();
	}
});

module.exports = Carousel;
},{"./DOM":6,"./Device":7,"./Utils":22,"./oop/Class":28,"velocity-animate":54}],6:[function(require,module,exports){

var Class = require('./oop/Class');
var qwery = require('qwery');
var bonzo = require('bonzo');
var on = require('dom-event');
var off = on.off;

var DOMObj = {

	_bonzo: bonzo,

	select: function( selector, context ) {

		var el = qwery( selector, context );

		return el;
	},

	addChild: function( type, parent ) {

		var el = document.createElement(type);

		parent.appendChild(el);

		return el;
	},

	append: function( el, parent ) {

		bonzo(parent).append(el);
	},

	prepend: function( el, parent ) {

		bonzo(parent).prepend(el);
	},

	addClass: function( klass, element ) {

		if( !element ) {

			var html = qwery('html');
			bonzo(html).addClass(klass);
			
		} else {
			bonzo( element ).addClass( klass );
		}

		return this;
	},

	setClass: function( klass, element ) {

		bonzo( element ).attr('class', klass);
	},

	removeClass: function( element, klass ) {

		bonzo(element).removeClass(klass);

		return this;
	},

	attr: function( element, attribute ) {

		return bonzo(element).attr(attribute);
	},

	hasClass: function(element, klass) {

		return bonzo(element).hasClass(klass);
	},

	css: function( element, styles ) {

		bonzo( element ).css( styles );

		return this;
	},

	hide: function( element ) {

		bonzo( element ).hide();

		return this;
	},

	show: function( element ) {

		bonzo( element ).show();

		return this;
	},

	center: function( element, w, h ) {

		var height = w || bonzo( element ).dim().height;
		var width = h || bonzo( element ).dim().width;

		bonzo( element ).css({
			position: 'absolute',
			top: '50%',
			left: '50%',
			marginTop: height / -2,
			marginLeft: width / -2
		});

		return this;
	},

	size: function( element, w, h ) {

		var styles = {
			width: w,
			height: h ? h : w
		};

		bonzo(element).css(styles);

		return this;
	},

	on: function( el, ev, func ) {

		on(el, ev, func);
	},

	off: function( el, ev, func ) {

		off(el, ev, func);
	},

	html: function( el, html ) {

		bonzo(el).html(html);
	},

	hover: function( el, over, out ) {

		this.css(el, { cursor: 'pointer' });

		on(el, 'mouseover', over);
		on(el, 'mouseout', out);
	},

	width: function( el, w ) {

		if( !w )
			return bonzo(el).dim().width
		else
			bonzo(el).css({
				width: h
			});
	},

	height: function( el, h ) {

		if( !w ) {
			
			return bonzo(el).dim().height
		} else {

			bonzo(el).css({
				height: h
			});
		}
	},

	transform: function( el, values ) {

		var t = "";
		var force2d = false;

		if ( values.x ) t += "translateX(" + values.x + "px) ";
		if ( values.y ) t += "translateY(" + values.y + "px) ";
		if ( !force2d ) t += "translateZ(0) ";

		if ( values.rotX ) t += "rotateX(" + values.rotX + "deg)  ";
		if ( values.rotY ) t += "rotateY(" + values.rotY + "deg)";
		if ( values.rotZ ) t += "rotateZ(" + values.rotZ + "deg) ";
		else if (values.rotZ ) t += "rotate(" + values.rotZ + "deg) ";

		if ( values.scaleX && values.scaleX != 1 ) t += "scaleX(" + values.scaleX + ") ";
		if ( values.scaleY && values.scaleY != 1 ) t += "scaleY(" + values.scaleY + ") ";
		if ( values.scaleZ && values.scaleZ != 1 ) t += "scaleZ(" + values.scaleZ + ")";
		if ( values.scale && values.scale != 1 ) t += "scale(" + values.scale + ")";

		bonzo(el).css({
			"transform": t
		});

		return this;
	}

};

module.exports = DOMObj;
},{"./oop/Class":28,"bonzo":41,"dom-event":42,"qwery":47}],7:[function(require,module,exports){
String.prototype.strpos = function(e) {
	return this.indexOf(e) != -1
};

var Device = function() {

	var b = this;
	this.agent = navigator.userAgent.toLowerCase();
	function a(f) {
		var e = document.createElement("div"), d = "Khtml ms O Moz Webkit".split(" "), c = d.length;
		if (f in e.style) {
			return true
		}
		f = f.replace(/^[a-z]/, function(g) {
			return g.toUpperCase()
		});
		while (c--) {
			if (d[c] + f in e.style) {
				return true
			}
		}
		return false
	}
	this.detect = function(d) {
		if (typeof d === "string") {
			d = [d]
		}
		for (var c = 0; c < d.length; c++) {
			if (this.agent.strpos(d[c])) {
				return true
			}
		}
		return false
	};
	this.mobile = (!!("ontouchstart" in window) && this.detect(["ios", "iphone", "ipad", "windows phone", "android", "blackberry"])) ? {} : false;
	if (this.mobile) {
		this.mobile.tablet = window.innerWidth > 1000 || window.innerHeight > 900;
		this.mobile.phone = !this.mobile.tablet
	}
	this.browser = new Object();
	this.browser.chrome = this.detect("chrome");
	this.browser.safari = !this.browser.chrome && this.detect("safari");
	this.browser.firefox = this.detect("firefox");
	this.browser.ie = (function() {
		if (b.detect("msie")) {
			return true
		}
		if (b.detect("trident") && b.detect("rv:")) {
			return true
		}
	})();
	this.browser.version = (function() {
		try {
			if (b.browser.chrome) {
				return Number(b.agent.split("chrome/")[1].split(".")[0])
			}
			if (b.browser.firefox) {
				return Number(b.agent.split("firefox/")[1].split(".")[0])
			}
			if (b.browser.safari) {
				return Number(b.agent.split("version/")[1].split(".")[0].charAt(0))
			}
			if (b.browser.ie) {
				if (b.detect("msie")) {
					return Number(b.agent.split("msie ")[1].split(".")[0])
				}
				return Number(b.agent.split("rv:")[1].split(".")[0])
			}
		} catch (c) {
			return -1
		}
	})();
	this.vendor = (function() {
		if (b.browser.firefox) {
			return "moz"
		}
		if (b.browser.opera) {
			return "o"
		}
		if (b.browser.ie && b.browser.version >= 11) {
			return ""
		}
		if (b.browser.ie) {
			return "ms"
		}
		return "webkit"
	})();
	this.system = new Object();
	this.system.retina = window.devicePixelRatio > 1 ? true : false;
	this.system.webworker = typeof window.Worker !== "undefined";
	this.system.offline = typeof window.applicationCache !== "undefined";
	this.system.touch = 'ontouchstart' in document;
	this.system.geolocation = typeof navigator.geolocation !== "undefined";
	this.system.pushstate = typeof window.history.pushState !== "undefined";
	this.system.webcam = !!(navigator.getUserMedia || navigator.webkitGetUserMedia || navigator.mozGetUserMedia || navigator.msGetUserMedia);
	this.system.language = window.navigator.userLanguage || window.navigator.language;
	this.system.webaudio = typeof window.webkitAudioContext !== "undefined" || typeof window.AudioContent !== "undefined";
	this.system.localStorage = typeof window.localStorage !== "undefined";
	this.system.fullscreen = typeof document[b.vendor + "CancelFullScreen"] !== "undefined";
	this.system.os = (function() {
		if (b.detect("mac os")) {
			return "mac"
		} else {
			if (b.detect("windows nt 6.3")) {
				return "windows8.1"
			} else {
				if (b.detect("windows nt 6.2")) {
					return "windows8"
				} else {
					if (b.detect("windows nt 6.1")) {
						return "windows7"
					} else {
						if (b.detect("windows nt 6.0")) {
							return "windowsvista"
						} else {
							if (b.detect("windows nt 5.1")) {
								return "windowsxp"
							} else {
								if (b.detect("linux")) {
									return "linux"
								}
							}
						}
					}
				}
			}
		}
		return "undetected"
	})();
	this.media = new Object();
	this.media.audio = (function() {
		if (!!document.createElement("audio").canPlayType) {
			return b.detect(["firefox", "opera"]) ? "ogg" : "mp3"
		} else {
			return false
		}
	})();
	this.media.video = (function() {
		var c = document.createElement("video");
		if (!!c.canPlayType) {
			if (Device.mobile) {
				return "mp4"
			}
			if (b.browser.chrome) {
				return "webm"
			}
			if (b.browser.firefox || b.browser.opera) {
				if (c.canPlayType('video/webm; codecs="vorbis,vp8"')) {
					return "webm"
				}
				return "ogv"
			}
			return "mp4"
		} else {
			return false
		}
	})();
	this.graphics = new Object();
	this.graphics.webgl = (function() {
		try {
			return !!window.WebGLRenderingContext && !!document.createElement("canvas").getContext("experimental-webgl")
		} catch (c) {
		}
	})();
	this.graphics.canvas = (function() {
		var c = document.createElement("canvas");
		return c.getContext ? true : false
	})();
	this.styles = new Object();
	this.styles.filter = a("filter") && !b.browser.firefox;
	this.styles.shader = b.browser.chrome;
	this.styles.vendor = (function() {
		if (b.browser.firefox) {
			return "Moz"
		}
		if (b.browser.opera) {
			return "O"
		}
		if (b.browser.ie && b.browser.version >= 11) {
			return ""
		}
		if (b.browser.ie) {
			return "ms"
		}
		return "Webkit"
	})();
	this.styles.vendorTransition = this.styles.vendor.length ? this.styles.vendor + "Transition" : "transition";
	this.styles.vendorTransform = this.styles.vendor.length ? this.styles.vendor + "Transform" : "transform";
	this.tween = new Object();
	this.tween.transition = a("transition");
	this.tween.css2d = a("transform");
	this.tween.css3d = a("perspective");
	this.tween.complete = (function() {
		if (b.browser.firefox || b.browser.ie) {
			return "transitionend"
		}
		if (b.browser.opera) {
			return "oTransitionEnd"
		}
		return "webkitTransitionEnd"
	})();
	this.openFullscreen = function(c) {
		c = c || __body;
		if (c && b.system.fullscreen) {
			if (c == __body) {
				c.css({top: 0})
			}
			c.div[b.vendor + "RequestFullScreen"]()
		}
	};
	this.closeFullscreen = function() {
		if (b.system.fullscreen) {
			document[b.vendor + "CancelFullScreen"]()
		}
	};
	this.getFullscreen = function() {
		return document[b.vendor + "IsFullScreen"]
	}
};

var d = new Device();

module.exports = d;
},{}],8:[function(require,module,exports){
var Util = require('./Utils');

var Easer = function(_ease) {

	var ease = _ease || 1;

	var pos = 0,
		target = 0,
		min = -100000000,
		max = 1000000000;
	var MAXDELTA = 100000;

	var e = {
		velocity: 0
	};

	e.setTarget = function(_target) {

		target = _target;
	}

	e.getTarget = function() {

		return target;
	}

	e.updateTarget = function(delta) {

		target += delta;
	}

	e.setLimits = function(_min, _max) {

		min = _min;
		max = _max;
	}

	e.easeVal = function() {

		target = Util.clamp(target, min, max);
		e.velocity = (target - pos) * ease;
		pos += e.velocity;
		return pos;
	}

	e.setEase = function(e) {

		ease = e;
	}

	e.reset = function(val) {

		pos = val || 0;
		target = val || 0;
	}

	e.toString = function() {
		
		return 'min: ' + min + ' / max: ' + max + ' / target: ' + target + ' / pos: ' + pos;
	}

	return e;
}

module.exports = Easer;
},{"./Utils":22}],9:[function(require,module,exports){

function serialize(form) {
	if (!form || form.nodeName !== "FORM") {
		return;
	}
	var i, j, q = [];
	for (i = form.elements.length - 1; i >= 0; i = i - 1) {
		if (form.elements[i].name === "") {
			continue;
		}
		switch (form.elements[i].nodeName) {
		case 'INPUT':
			switch (form.elements[i].type) {
			case 'text':
			case 'email':
			case 'hidden':
			case 'password':
			case 'button':
			case 'reset':
			case 'submit':
				q.push(form.elements[i].name + "=" + encodeURIComponent(form.elements[i].value));
				break;
			case 'checkbox':
			case 'radio':
				if (form.elements[i].checked) {
					q.push(form.elements[i].name + "=" + encodeURIComponent(form.elements[i].value));
				}						
				break;
			case 'file':
				break;
			}
			break;			 
		case 'TEXTAREA':
			q.push(form.elements[i].name + "=" + encodeURIComponent(form.elements[i].value));
			break;
		case 'SELECT':
			switch (form.elements[i].type) {
			case 'select-one':
				q.push(form.elements[i].name + "=" + encodeURIComponent(form.elements[i].value));
				break;
			case 'select-multiple':
				for (j = form.elements[i].options.length - 1; j >= 0; j = j - 1) {
					if (form.elements[i].options[j].selected) {
						q.push(form.elements[i].name + "=" + encodeURIComponent(form.elements[i].options[j].value));
					}
				}
				break;
			}
			break;
		case 'BUTTON':
			switch (form.elements[i].type) {
			case 'reset':
			case 'submit':
			case 'button':
				q.push(form.elements[i].name + "=" + encodeURIComponent(form.elements[i].value));
				break;
			}
			break;
		}
	}
	return q.join("&");
}

module.exports = serialize;
},{}],10:[function(require,module,exports){



var Class = require('./oop/Class');
var View = require('./View');

var $ = require('./DOM');
var Config = require('./../Config');

var Ticker = require('./../components/Ticker');

var winHeight = window.innerHeight;
var winWidth = window.innerWidth;

var mouse = {
	x: winWidth / 2,
	y: winHeight / 2
};

var mouseTarget = {
	x: mouse.x,
	y: mouse.y
};

var onMouseMove = function(e) {

	mouse.x = (winWidth / 2) - e.pageX;
	mouse.y = (winHeight / 2) - e.pageY;
};

var Hero = new Class({

	name: 'hero',
	Extends: View,
	template: "<img src=\"{{ config.cdn }}images/history/hero/{{ hero.coverImage }}\" alt=\"\" class=\"cover-image\" />\n\n<div class=\"scroll\">\n\t<div>Scroll</div>\n\t<div>\n\t\t<span>&darr;</span>\n\t\t<span>&darr;</span>\n\t</div>\n</div>\n\n<video src=\"{{ config.cdn }}video/flicker.mp4\" loop autoplay></video>\n<img src=\"{{ config.cdn }}images/history/hero/{{ hero.image }}\" alt=\"\" class=\"background-image\" />",

	initialize: function( data ) {

		var _this = this;

		data.config = Config;

		this.render(data);

		this.addListeners();

		this.coverImg = $.select('.cover-image', this.div);
		this.backgroundImg = $.select('.background-image', this.div);

		//- build number tickers for years
		this.ticker1 = new Ticker(data.dates.from);
		this.ticker2 = new Ticker(data.dates.to);

		$.append(this.ticker1.div, this.div);
		$.append(this.ticker2.div, this.div);
	},

	addListeners: function() {

		$.on(document, "mousemove", onMouseMove);
	},

	removeListeners: function() {

		$.off(document, 'mousemove', onMouseMove);
	},

	onRender: function(scr) {

		mouseTarget.x += (mouseTarget.x - mouse.x) * -0.075;
		mouseTarget.y += (mouseTarget.y - mouse.y) * -0.075;

		$.css(this.div, {
			transform: 'translateY(' + scr * 0.35 + 'px)'
		});

		var x = mouseTarget.x / -100;
		var y = mouseTarget.y / -100;

		var op = 1 - ((scr / 10) / -100);

		$.css(this.coverImg, {
			marginTop: (y * 1.5) + (scr * 0.175),
			marginLeft: x * 1.5,
			opacity: op
		});

		$.css(this.backgroundImg, {
			marginTop: y * 1,
			marginLeft: x * 1
		});

		$.transform(this.ticker1.div, {
			y: (y * 3) + (scr * 0.175),
			x: x * 3
		}).css(this.ticker1.div, {
			opacity: op
		});

		$.transform(this.ticker2.div, {
			y: (y * 3) + (scr * 0.175),
			x: x * 3
		}).css(this.ticker2.div, {
			opacity: op
		});
	},

	animateIn: function() {

		this.ticker1.animateIn();
		this.ticker2.animateIn();		
	},

	animateOut: function() {

		this.removeListeners();
	},

	resize: function( w, h ) {

		$.css(this.div, {
			width: w,
			height: h
		});
	}
});

module.exports = Hero;
},{"./../Config":1,"./../components/Ticker":21,"./DOM":6,"./View":23,"./oop/Class":28}],11:[function(require,module,exports){



var Class = require('./oop/Class');
var View = require('./View');

var $ = require('./DOM');
var Config = require('./../Config');

var ShuffleLetters = require('./ShuffleLetters')();

var HistoryTimeline = new Class({

	name: 'history-timeline',
	Extends: View,
	template: "<div class=\"indicator\"></div>\n<div class=\"year\"></div>\n<div class=\"title\"></div>",
	active: false,

	initialize: function( data ) {

		this.render();

		this.bar = $.select('.bar', this.div);
		this.year = $.select('.year', this.div);
		this.title = $.select('.title', this.div);
		this.indicator = $.select('.indicator', this.div);
	},

	update: function( _year, _title ) {

		ShuffleLetters(this.year, _year);
		ShuffleLetters(this.title, _title);
	},

	animateIn: function() {

		
	},

	animateOut: function() {

		this.removeListeners();
	}
});

module.exports = HistoryTimeline;
},{"./../Config":1,"./DOM":6,"./ShuffleLetters":18,"./View":23,"./oop/Class":28}],12:[function(require,module,exports){
var Loader = {

	loadText: function(path, onLoadedFunc) {

		var request = new XMLHttpRequest();
		request.open("GET", path);

		request.onreadystatechange = function() {
			
			if (request.readyState == 4) {
				onLoadedFunc.call(null, request.responseText);
			}
		};

		request.send();
	},

	post: function(path, data, onLoadedFunc) {

		if( typeof data === 'function' && onLoadedFunc === 'undefined' ) {

			onLoadedFunc = data;
			data = {};
		}

		var request = new XMLHttpRequest();

		request.onreadystatechange = function() {

			if (request.readyState == 4) {
				var r = JSON.parse(request.responseText)
				onLoadedFunc.call(null, r);
			}
		};

		request.open("POST", path);
		request.setRequestHeader('Content-Type', 'application/x-www-form-urlencoded')

		request.send(data)
	},

	loadJSON: function(path, onLoadedFunc) {

		Loader.loadText(path, function(text) {
			onLoadedFunc(JSON.parse(text));
		});
	},

	loadImage:function(src, callback) {

		var img = new Image();
		img.onload = callback(img);
		setTimeout(function() {
			img.src = src;
		}, 10);
	}

};

module.exports = Loader;
},{}],13:[function(require,module,exports){


var Velocity = require('velocity-animate');
var UIPack = require('velocity-animate/velocity.ui');
var Class = require('./oop/Class');
var View = require('./../components/View');
var $ = require('./../components/DOM');
var Util = require('./Utils');
var Device = require('./Device');

var NavController = require('./NavController');
var Config = require('./../Config');
var data = require('./../Data').navigation;

var Nav = new Class({

	name: "nav",
	Extends: View,
	active: false,
	template: "\n<div class=\"content\">\n\n\t{{ #sections }}\n\n\t\t<div class=\"section {{ #secondary }}section-secondary{{ /secondary }} {{ key }}\">\n\t\t\t<a href=\"{{ url }}\">{{{ title }}}</a>\n\t\t</div>\n\n\t{{ /sections }}\n\n\t<ul class=\"social\">\n\t\t\n\t\t{{ #social }}\n\n\t\t\t<li class=\"{{ key }}\">\n\t\t\t\t<a href=\"{{ url }}\" target=\"_blank\">\n\t\t\t\t\t<img src=\"{{ config.cdn }}images/icn-{{ key }}.png\" alt=\"St Louis Brows: {{ key }}\" />\n\t\t\t\t\t<img src=\"{{ config.cdn }}images/icn-{{ key }}-hover.png\" alt=\"St Louis Brows: {{ key }}\" />\n\t\t\t\t</a>\n\t\t\t</li>\n\n\t\t{{ /social }}\n\n\t</ul>\n\t\n</div>",

	initialize: function( onComplete ) {

		data.config = Config;

		this.Controller = new NavController(this);
		this.render(data, document.body, true);

		this.Controller.animateIn();

		this.Sections = $.select('.section, .social', this.div);

		Velocity.hook(this.div, "transform-origin", "top center");
	},

	animateIn: function() {

		this.active = true;

		this.dark = $.hasClass(this.Controller.div, 'dark');

		$.css(this.div, {
			display: 'block'
		});

		var controllers = $.select('.nav-controller', document.body);
		$.addClass('dark', controllers);

		Velocity(this.Sections, "transition.fadeIn",
		{
			stagger: 100,
			duration: 400,
			display: 'block',
			delay: 500
		});

		Velocity(this.div, {
			opacity: [ 1, 0 ],
			translateY: [ 0, 25 ]
		}, {
			duration: 1200,
			delay: 500,
			easing: 'easeOutCubic'
		});

		Velocity(Stage, {
			blur: ( Device.system.touch ) ? 0 : [ 10, 0 ],
			scale: ( Device.system.touch ) ? 1 : 1.01,
			opacity: ( Device.system.touch ) ? 0.15 : 0.25,
			translateZ: 0
		}, {
			duration: 2000,
			easing: 'easeOutCubic'
		});
	},

	animateOut: function() {

		var controller = $.select('.nav-controller');

		if( this.dark ) {
			$.addClass('dark', controller);
		} else {
			$.removeClass(controller, 'dark');
		}
		
		$.removeClass(controller, 'active');

		this.active = false;

		Velocity(this.Sections, "transition.fadeOut",
		{
			stagger: 50,
			duration: 250,
			display: 'block'
		});

		Velocity(this.div, {
			opacity: 0,
			translateY: 10
		}, {
			duration: 350,
			display: 'none'
		});

		Velocity(Stage, {
			blur: 0,
			opacity: 1,
			scale: 1,
			translateZ: 0
		}, {
			duration: 1000,
			easing: 'linear'
		});
	}
});

module.exports = Nav;
},{"./../Config":1,"./../Data":2,"./../components/DOM":6,"./../components/View":23,"./Device":7,"./NavController":14,"./Utils":22,"./oop/Class":28,"velocity-animate":54,"velocity-animate/velocity.ui":55}],14:[function(require,module,exports){


var Velocity = require('velocity-animate');
var Class = require('./oop/Class');
var View = require('./../components/View');
var $ = require('./../components/DOM');
var Device = require('./../components/Device');

var Nav = require('./Nav');
var Config = require('./../Config');
var _data = require('./../Data');

var NavController = new Class({

	name: "nav-controller",
	template: "\n<div class=\"icon\">\n\t<span class=\"ball\"></span>\n\t<span class=\"bars\">\n\t\t<div></div>\n\t\t<div></div>\n\t\t<div></div>\n\t</span>\n\t<span class=\"close\">\n\t\t<div></div>\n\t\t<div></div>\n\t</span>\n</div>\n\n<div class=\"text\">\n\tMenu\n</div>",
	Extends: View,

	initialize: function( parent ) {

		this.render(_data, document.body, true);

		Velocity.hook(this.div, "opacity", 0);

		setTimeout(this.addListeners( parent ), 10000);
	},

	addListeners: function( parent ) {

		var _this = this;
		var icon = $.select('.icon', this.div);
		var items = $.select('span', icon);
		var text = $.select('.text', this.div);

		function handler(e) {

			e.preventDefault();

			if( parent.active ) {
				parent.animateOut();
				$.removeClass(_this.div, 'active');
				parent.active = false;
			}
			else {
				parent.animateIn();
				$.addClass('active', _this.div);
				parent.active = true;
			}
		}

		if( Device.system.touch ) {
			$.on(this.div, 'touchend', handler);
		} else {
			$.on(this.div, 'click', handler);
		}
	},

	animateIn: function() {

		var t = $.select('.title-text', document.body);

		Velocity(this.div, {
			opacity: [ 1, 0 ]
		}, {
			duration: 1200,
			easing: 'easeOutCubic',
			delay: 500
		});

		Velocity(t, {
			opacity: [ 1, 0 ]
		}, {
			duration: 1200,
			easing: 'easeOutCubic',
			delay: 500
		});
	}
});

module.exports = NavController;
},{"./../Config":1,"./../Data":2,"./../components/DOM":6,"./../components/Device":7,"./../components/View":23,"./Nav":13,"./oop/Class":28,"velocity-animate":54}],15:[function(require,module,exports){



var Class = require('./oop/Class');
var View = require('./View');

var $ = require('./DOM');
var Loader = require('./Loader');
var Config = require('./../Config');
var Velocity = require('velocity-animate');
var Device = require('./../components/Device');

var Overlay = new Class({

	Extends: View,
	name: 'overlay',
	template: '',
	templates: {
		players: "<div class=\"align\">\n\n\t<div class=\"inner\">\n\n\t\t<div class=\"close\">&times;</div>\n\n\t\t<h2>{{{ firstName }}} {{{ lastName }}}</h2>\n\t\t{{{ bio }}}\n\n\t\t<hr />\n\n\t\t<div class=\"stats grid\">\n\n\t\t\t<div>\n\t\t\t\t<h5>Position</h5>\n\t\t\t\t<p>{{ details.position }}</p>\n\t\t\t</div>\n\t\t\t<div>\n\t\t\t\t<h5>Bats</h5>\n\t\t\t\t<p>{{ details.bats }}</p>\n\t\t\t</div>\n\t\t\t<div>\n\t\t\t\t<h5>Throws</h5>\n\t\t\t\t<p>{{ details.arm }}</p>\n\t\t\t</div>\n\t\t\t<div>\n\t\t\t\t<h5>Height</h5>\n\t\t\t\t<p>{{ details.height.feet }}&rsquo; {{ details.height.inches }}&rdquo;</p>\n\t\t\t</div>\n\t\t\t<div>\n\t\t\t\t<h5>Weight</h5>\n\t\t\t\t<p>{{ details.weight }}</p>\n\t\t\t</div>\n\t\t\t<div>\n\t\t\t\t<h5>Hometown</h5>\n\t\t\t\t<p>{{ details.city }}</p>\n\t\t\t</div>\n\t\t\t<div>\n\t\t\t\t<h5>Born</h5>\n\t\t\t\t<p>{{ details.born.month }}/{{ details.born.day }}/{{ details.born.year }}</p>\n\t\t\t</div>\n\n\t\t</div>\n\n\t</div>\n\n\t<div class=\"url\">\n\t\t<a href=\"{{ url }}\" target=\"_blank\">More Stats &rarr;</a>\n\t</div>\n\n</div>",
		'history-section': "<div class=\"align\">\n\n\t<div class=\"inner\">\n\n\t\t<div class=\"close\">&times;</div>\n\t\t<h2>{{{ title }}}</h2>\n\t\t{{{ body }}}\n\n\t</div>\n\n</div>"
	},
	active: false,

	init: function( parent ) {

		this.parent = parent;

		Velocity.hook(this.div, "opacity", 0);

		$.append(this.div, parent.div);
	},

	populate: function( playerData, tpl ) {

		this.template = this.templates[ tpl ];
		var _this = this;

		this.render(playerData);
		this.content = $.select('.inner', this.div);
		this.items = $.select('.stats > div', this.div);
		this.mouseBug = $.select('.mouse-bug', this.div);
		this.closeBtn = $.select('.close', this.div);

		setTimeout(function() {
			_this.resize();
		}, 100);

		this.animateIn();
	},

	animateIn: function() {

		var url = $.select('.url', this.div);
		var controller = $.select('.nav-controller');

		$.removeClass(controller, 'dark');

		Velocity(this.div, {
			opacity: 1,
			translateZ: 0
		}, {
			display: 'block',
			easing: 'easeOutCubic',
			duration: 500
		});

		Velocity(this.content, {
			blur: [ 0, 5 ],
			top: [ 0, 35 ],
			opacity: [ 1, 0 ],
			translateZ: 0
		}, {
			easing: 'easeOutCubic',
			duration: 1200
		});

		Velocity(this.items, "transition.slideUpIn", {
			stagger: 100
		});

		Velocity(this.closeBtn, {
			opacity: [ 1, 0 ]
		}, {
			duration: 500,
			easing: "easeOutCubic"
		});

		Velocity(url, {
			opacity: [ 1, 0 ]
		}, {
			duration: 750,
			delay: 1000,
			easing: "easeOutCubic"
		});
	},

	animateOut: function() {

		Velocity(this.div, {
			opacity: 0
		}, {
			display: 'none',
			easing: 'easeOutCubic',
			duration: 500
		});

		var controller = $.select('.nav-controller');

		$.addClass('dark', controller);
	},

	resize: function( w, h ) {

		
	}
});

module.exports = Overlay;
},{"./../Config":1,"./../components/Device":7,"./DOM":6,"./Loader":12,"./View":23,"./oop/Class":28,"velocity-animate":54}],16:[function(require,module,exports){


var Config = require('./../Config');
var Class = require('./oop/Class');
var hasNative = 'addEventListener' in ( new Image() );

function checkProgress( src, image ) {

	// intermediate checker for queue remaining. not exported.
	// called on preLoader instance as scope
	var args = [];
	var o = this.options;

	// call onProgress
	o.onProgress && src && o.onProgress.call(this, src, image, this.completed.length);

	if (this.completed.length + this.errors.length === this.queue.length) {
		args.push(this.completed);
		this.errors.length && args.push(this.errors);
		o.onComplete.apply(this, args);
	}

	return this;
}

var Preloader = new Class({

	initialize: function(images, options) {

		this.options = {
			pipeline: false,
			auto: true,
			prefetch: false,
			onComplete: function() {}
		};

		options && typeof options == 'object' && this.setOptions(options);

		this.addQueue(images);
		this.queue.length && this.options.auto && this.processQueue();
	},

	animateIn: function( onComplete ) {


	},

	animateOut: function( onComplete ) {

		var _this = this;

		Velocity(this.div, {
			opacity: 0
		}, {
			duration: 500,
			complete: function() {

				_this.engine.stop();
				onComplete();
			}
		});
	},

	setOptions: function( options ) {
		
		// shallow copy
		var o = this.options, key;

		for (key in options) options.hasOwnProperty(key) && (o[key] = options[key]);

		return this;
	},

	addQueue: function( images ) {
		
		this.queue = images;

		return this;
	},

	reset: function() {

		this.completed = [];
		this.errors = [];

		return this;
	},

	addEvents: function(image, src, index) {

		var _this = this;
		var o = this.options;

		var cleanup = function() {

				this.removeEventListener('error', abort);
				this.removeEventListener('abort', abort);
				this.removeEventListener('load', load);
			};

		var abort = function() {

				cleanup.call(this);

				_this.errors.push(src);
				o.onError && o.onError.call(_this, src);
				checkProgress.call(_this, src);
				o.pipeline && _this.loadNext(index);
			};

		var load = function() {

				cleanup.call(this);

				// store progress. this === image
				_this.completed.push(src); // this.src may differ
				checkProgress.call(_this, src, this);
				o.pipeline && _this.loadNext(index);
			};

		image.addEventListener('error', abort, false);
		image.addEventListener('abort', abort, false);
		image.addEventListener('load', load, false);

		return this;
	},

	load: function( src, index ) {

		var image = new Image;

		this.addEvents(image, Config.cdn + src, index);

		// actually load
		image.src = Config.cdn + src;

		return this;
	},

	loadNext: function( index ) {

		// when pipeline loading is enabled, calls next item
		index++;
		this.queue[index] && this.load(this.queue[index], index);

		return this;
	},

	processQueue: function() {

		// runs through all queued items.
		var i = 0,
			queue = this.queue,
			len = queue.length;

		// process all queue items
		this.reset();

		if (!this.options.pipeline)
			for (; i < len; ++i) this.load(queue[i], i);
		else this.load(queue[0], 0);

		return this;
	}
})

module.exports = Preloader;
},{"./../Config":1,"./oop/Class":28}],17:[function(require,module,exports){
var routes = require( 'routes' );

var noop = function() {};

function router( settings ) {

	if( !( this instanceof router ) ) {

		return new router( settings );
	}

	var s = this.s = settings || {};

	s.postHash = s.postHash || '';
	s.onRoute = s.onRoute || function() {};

	this.router = routes();
}

router.prototype = {

	init: function() {

		var s = this.s;

		// figure out a start section
		if( s[ '/' ] === undefined ) {

			// find the first path which would be a section
			for( var i in s ) {

				if( i[ 0 ] == '/' ) {

					s.start = i;

					break;
				}
			}
		} else {

			s.start = '/';
		}


		// now setup routes
		for( var i in s ) {

			if( i[ 0 ] == '/' ) {

				this.router.addRoute( i, noop );
			}
		}

		window.addEventListener( 'hashchange', this.onURL.bind( this ) )

		// force a hash change to start things up
		this.onURL();

		return this;
	},

	add: function( route, section ) {

		var s = this.s;

		s[ route ] = section;

		return this;
	},

	go: function( routeStr ) {

		if( routeStr[ 0 ] != '/' )
			routeStr = '/' + routeStr;

		var routeData = this.getRouteData( routeStr ),
			section = this.getSection( routeData );

		// if this is not a section descriptor or it is a descriptor and we should updateURL
		if( this.useURL( section ) )
			window.location.hash = this.s.postHash + routeStr;
		else
			this.doRoute( routeData, section );
	},

	doRoute: function( routeData, section ) {

		var s = this.s;

		if( section ) {

			// check if this is a redirect
			if( typeof section == 'string' ) {

				this.go( section );
			// otherwise treat it as a regular section
			} else {

				// if this is a object definition vs a section definition
				if( section.section ) {

					s.onRoute( section.section, routeData );
				// this is a regular section or array
				} else {

					s.onRoute( section, routeData );
				}
			}
				
		} else if( s[ '404' ] ) {

			s.onRoute( s[ '404' ], routeData );
		}
	},

	getRouteData: function( routeStr ) {

		return this.router.match( routeStr );
	},

	getSection: function( routeData ) {

		if( routeData ) {

			return this.s[ routeData.route ];
		} else {

			return null;
		}
	},

	useURL: function( section ) {

		return section && 
			   ( section.section === undefined ||  // if this is not a section descriptor update url
			   ( section.section && section.useURL || section.useURL === undefined ) ) //is descriptor and has useURL or undefined
	},

	onURL: function() {

		var routeStr = '/',
			routeData, section;

		if( window.location.hash != '' ) {

			routeStr = window.location.hash.substr( 1 + this.s.postHash.length );
		}

		routeData = this.getRouteData( routeStr );
		section = this.getSection( routeData );

		// see if we can deep link into this section
		if( this.useURL( section ) )
			this.doRoute( routeData, section );
		// we should 404. Pass null value for section for the 404 to come up
		else
			this.doRoute( routeData, null );
	}
};

module.exports = router;
},{"routes":52}],18:[function(require,module,exports){
var $ = require('./DOM');

function randomChar(type){
	var pool = "";
	
	if (type == "lowerLetter"){
		pool = "abcdefghijklmnopqrstuvwxyz0123456789";
	}
	else if (type == "upperLetter"){
		pool = "ABCDEFGHIJKLMNOPQRSTUVWXYZ0123456789";
	}
	else if (type == "symbol"){
		pool = "1234567890";
	}
	
	var arr = pool.split('');
	return arr[Math.floor(Math.random()*arr.length)];
}


var ShuffleLetters = function( el, _text ) {
	
	var options = {
		"step"		: 12,				// How many times should the letters be changed
		"fps"		: 30,				// Frames Per Second
		"text"		: "", 				// Use this text instead of the contents
		"callback"	: function() {}		// Run once the animation is complete
	};

	return function(_el, _text) {

		var el = $._bonzo(_el),
			str = "";

		options.text = _text;

		// Preventing parallel animations using a flag;

		if( el.data('animated') ){
			return true;
		}
		
		el.data( 'animated', true );
		
		
		if( options.text ) {
			str = options.text.split('');
		}
		else {
			str = el.text().split('');
		}
		
		// The types array holds the type for each character;
		// Letters holds the positions of non-space characters;
		
		var types = [],
			letters = [];

		// Looping through all the chars of the string
		
		for( var i = 0; i < str.length; i ++ ) {
			
			var ch = str[i];
			
			if( ch == " " ){
				types[i] = "space";
				continue;
			}
			else if( /[a-z]/.test(ch) ){
				types[i] = "lowerLetter";
			}
			else if( /[A-Z]/.test(ch) ){
				types[i] = "upperLetter";
			}
			else {
				types[i] = "symbol";
			}
			
			letters.push(i);
		}
		
		$.html(el, "");			

		// Self executing named function expression:
		
		(function shuffle(start) {
		
			// This code is run options.fps times per second
			// and updates the contents of the page element
				
			var i,
				len = letters.length, 
				strCopy = str.slice(0);	// Fresh copy of the string
				
			if( start > len ){
				
				// The animation is complete. Updating the
				// flag and triggering the callback;
				
				el.data('animated',false);
				options.callback(el);
				return;
			}
			
			// All the work gets done here
			for(i=Math.max(start,0); i < len; i++){

				// The start argument and options.step limit
				// the characters we will be working on at once
				
				if( i < start+options.step){
					// Generate a random character at thsi position
					strCopy[letters[i]] = randomChar(types[letters[i]]);
				}
				else {
					strCopy[letters[i]] = "";
				}
			}
			
			el.text(strCopy.join(""));
			
			setTimeout(function(){
				
				shuffle(start+1);
				
			},1000/options.fps);
			
		})(-options.step);
		

	};
};

module.exports = ShuffleLetters;
},{"./DOM":6}],19:[function(require,module,exports){


var Class = require('./oop/Class');

var Easer = require('./Easer');
var VirtualScroll = require('./VirtualScroll')();
var Loop = require('raf-loop');

var SmoothScroll = new Class({

	initialize: function( callback, easeVal ) {

		easeVal = easeVal || 0.15;

		this.callback = null;
		this.callback = callback;
		this.easer = new Easer( easeVal );
		this.engine = new Loop( this.onRender.bind(this) );
	},

	setLimits: function(_min, _max) {

		this.easer.setLimits(_min, _max);
	},

	addListeners: function() {

		VirtualScroll.on( this.onScroll.bind(this) );
	},

	removeListeners: function() {

		VirtualScroll.off( this.onScroll.bind(this) );
	},

	onScroll: function(e) {

		if( e.originalEvent.type && e.originalEvent.type !== 'keydown' ) e.originalEvent.preventDefault();

		var d = (e.deltaX + e.deltaY) * 0.5;
		this.easer.updateTarget(d);
	},

	onRender: function(delta) {

		var scr = this.easer.easeVal();
		this.callback(scr, delta);
	},

	startRender: function() {

		this.addListeners();
		this.engine.start();
	},

	stopRender: function() {

		this.engine.stop();
		this.removeListeners();
	},

	setTarget: function( target ) {

		this.easer.setTarget( target );
	}
});

module.exports = SmoothScroll;
},{"./Easer":8,"./VirtualScroll":26,"./oop/Class":28,"raf-loop":48}],20:[function(require,module,exports){

var Class = require('./oop/Class');

var Easer = require('./Easer');
var VirtualScroll = require('./VirtualScroll')();
var Loop = require('raf-loop');
var Util = require('./Utils');

var lastAnimation = null;
var timeNow = null;
var waitTime = 1000;
var index = 0;

var SnappyScroll = new Class({

	initialize: function( callback, easeVal, wait ) {

		easeVal = easeVal || 0.15;

		if( wait ) waitTime = wait;

		this.callback = callback;
		this.easer = new Easer( easeVal );
		this.engine = new Loop( this.onRender.bind(this) );
		this.scrAmt = 0;
	},

	setIndex: function( idx ) {

		var e = {
			deltaX: (index < idx) ? -1 : 1,
			deltaY: 0,
			x: 0,
			Y: 0,
			originalEvent: {
				type: null
			}
		}

		this.onScroll(e);
	},

	setMaxIndex: function( i ) {

		this.maxIndex = parseInt(i) - 1;
	},

	setWidth: function( _width ) {

		this.scrAmt = _width;
	},

	setLimits: function(_min, _max) {

		this.easer.setLimits(_min, _max);
	},

	addListeners: function() {

		VirtualScroll.on( this.onScroll.bind(this) );
	},

	removeListeners: function() {

		VirtualScroll.off( this.onScroll.bind(this) );
	},

	onScroll: function(e) {

		if( e.originalEvent.type && e.originalEvent.type !== 'keydown' ) e.originalEvent.preventDefault();

		timeNow = new Date().getTime();

		if (timeNow - lastAnimation < waitTime) {
			
			return false;
		} else {

			// update scroll position here
			var a;
			var b = this.easer.getTarget();
			var amtX = Math.abs( e.deltaX );
			var amtY = Math.abs( e.deltaY );

			if( amtX > amtY ) {

				a = e.deltaX < 0 ? this.scrAmt * -1 : this.scrAmt;
				(e.deltaX < 0) ? (index = index + 1) : (index = index - 1);
			} else if( amtY > amtX ) {

				a = e.deltaY < 0 ? this.scrAmt * -1 : this.scrAmt;
				(e.deltaY < 0) ? (index = index + 1) : (index = index - 1);
			}

			index = Util.clamp(index, 0, this.maxIndex);
			
			b += a;

			this.easer.setTarget(b);

			if( this.onScrollUpdate )
				this.onScrollUpdate( index );
		}

		lastAnimation = timeNow;
	},

	onRender: function(delta) {

		var scr = this.easer.easeVal();
		this.callback(scr, delta);
	},

	startRender: function() {

		this.addListeners();
		this.engine.start();

		if( this.onScrollUpdate )
			this.onScrollUpdate( index );
	},

	stopRender: function() {

		this.engine.stop();
		this.removeListeners();
	},

	setTarget: function( target ) {

		this.easer.setTarget( target );
	}
});

module.exports = SnappyScroll;
},{"./Easer":8,"./Utils":22,"./VirtualScroll":26,"./oop/Class":28,"raf-loop":48}],21:[function(require,module,exports){


var Class = require('./oop/Class');
var View = require('./View');

var $ = require('./DOM');
var Velocity = require('velocity-animate');

var Ticker = new Class({

	name: 'ticker',
	Extends: View,

	initialize: function( _num ) {

		this.div = document.createElement('div');
		this.div.className = 'ticker';

		var numbers = [ 0, 1, 2, 3, 4, 5, 6, 7, 8, 9 ].join('\n');
		var num = '<span>' + numbers + '</span>';
		var tpl = '<div class="row row-top">' + num + num + '</div><div class="row row-bottom">' + num + num + '</div>';

		this.div.innerHTML = tpl;

		this.arr = _num.toString().split('');
	},

	animateIn: function() {

		var _this = this;
		var el = $.select('span', this.div);

		for( var i = 0; i < this.arr.length; i ++ ) {

			var amt = parseInt(this.arr[ i ]) * -10 + '%';

			Velocity(el[ i ], {
				translateY: amt
			}, {
				duration: 1000,
				delay: (100 * i) + 250,
				easing: 'easeOutCubic'
			});
		}
	},

	animateOut: function() {


	}
});

module.exports = Ticker;
},{"./DOM":6,"./View":23,"./oop/Class":28,"velocity-animate":54}],22:[function(require,module,exports){

var $ = require('./DOM');

var Utils = {

	randomChar: function(type){

		var pool = "";
		
		if (type == "lowerLetter"){
			pool = "abcdefghijklmnopqrstuvwxyz0123456789";
		}
		else if (type == "upperLetter"){
			pool = "ABCDEFGHIJKLMNOPQRSTUVWXYZ0123456789";
		}
		else if (type == "symbol"){
			pool = ",.?/\\(^)![]{}*&^%$#'\"";
		}
		
		var arr = pool.split('');
		return arr[Math.floor(Math.random()*arr.length)];
	},

	clamp: function(value, start, end) {
		if(value < start) return start;
		else if(value > end) return end;
		else return value;
	},

	scrollCheck: function(el, scr, callback) {

		var all = $.select(el);

		for (var i = 0; i < all.length; i ++) {
			
			var _this = all[i];
			
			if ( $.hasClass(_this, 'active') ) {
				continue
			}

			var top_fifth_of_object = _this.offsetTop + _this.scrollHeight / 3 - 100;
			var bottom_of_window = scr + window.innerHeight;

			/* If the object is a third over the fold, fade it in */
			if( bottom_of_window > top_fifth_of_object ) {
				$.addClass(_this, 'active');
				callback(_this, i);
			}
		}
	},

	debounce: function(func, wait, immediate) {

		var timeout;
		return function() {
			
			var context = this, args = arguments;

			var later = function() {

				timeout = null;
				if (!immediate) func.apply(context, args);
			};

			var callNow = immediate && !timeout;

			clearTimeout(timeout);

			timeout = setTimeout(later, wait);

			if (callNow) func.apply(context, args);
		}
	},

	norm: function(value , min, max) {
		//- Normalizes a number from another range into a value between 0 and 1.
		return (value - min) / (max - min);
	},

	splitText: function(el) {

		var t = el.innerText;
		var arr = t.split('');
		var inject = '';

		if (arr.length) {

			for( var i = 0; i < arr.length; i ++ ) {

				var item = arr[ i ];

				if( item == ' ' )
					item = '&nbsp;';
				inject += '<span>' + item + '</span>';
			}

			el.innerHTML = '';
			el.innerHTML = inject;
		}
	},

	randomBtwn: function(minVal, maxVal) {
		return minVal + (Math.random() * (maxVal - minVal));
	},

	truncate: function(str, len) {

		//trim the string to the maximum length
		var trimmedString = str.substr(0, len);

		//re-trim if we are in the middle of a word
		trimmedString = trimmedString.substr(0, Math.min(trimmedString.length, trimmedString.lastIndexOf(" ")))

		return trimmedString;
	}

};

module.exports = Utils;
},{"./DOM":6}],23:[function(require,module,exports){

var Class = require('./oop/Class');
var Mustache = require('mustache');
var bonzo = require('bonzo');

var View = new Class({
	
	initialize: function() {

		this.div = document.createElement('div');

		if( this.name )
			this.div.className = this.name;

		if( this.template )
			Mustache.parse(this.template);
	},

	render: function( data, parent, prepend ) {

		var html = Mustache.render( this.template, data );
		
		this.div.innerHTML = html;

		if( parent ) {
			
			if( prepend )
				bonzo(parent).prepend(this.div);
			else
				bonzo(parent).append(this.div);
		}
	},

	destroy: function() {

		this.div.parentNode.removeChild( this.div );
	}
});

module.exports = View;
},{"./oop/Class":28,"bonzo":41,"mustache":45}],24:[function(require,module,exports){
function ViewManager( settings ) {

	if( !( this instanceof ViewManager ) )
		return new ViewManager( settings );

	var s = this.settings = settings || {};
	s.overlap = s.overlap === undefined ? true : s.overlap;
	this.width = s.width || 1000;
	this.height = s.height || 800;

	this.currentContent = null;
	this.newContent = null;
}

ViewManager.prototype = {

	get overlap() {

		return this.settings.overlap;
	},

	set overlap( value ) {

		this.settings.overlap = value;
	},

	show: function( content, data, onComplete ) {

		if( onComplete === undefined && typeof data == 'function' ) {

			onComplete = data;
			data = null;
		}

		if( content != this.newContent && content != this.currentContent ) {

			if( this.newContent && this.newContent.destroy )
				this.newContent.destroy();

			this.newContent = content;

			if( content.init ) {

				if( data )
					content.init( data, this.swap.bind( this, this.newContent, onComplete ) );
				else
					content.init( this.swap.bind( this, this.newContent, onComplete ) );
			} else {

				this.swap( this.newContent, onComplete );
			}
		}
	},

	clear: function( onComplete ) {

		if( this.newContent && this.newContent.destroy )
			this.newContent.destroy();

		if( this.currentContent ) {

			var oldOut = function( oldContent ) {

				if( oldContent.destroy )
					oldContent.destroy();

				if( onComplete )
					onComplete( oldContent );
			}.bind( this, this.currentContent );

			if( this.currentContent.animateOut )
				this.currentContent.animateOut( oldOut );
			else
				oldOut();
		}
	},

	resize: function( w, h ) {

		var s = this.settings;

		s.width = w;
		s.height = h;

		if( this.currentContent && this.currentContent.resize )
			this.currentContent.resize( w, h );
	},

	swap: function( newContent, onComplete ) {

		if( newContent == this.newContent ) {

			var s = this.settings;
			var oldContent = this.currentContent;
			var onOldContentOut;
			var onNewContentIn = function() {

				if( s.endAnimateIn )
					s.onEndAnimateIn( newContent, onComplete );

				if( onComplete )
					onComplete( newContent, oldContent );
			}

			//- resize content if it can be resized
			newContent.resize && newContent.resize( s.width, s.height );

			//- start animate in callback
			if( s.onStartAnimateIn )
				s.onStartAnimateIn( newContent, this.currentContent );

			//- check for content on screen already
			if( this.currentContent ) {

				onOldContentOut = function() {

					if( s.onEndAnimateOut )
						s.onEndAnimateOut( newContent, oldContent );

					if( oldContent.destroy )
						oldContent.destroy();

					if( !s.overlap ) {

						if( newContent.animateIn )
							newContent.animateIn( onNewContentIn );
						else 
							onNewContentIn();
					}
				};

				if( s.onStartAnimateOut )
					s.onStartAnimateOut( newContent, oldContent );

				if( oldContent.animateOut )
					oldContent.animateOut( onOldContentOut );
				else
					onOldContentOut();

				if( s.overlap ) {

					if( newContent.animateIn )
						newContent.animateIn( onNewContentIn );
					else
						onNewContentIn();
				}
			} else {

				//- just bring in new content
				if( newContent.animateIn )
					newContent.animateIn( onNewContentIn );
				else 
					onNewContentIn();
			}

			this.currentContent = newContent;
			this.newContent = null;
		}
	}
};

module.exports = ViewManager;
},{}],25:[function(require,module,exports){
function mediator() {

	if( !( this instanceof mediator ) ) {

		var rVal = Object.create( mediator.prototype );
		mediator.apply( rVal, arguments );
		return rVal;
	}

	this.items = arguments;
}

mediator.prototype = {

	init: function( data, onComplete ) {

		var numInit = 0,
			numToInit = 0,
			numItem = this.items.length,
			onInit = function() {

				if( ++numInit == numToInit )
					onComplete();
			};

		// the following needs to be done in two for loops
		// because init may complete immediately
		// looks odd but it's needed
		for( var i = 0; i < numItem; i++ ) {

			if( typeof this.items[ i ].init == 'function' )
				numToInit++;
		}

		// now finally do the initialization
		for( var i = 0; i < numItem; i++ ) {

			if( typeof this.items[ i ].init == 'function' )
				this.items[ i ].init( data, onInit );
		}
	},

	resize: function( w, h ) {

		for( var i = 0, len = this.items.length; i < len; i++ ) {

			if( typeof this.items[ i ].resize == 'function' )
				this.items[ i ].resize( w, h );
		}
	},

	aniIn: function( onComplete ) {

		this.doAni( 'aniIn', onComplete );		
	},

	aniOut: function( onComplete ) {

		this.doAni( 'aniOut', onComplete );
	},

	doAni: function( func, onComplete ) {

		var numAni = numItem = 0,
			onAni = function() {

				if( ++numAni == numItem )
					onComplete();
			};

		// we need to do two loops here just in case onComplete gets called immediately
		for( var i = 0, len = this.items.length; i < len; i++ ) {

			if( typeof this.items[ i ][ func ] == 'function' )
				numItem++;
		}

		// now call the animate in functions
		for( var i = 0, len = this.items.length; i < len; i++ ) {

			if( typeof this.items[ i ][ func ] == 'function' )
				this.items[ i ][ func ]( onAni );
		}
	},

	destroy: function() {

		for( var i = 0, len = this.items.length; i < len; i++ ) {

			if( typeof this.items[ i ].destroy == 'function' )
				this.items[ i ].destroy();
		}
	}
};


module.exports = mediator;
},{}],26:[function(require,module,exports){


var VirtualScroll = function() {

	var vs = {};

	var numListeners, listeners = [], initialized = false;

	var touchStartX, touchStartY;

	// [ These settings can be customized with the options() function below ]
	// Mutiply the touch action by two making the scroll a bit faster than finger movement
	var touchMult = 2;
	// Firefox on Windows needs a boost, since scrolling is very slow
	var firefoxMult = 15;
	// How many pixels to move with each key press
	var keyStep = 500;
	// General multiplier for all mousehweel including FF
	var mouseMult = 1;

	var bodyTouchAction;

	var hasWheelEvent = 'onwheel' in document;
	var hasMouseWheelEvent = 'onmousewheel' in document;
	var hasTouch = 'ontouchstart' in document;
	var hasTouchWin = navigator.msMaxTouchPoints && navigator.msMaxTouchPoints > 1;
	var hasPointer = !!window.navigator.msPointerEnabled;
	var hasKeyDown = 'onkeydown' in document;

	var isFirefox = navigator.userAgent.indexOf('Firefox') > -1;

	var event = {
		y: 0,
		x: 0,
		deltaX: 0,
		deltaY: 0,
		originalEvent: null
	};

	vs.on = function(f) {
		if(!initialized) initListeners(); 
		listeners.push(f);
		numListeners = listeners.length;
	}

	vs.options = function(opt) {
		keyStep = opt.keyStep || 120;
		firefoxMult = opt.firefoxMult || 15;
		touchMult = opt.touchMult || 2;
		mouseMult = opt.mouseMult || 1;
	}

	vs.off = function(f) {
		listeners.splice(f, 1);
		numListeners = listeners.length;
		if(numListeners <= 0) destroyListeners();
	}

	var notify = function(e) {
		event.x += event.deltaX;
		event.y += event.deltaY;
		event.originalEvent = e;

		for(var i = 0; i < numListeners; i++) {
			listeners[i](event);
		}
	}

	var onWheel = function(e) {
		// In Chrome and in Firefox (at least the new one)
		event.deltaX = e.wheelDeltaX || e.deltaX * -1;
		event.deltaY = e.wheelDeltaY || e.deltaY * -1;

		// for our purpose deltamode = 1 means user is on a wheel mouse, not touch pad 
		// real meaning: https://developer.mozilla.org/en-US/docs/Web/API/WheelEvent#Delta_modes
		if(isFirefox && e.deltaMode == 1) {
			event.deltaX *= firefoxMult;
			event.deltaY *= firefoxMult;
		} 

		event.deltaX *= mouseMult;
		event.deltaY *= mouseMult;

		notify(e);
	}

	var onMouseWheel = function(e) {
		// In Safari, IE and in Chrome if 'wheel' isn't defined
		event.deltaX = (e.wheelDeltaX) ? e.wheelDeltaX : 0;
		event.deltaY = (e.wheelDeltaY) ? e.wheelDeltaY : e.wheelDelta;

		notify(e);	
	}

	var onTouchStart = function(e) {
		var t = (e.targetTouches) ? e.targetTouches[0] : e;
		touchStartX = t.pageX;	
		touchStartY = t.pageY;
	}

	var onTouchMove = function(e) {
		// e.preventDefault(); // < This needs to be managed externally
		var t = (e.targetTouches) ? e.targetTouches[0] : e;

		event.deltaX = (t.pageX - touchStartX) * touchMult;
		event.deltaY = (t.pageY - touchStartY) * touchMult;
		
		touchStartX = t.pageX;
		touchStartY = t.pageY;

		notify(e);
	}

	var onKeyDown = function(e) {

		// 37 left arrow, 38 up arrow, 39 right arrow, 40 down arrow
		event.deltaX = event.deltaY = 0;
		switch(e.keyCode) {
			case 37:
				event.deltaX = -keyStep;
				break;
			case 39:
				event.deltaX = keyStep;
				break;
			case 38:
				event.deltaY = keyStep;
				break;
			case 40:
				event.deltaY = -keyStep;
				break;
		}

		if( e.ctrlKey && e.keyCode == 40 ) {
			event.deltaY = -1000000;
		}

		if( e.ctrlKey && e.keyCode == 38 ) {
			event.deltaY = 1000000;
		}

		notify(e);
	}

	var initListeners = function() {
		if(hasWheelEvent) document.addEventListener("wheel", onWheel);
		if(hasMouseWheelEvent) document.addEventListener("mousewheel", onMouseWheel);

		if(hasTouch) {
			document.addEventListener("touchstart", onTouchStart);
			document.addEventListener("touchmove", onTouchMove);
		}
		
		if(hasPointer && hasTouchWin) {
			bodyTouchAction = document.body.style.msTouchAction;
			document.body.style.msTouchAction = "none";
			document.addEventListener("MSPointerDown", onTouchStart, true);
			document.addEventListener("MSPointerMove", onTouchMove, true);
		}

		if(hasKeyDown) document.addEventListener("keydown", onKeyDown);

		initialized = true;
	}

	var destroyListeners = function() {
		if(hasWheelEvent) document.removeEventListener("wheel", onWheel);
		if(hasMouseWheelEvent) document.removeEventListener("mousewheel", onMouseWheel);

		if(hasTouch) {
			document.removeEventListener("touchstart", onTouchStart);
			document.removeEventListener("touchmove", onTouchMove);
		}
		
		if(hasPointer && hasTouchWin) {
			document.body.style.msTouchAction = bodyTouchAction;
			document.removeEventListener("MSPointerDown", onTouchStart, true);
			document.removeEventListener("MSPointerMove", onTouchMove, true);
		}

		if(hasKeyDown) document.removeEventListener("keydown", onKeyDown);

		initialized = false;
	}

	return vs;
};

module.exports = VirtualScroll;
},{}],27:[function(require,module,exports){
module.exports = {

	parent: function() {

		//- if the current function calling is the constructor
		if( this.parent.caller._isConstructor ) {

			var parentFunction = this.parent.caller._parentConstructor;
		} else {

			if( this.parent.caller._name ) {

				var callerName = this.parent.caller._name;
				var isGetter = this.parent.caller._owner._getters[ callerName ];
				var isSetter = this.parent.caller._owner._setters[ callerName ];

				if( arguments.length == 1 && isSetter ) {

					var parentFunction = Object.getPrototypeOf( this.parent.caller._owner )._setters[ callerName ];

					if( parentFunction === undefined ) {
						throw 'No setter defined in parent';
					}
				} else if( arguments.length == 0 && isGetter ) {

					var parentFunction = Object.getPrototypeOf( this.parent.caller._owner )._getters[ callerName ];

					if( parentFunction === undefined ) {
						throw 'No getter defined in parent';
					}
				} else if( isSetter || isGetter ) {

					throw 'Incorrect amount of arguments sent to getter or setter';
				} else {

					var parentFunction = Object.getPrototypeOf( this.parent.caller._owner )[ callerName ];	

    				if( parentFunction === undefined ) {
						throw 'No parent function defined for ' + callerName;
					}
				}
			} else {

				throw 'Parent cannot be used in this context';
			}
		}

		return parentFunction.apply( this, arguments );
	}
};
},{}],28:[function(require,module,exports){
var BaseClass = require( './BaseClass' );

var Class = function( descriptor ) {

	var rval = undefined;

	if ( descriptor === undefined ) {

		descriptor = {};
	}

	if( descriptor.initialize ) {

		rval = descriptor.initialize;
		delete descriptor.initialize;
	} else {

		rval = function() { 

			Array.prototype.splice.apply( arguments, [ 0, 0, this ] );

			Class.parent.apply( undefined, arguments );
		};
	}

	if( descriptor.Extends !== undefined ) {

		descriptor.Extends();
		descriptor.Extends._isConstructor = true;

		rval.prototype = Object.create( descriptor.Extends.prototype );
		
		// this will be used to call the parent constructor
		rval._parentConstructor = descriptor.Extends;
		delete descriptor.Extends;
	} else {

		rval.prototype = Object.create( BaseClass );
		rval._parentConstructor = function() {};
	}

	rval.prototype._getters = {};
	rval.prototype._setters = {};

	for( var i in descriptor ) {
		if( typeof descriptor[ i ] == 'function' ) {
			descriptor[ i ]._name = i;
			descriptor[ i ]._owner = rval.prototype;

			rval.prototype[ i ] = descriptor[ i ];
		} else if( descriptor[ i ] && typeof descriptor[ i ] == 'object' && ( descriptor[ i ].get || descriptor[ i ].set ) ) {
			Object.defineProperty( rval.prototype, i , descriptor[ i ] );

			if( descriptor[ i ].get ) {
				rval.prototype._getters[ i ] = descriptor[ i ].get;
				descriptor[ i ].get._name = i;
				descriptor[ i ].get._owner = rval.prototype;
			}

			if( descriptor[ i ].set ) {
				rval.prototype._setters[ i ] = descriptor[ i ].set;
				descriptor[ i ].set._name = i;
				descriptor[ i ].set._owner = rval.prototype;	
			}
		} else {
			rval.prototype[ i ] = descriptor[ i ];
		}
	}

	// this will be used to check if the caller function is the consructor
	rval._isConstructor = true;

	// now we'll check interfaces
	for( var i = 1; i < arguments.length; i++ ) {
		arguments[ i ].compare( rval );
	}

	return rval;
};	

Class.parent = function( scope ) {

	var caller = Class.parent.caller;

	arguments = Array.prototype.slice.apply( arguments, [ 1 ] )

	// if the current function calling is the constructor
	if( caller._isConstructor ) {
		var parentFunction = caller._parentConstructor;
	} else {
		if( caller._name ) {
			var callerName = caller._name;
			var isGetter = caller._owner._getters[ callerName ];
			var isSetter = caller._owner._setters[ callerName ];

			if( arguments.length == 1 && isSetter ) {
				var parentFunction = Object.getPrototypeOf( caller._owner )._setters[ callerName ];

				if( parentFunction === undefined ) {
					throw 'No setter defined in parent';
				}
			} else if( arguments.length == 0 && isGetter ) {
				var parentFunction = Object.getPrototypeOf( caller._owner )._getters[ callerName ];

				if( parentFunction === undefined ) {
					throw 'No getter defined in parent';
				}
			} else if( isSetter || isGetter ) {
				throw 'Incorrect amount of arguments sent to getter or setter';
			} else {
				var parentFunction = Object.getPrototypeOf( caller._owner )[ callerName ];	

				if( parentFunction === undefined ) {
					throw 'No parent function defined for ' + callerName;
				}
			}
		} else {
			throw 'You cannot call parent here';
		}
	}

	return parentFunction.apply( scope, arguments );
};

module.exports = Class;
},{"./BaseClass":27}],29:[function(require,module,exports){


var Class = require('./../components/oop/Class');
var View = require('./../components/View');
var Velocity = require('velocity-animate');
var $ = require('./../components/DOM');
var SmoothScroll = require('./../components/SmoothScroll');

var _ = require('underscore');
var _data = require('./../Data').blog;

var headerDark = false;

var BlogView = new Class({

	name: "blog-post-view",
	Extends: View,
	template: "<div class=\"page-title\">\n\t<h1>News &amp; Events</h1>\n</div>\n\n<div class=\"post\">\n\n\t<div class=\"inner\">\n\t\t\n\t\t<div class=\"social\">\n\t\t\t<ul>\n\t\t\t\t<li>\n\t\t\t\t\t<a href=\"http://www.facebook.com/sharer.php?s=100&p[url]=http://www.thestlbrowns.com/%23/news-and-events/{{ slug }}&p[images][0]=/og-image.jpg&p[title]=The St. Louis Browns Historical Society&p[summary]=The St. Louis Browns Historical Society and Fan Club is dedicated to preserving every stat and story, so the legend of baseball's most colorful underdogs can endure forever.\" target=\"_blank\" class=\"facebook\">F</a>\n\t\t\t\t</li>\n\t\t\t\t<li>\n\t\t\t\t\t<a href=\"https://twitter.com/intent/tweet?text=The St. Louis Browns Historical Society and Fan Club is dedicated to preserving every stat and story, so the legend of baseball's most colorful underdogs can endure forever.&url=http://www.thestlbrowns.com/%23/news-and-events/{{ slug }}\" target=\"_blank\" class=\"twitter\">T</a>\n\t\t\t\t</li>\n\t\t\t\t<li>\n\t\t\t\t\t<a href=\"mailto:?body=Here is a link to an article I found on the St. Louis Browns Historical Society website: http://www.thestlbrowns.com/%23/news-and-events/{{ slug }}&amp;subject=An article from the St. Louis Browns Historical Society\" class=\"email\">M</a>\n\t\t\t\t</li>\n\t\t\t</ul>\n\t\t</div>\n\n\t\t<div class=\"post-body\">\n\t\t\t\n\t\t\t<p class=\"date\">{{ date }}</p>\n\t\t\t<h2>{{ title }}</h2>\n\t\t\t<p class=\"lead\">{{{ excerpt }}}</p>\n\n\t\t\t{{ #images.article }}\n\t\t\t<div class=\"post-image\">\n\t\t\t\t<img src=\"{{ . }}\" alt=\"\" />\n\t\t\t</div>\n\t\t\t{{ /images.article }}\n\n\t\t\t{{{ body }}}\n\t\n\t\t\t<hr />\n\t\t\t<p>\n\t\t\t\t<a href=\"#/news-and-events\">&larr; Back to all posts</a>\n\t\t\t</p>\n\t\t\t\n\t\t</div>\n\n\t</div>\n\n</div>",

	init: function( routeData, onComplete ) {

		var _this = this;

		this.renderer = new SmoothScroll( this.onRender.bind(this) );

		var postId = routeData.params.id;

		var postData = _.findWhere(_data.posts, { slug: postId });

		this.render(postData, Stage);
		$.addClass('page', this.div);

		this.content = $.select('.post', this.div);
		this.title = $.select('.page-title h1', this.div);

		var header = $.select('.page-title', this.div);
		this.headerHeight = header[ 0 ].scrollHeight;

		onComplete();

		setTimeout(function() {

			_this.resize();
		}, 100);

		this.addListeners();
	},

	addListeners: function() {
		
		$.on(this.div, 'click', function(e) {

			if( $.hasClass(e.target, 'twitter') || $.hasClass(e.target, 'facebook') ) {

				e.preventDefault();

				var href = e.target.getAttribute('href');

				window.open(href, null, 'height=420, width=550');
			}
		});
	},

	animateOut: function( onComplete ) {

		Velocity(this.div, {
			opacity: [ 0, 1 ]
		}, {
			duration: 1000,
			complete: onComplete
		});

		this.renderer.stopRender();
	},

	animateIn: function( onComplete ) {

		this.renderer.startRender();

		Velocity(this.div, {
			opacity: [ 1, 0 ]
		}, {
			duration: 1000,
			complete: onComplete,
			easing: 'linear'
		});
	},

	onRender: function( scr ) {

		var op = 1 - ((scr / 5) / -100);

		$.transform(this.content, {
			y: scr
		});

		$.transform(this.title, {
			y: (scr * 0.15)
		}).css(this.title, {
			opacity: op
		});

		if( scr < -this.headerHeight && !headerDark ) {

			$.addClass('dark', this.navController);
			headerDark = true;
		} else if( scr > -this.headerHeight && headerDark ) {

			$.removeClass(this.navController, 'dark');
			headerDark = false;
		}
	},

	resize: function( w, h ) {

		var max = Math.max(0, (this.div.scrollHeight - window.innerHeight));
		this.renderer.setLimits((max * -1), 0);

		var header = $.select('.page-title', this.div);
		this.headerHeight = header[ 0 ].scrollHeight;
	}
});

module.exports = BlogView;
},{"./../Data":2,"./../components/DOM":6,"./../components/SmoothScroll":19,"./../components/View":23,"./../components/oop/Class":28,"underscore":53,"velocity-animate":54}],30:[function(require,module,exports){


var Class = require('./../components/oop/Class');
var View = require('./../components/View');
var Velocity = require('velocity-animate');
var $ = require('./../components/DOM');

var ContactView = new Class({

	name: "contact-view",
	Extends: View,
	template: "<div class=\"page-title\">\n\t<h1>Contact</h1>\n</div>\n\n<div class=\"content\">\n\t\n\t<div class=\"inner\">\n\t\n\t\t<div class=\"grid grid-padded\">\n\t\t\t\n\t\t\t<div>\n\t\t\t\t\n\t\t\t\t<h2>Contact The Society</h2>\n\t\t\t\t<p>If you want to learn more about the St. Louis Browns, the Historical Society, membership, upcoming events, or any other related topic, please fill out the form below. Someone will get back to you shortly.</p>\n\n\t\t\t</div>\n\n\t\t\t<div>\n\n\t\t\t\t<form id=\"contact\" novalidate>\n\t\t\t\t\t<div class=\"form-group\" data-required>\n\t\t\t\t\t\t<input id=\"name\" name=\"name\" type=\"text\" placeholder=\"Your Name\" />\n\t\t\t\t\t</div>\n\t\t\t\t\t\n\t\t\t\t\t<div class=\"form-group\" data-required>\n\t\t\t\t\t\t<input id=\"email\" name=\"email\" type=\"email\" placeholder=\"Email Address\" />\n\t\t\t\t\t</div>\n\n\t\t\t\t\t<div class=\"form-group\" data-required>\n\t\t\t\t\t\t<input id=\"phone\" name=\"phone\" type=\"text\" placeholder=\"Phone Number\" />\n\t\t\t\t\t</div>\n\n\t\t\t\t\t<div class=\"form-group\" data-required>\n\t\t\t\t\t\t<textarea id=\"comment\" name=\"comment\" placeholder=\"Question/Comment\"></textarea>\n\t\t\t\t\t</div>\n\n\t\t\t\t\t<div class=\"form-group error\">\n\t\t\t\t\t\t<p>All fields are required.</p>\n\t\t\t\t\t</div>\n\n\t\t\t\t\t<button type=\"submit\" class=\"submit\">Submit</button>\n\t\t\t\t</form>\n\n\t\t\t</div>\n\n\t\t</div>\n\n\t</div>\n\n</div>",

	init: function( data, onComplete ) {

		var nav = $.select('.nav-controller');
		$.addClass('dark', nav);

		this.render(data, Stage);
		$.addClass('page', this.div);

		onComplete();
	},

	animateOut: function( onComplete ) {

		Velocity(this.div, {
			opacity: [ 0, 1 ]
		}, {
			duration: 1000,
			complete: onComplete
		});
	},

	animateIn: function( onComplete ) {

		Velocity(this.div, {
			opacity: [ 1, 0 ]
		}, {
			duration: 1000,
			complete: onComplete
		});
	},

	resize: function( w, h ) {

		// console.log(w, h);
	}
});

module.exports = ContactView;
},{"./../components/DOM":6,"./../components/View":23,"./../components/oop/Class":28,"velocity-animate":54}],31:[function(require,module,exports){


var Class = require('./../components/oop/Class');
var View = require('./../components/View');
var Velocity = require('velocity-animate');
var $ = require('./../components/DOM');

var Data = require('./../Data');
var Config = require('./../Config');
var Serialize = require('./../components/FormSerializer');
var Loader = require('./../components/Loader');
var Util = require('./../components/Utils');

var SmoothScroll = require('./../components/SmoothScroll');

var headerDark = false, headerHeight;
var footer = "<footer>\n\t\n\t<div class=\"inner\">\n\t\t\n\t\t<div class=\"grid grid-middle\">\n\n\t\t\t<div class=\"logo\">\n\t\t\t\t<img src=\"/images/img-footer-logo.png\" alt=\"\" />\n\t\t\t</div>\n\t\t\t\n\t\t\t<div>\n\t\t\t\t<a href=\"#/\">Home</a>\n\t\t\t</div>\n\n\t\t\t<div>\n\t\t\t\t<a href=\"#/history\">history</a>\n\t\t\t</div>\n\n\t\t\t<div>\n\t\t\t\t<a href=\"#/players\">Players</a>\n\t\t\t</div>\n\n\t\t\t<div>\n\t\t\t\t<a href=\"#/about\">About</a>\n\t\t\t</div>\n\n\t\t\t<div>\n\t\t\t\t<a href=\"#/membership\">Membership</a>\n\t\t\t</div>\n\n\t\t\t<div>\n\t\t\t\t<a href=\"#/news-and-events\">News &amp; Events</a>\n\t\t\t</div>\n\n\t\t\t<div>\n\t\t\t\t<a href=\"#/contact\">Contact</a>\n\t\t\t</div>\n\n\t\t</div>\n\n\t</div>\n\n</footer>";

var testEmail = function(email) {

	var re = /^(([^<>()[\]\\.,;:\s@\"]+(\.[^<>()[\]\\.,;:\s@\"]+)*)|(\".+\"))@((\[[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}\])|(([a-zA-Z\-0-9]+\.)+[a-zA-Z]{2,}))$/;
	return re.test(email);
}

var isVisible = function(el) {

    var rect = el.getBoundingClientRect();

    return (
        rect.top >= -rect.height &&
        rect.bottom >= 0
    );
};

var GenericView = new Class({

	name: "generic-view",
	Extends: View,
	templates: {

		"about": "<div class=\"page-title\">\n\t<h1>About The Society</h1>\n</div>\n\n<div class=\"content\">\n\n\t<div class=\"top\">\n\n\t\t<div class=\"intro\">\n\n\t\t\t<h5>Overview</h5>\n\t\t\t<p>41 losing seasons in 52 years. A whiff of a World Series. Misfits, a midget, and money problems. The Browns are baseball’s losingest and least remembered team. But beneath the tarnish is true baseball gold. Heroes of the greatest generation. Moments of grit, guts and glory. A roller coaster of ruin and redemption. The St. Louis Browns Historical Society and Fan Club is dedicated to preserving every stat and story, so the legend of baseball’s most colorful underdogs can endure forever.</p>\n\n\t\t</div>\n\n\t\t<div class=\"board\">\n\n\t\t\t<h2>Board Members</h2>\n\n\t\t\t<div class=\"grid\">\n\n\t\t\t\t<div>\n\t\t\t\t\t<img src=\"{{ Config.cdn }}images/about-photo-bill-rogers.png\" alt=\"\" />\n\t\t\t\t\t<h6>Bill Rogers, President</h6>\n\t\t\t\t\t<p>Bill&rsquo;s career is in business, but his passion is baseball. He opened his own consulting company for credit unions in 1988. Since then, he has published several industry newsletters and managed a technology center for over 14 years. Most recently, Bill has been actively involved in producing, moderating and speaking at credit union conferences and seminars. He is President of The Society and Managing Editor of Pop Flies, the St. Louis Browns newsletter.</p>\n\t\t\t\t</div>\n\t\t\t\t<div>\n\t\t\t\t\t<img src=\"{{ Config.cdn }}images/about-photo-emmett.png\" alt=\"\" />\n\t\t\t\t\t<h6>Emmett McAuliffe</h6>\n\t\t\t\t\t<p>Emmett is an attorney and partner with Riezman Berger, P.C., a law firm in Clayton, MO. His practice focuses on intellectual property, offering special services to the music, film, art and fashion communities. From 2008 to 2011, he served as a gubernatorial appointment to the Missouri Arts Council. A lifelong St. Louisan, Emmett became a Browns fan as a five-year-old in the mid-1960s when an older boy showed him a Browns baseball card.</p>\n\t\t\t\t</div>\n\t\t\t\t<div>\n\t\t\t\t\t<img src=\"{{ Config.cdn }}images/about-photo-vicki-martin.png\" alt=\"\" />\n\t\t\t\t\t<h6>Vicki Martin</h6>\n\t\t\t\t\t<p>Vicki Martin was a supervisor at the St. Louis Family Court – Juvenile Division for 38 years. As a director on the Browns Historical Society board, she is responsible for marketing the fan club services and products. Ms. Martin grew up in a baseball family and is the niece of former Browns player, Babe Martin. Babe played for six years, splitting time between the Browns and the Boston Red Sox.</p>\n\t\t\t\t</div>\n\n\t\t\t</div>\n\n\t\t\t<div class=\"grid\">\n\n\t\t\t\t<div>\n\t\t\t\t\t<img src=\"{{ Config.cdn }}images/about-photo-fred-heger.png\" alt=\"\" />\n\t\t\t\t\t<h6>Fred Heger</h6>\n\t\t\t\t\t<p>Fred is a St. Louis native and a charter member of the St. Louis Browns Historical Society and Fan Club. As the predecessor to current president Bill Rogers, Fred wrote and edited many of the club’s publications. He has also served as the long-time treasurer of the Bob Broeg Chapter of the Society for American Baseball Research. A 1951 graduate of Washington University, Fred retired as an executive of Southwestern Bell Corporation in 1992 after more than 40 years of service.</p>\n\t\t\t\t</div>\n\t\t\t\t<div>\n\t\t\t\t\t<img src=\"{{ Config.cdn }}images/about-photo-bill-borst.png\" alt=\"\" />\n\t\t\t\t\t<h6>Bill Borst</h6>\n\t\t\t\t\t<p>A native New Yorker, Bill founded the St. Louis Browns Historical Society in 1984. He was the club&rsquo;s first president and launched many of its publications. Known as the &ldquo;Baseball Professor,&rdquo; Bill taught the first accredited baseball history course in the Midwest at Maryville College in 1973. He has previously hosted baseball call-in shows on WGNU radio and has written several non-fiction novels, including The Scorpion and the Frog: A Natural Conspiracy.</p>\n\t\t\t\t</div>\n\t\t\t\t<div>\n\t\t\t\t\t<img src=\"{{ Config.cdn }}images/about-photo-john-rappold.png\" alt=\"\" />\n\t\t\t\t\t<h6>John Rappold</h6>\n\t\t\t\t\t<p>John grew up on Chicago’s South Side near Comisky Park where he first saw the Browns play the White Sox. John moved to St. Louis in the late 1940s and attended many Browns and Cardinals games. After graduating from Washington University in 1960, he moved to Baltimore and became vice president of a major packaging company. John went on to engineer gypsum wallboard plants for a company in Charlotte, NC, before retiring and returning to St. Louis.</p>\n\t\t\t\t</div>\n\n\t\t\t</div>\n\n\t\t</div>\n\n\t\t<div class=\"hof grid grid-padded grid-middle\">\n\n\t\t\t<div class=\"image\">\n\t\t\t\t<img src=\"{{ Config.cdn }}images/about-stlsports-hof.png\" alt=\"\" />\n\t\t\t</div>\n\t\t\t<div>\n\t\t\t\t<h2>St. Louis Sports Hall of Fame</h2>\n\t\t\t\t<p>The St. Louis Browns Fan Club is honored to be a member of the St. Louis Sports Hall of Fame, which preserves the memories of the greatest moments and events in St. Louis sports history. Our extensive exhibit includes Browns uniforms, photos of games and players, pennants, and other memorabilia. See the St. Louis Browns exhibit at the St. Louis Sports Hall of Fame inside the Scottrade Center, home of the St. Louis Blues.</p>\n\t\t\t</div>\n\n\t\t</div>\n\n\t\t<img src=\"{{ Config.cdn }}images/bg/bg-about.png\" alt=\"\" class=\"bg\" />\n\n\t</div>\n\n\t<div class=\"form dark\">\n\n\t\t<div class=\"inner grid grid-padded grid-middle\">\n\t\t\t<div>\n\t\t\t\t<h2>Become a member</h2>\n\t\t\t\t<p>By joining, you&rsquo;ll help support our organization&rsquo;s efforts to preserve the history of the St. Louis Browns. Fill out the form to the right, and someone from the Browns Historical Society will contact you to complete your membership.</p>\n\t\t\t</div>\n\t\t\t<div>\n\t\t\t\t<form id=\"contact\" novalidate>\n\t\t\t\t\t<div class=\"form-group\" data-required>\n\t\t\t\t\t\t<input id=\"name\" name=\"name\" type=\"text\" placeholder=\"Your Name\" />\n\t\t\t\t\t</div>\n\n\t\t\t\t\t<div class=\"form-group\" data-required>\n\t\t\t\t\t\t<input id=\"email\" name=\"email\" type=\"email\" placeholder=\"Email Address\" />\n\t\t\t\t\t</div>\n\n\t\t\t\t\t<div class=\"form-group\" data-required>\n\t\t\t\t\t\t<input id=\"phone\" name=\"phone\" type=\"text\" placeholder=\"Phone Number\" />\n\t\t\t\t\t</div>\n\n\t\t\t\t\t<div class=\"form-group\" data-required>\n\t\t\t\t\t\t<textarea id=\"comment\" name=\"comment\" placeholder=\"Question/Comment\"></textarea>\n\t\t\t\t\t</div>\n\n\t\t\t\t\t<button type=\"submit\" class=\"submit\">Submit</button>\n\t\t\t\t</form>\n\t\t\t</div>\n\t\t</div>\n\n\t</div>\n\n\t<div class=\"next-section\">\n\t\t<h2>\n\t\t\t<a href=\"#/history\">The History of the Browns &rarr;</a>\n\t\t</h2>\n\t</div>\n\n</div>",
		"membership": "<div class=\"page-title\">\n\t<h1>Membership</h1>\n</div>\n\n<div class=\"content\">\n\n\t<div class=\"top\">\n\t\n\t\t<div class=\"intro\">\n\n\t\t\t<h5>Membership Pledge</h5>\n\t\t\t<p>As a member of the St. Louis Browns Fan Club, I pledge to protect, preserve and promote the St. Louis Browns. I accept the duty to defend the honor of the Browns wherever it may be maligned and tell Browns stories wherever and whenever I can. I will exercise careful stewardship over Browns artifacts and memorabilia. I gladly accept the duty of preventing our Browns from ever becoming forgotten by future generations of baseball fans. </p>\n\n\t\t</div>\n\t\t\n\t\t<div class=\"membership-levels\">\n\n\t\t\t<h2>Membership Levels</h2>\n\t\t\t<div class=\"grid grid-middle\">\n\t\t\t\t<div class=\"icon\">\n\t\t\t\t\t<img src=\"{{ Config.cdn }}images/member-level-bleed-brown.png\" alt=\"Bleed Brown\" />\n\t\t\t\t</div>\n\t\t\t\t<div><b>$100 per year*</b> // Includes membership ID card; an invitation to all Browns Historical Society activities, including the players dinner before the annual luncheon (extra fee); a subscription to Pop Flies, the St. Louis Browns magazine; a special issue of Pop Flies with highlights of the 70th anniversary of the ’44 World Series; a DVD of the 1944 World Series; your name listed on the donor honor roll; a Browns/Cardinals 70th anniversary World Series pennant.</div>\n\t\t\t</div>\n\t\t\t<div class=\"grid grid-middle\">\n\t\t\t\t<div class=\"icon\">\n\t\t\t\t\t<img src=\"{{ Config.cdn }}images/member-level-gold.png\" alt=\"Gold\" />\n\t\t\t\t</div>\n\t\t\t\t<div><b>$60 per year*</b> // Includes membership ID card; a subscription to Pop Flies, the St. Louis Browns magazine; a special issue of Pop Flies with highlights of the 70th anniversary of the ’44 World Series; historical search help; a Browns lapel pin; DVD highlights of the last member luncheon; your name listed on the donor honor roll.</div>\n\t\t\t</div>\n\t\t\t<div class=\"grid grid-middle\">\n\t\t\t\t<div class=\"icon\">\n\t\t\t\t\t<img src=\"{{ Config.cdn }}images/member-level-silver.png\" alt=\"Silver\" />\n\t\t\t\t</div>\n\t\t\t\t<div><b>$30 per year*</b> // Includes membership ID card; a subscription to Pop Flies, the St. Louis Browns magazine; historical search help; an invitation to Browns Historical Society activities (extra fees may apply).</div>\n\t\t\t</div>\n\t\t\t<div class=\"legal\">*Membership fees are tax deductible. The St. Louis Browns Historical Society and Fan Club is a 501c3 organization.</div>\n\n\t\t</div>\n\n\t\t<img src=\"{{ Config.cdn }}images/bg/bg-membership.png\" alt=\"\" class=\"bg\" />\n\n\t</div>\n\t\t\n\t<div class=\"form dark\">\n\n\t\t<div class=\"inner grid grid-padded grid-middle\">\n\t\t\t<div>\n\t\t\t\t<h2>Become a member</h2>\n\t\t\t\t<p>If you want to learn more about the St. Louis Browns, the Historical Society, membership, upcoming events, or any other related topic, please fill out the form below. Someone will get back to you shortly to discuss payment options.</p>\n\t\t\t</div>\n\t\t\t<div>\n\t\t\t\t<form id=\"contact\" novalidate>\n\t\t\t\t\t<div class=\"form-group\" data-required>\n\t\t\t\t\t\t<input id=\"name\" name=\"name\" type=\"text\" placeholder=\"Your Name\" />\n\t\t\t\t\t</div>\n\t\t\t\t\t\n\t\t\t\t\t<div class=\"form-group\" data-required>\n\t\t\t\t\t\t<input id=\"email\" name=\"email\" type=\"email\" placeholder=\"Email Address\" />\n\t\t\t\t\t</div>\n\n\t\t\t\t\t<div class=\"form-group\" data-required>\n\t\t\t\t\t\t<input id=\"phone\" name=\"phone\" type=\"text\" placeholder=\"Phone Number\" />\n\t\t\t\t\t</div>\n\n\t\t\t\t\t<div class=\"form-group select\" data-required>\n\t\t\t\t\t\t<select name=\"memberlevel\" id=\"membership-level\">\n\t\t\t\t\t\t\t<option value=\"\">Select membership level...</option>\n\t\t\t\t\t\t\t<option value=\"silver\">Silver</option>\n\t\t\t\t\t\t\t<option value=\"gold\">Gold</option>\n\t\t\t\t\t\t\t<option value=\"bleed-brown\">Bleed Brown</option>\n\t\t\t\t\t\t</select>\n\t\t\t\t\t</div>\n\n\t\t\t\t\t<div class=\"form-group error\">\n\t\t\t\t\t\t<p>All fields are required.</p>\n\t\t\t\t\t</div>\n\n\t\t\t\t\t<button type=\"submit\" class=\"submit\">Submit Membership Request</button>\n\t\t\t\t</form>\n\t\t\t</div>\n\t\t</div>\n\n\t</div>\n\n\t<div class=\"next-section\">\n\t\t<h2>\n\t\t\t<a href=\"#/players\">Browns Players &rarr;</a>\n\t\t</h2>\n\t</div>\n\n</div>",
		"news-and-events": "<div class=\"page-title\">\n\t<h1>News &amp; Events</h1>\n</div>\n\n<div class=\"content\">\n\t\n\t<div class=\"posts\">\n\t\t{{ #blog.posts }}\n\n\t\t\t<div class=\"post grid grid-middle\">\n\t\t\t\t\n\t\t\t\t{{ #images.news }}\n\t\t\t\t\t<div class=\"image\" style=\"background-image: url( '{{ . }}' );\"></div>\n\t\t\t\t{{ /images.news }}\n\t\t\t\t<article>\n\t\t\t\t\t<p class=\"date\">{{ date }}</p>\n\t\t\t\t\t<h2>{{ #trimmedTitle }}{{ title }}{{ /trimmedTitle }}</h2>\n\t\t\t\t\t<a href=\"#/news-and-events/{{ slug }}\" class=\"btn\">Read More</a>\n\t\t\t\t</article>\n\n\t\t\t\t<div class=\"social\">\n\t\t\t\t\t<ul>\n\t\t\t\t\t\t<li>\n\t\t\t\t\t\t\t<a href=\"http://www.facebook.com/sharer.php?s=100&p[url]=http://www.thestlbrowns.com/%23/news-and-events/{{ slug }}&p[images][0]=/og-image.jpg&p[title]=The St. Louis Browns Historical Society&p[summary]={{ #trimmedTitle }}{{ title }}{{ /trimmedTitle }}\" target=\"_blank\" class=\"facebook\">F</a>\n\t\t\t\t\t\t</li>\n\t\t\t\t\t\t<li>\n\t\t\t\t\t\t\t<a href=\"https://twitter.com/intent/tweet?text={{ #trimmedTitle }}{{ title }}{{ /trimmedTitle }}&url=http://www.thestlbrowns.com/%23/news-and-events/{{ slug }}\" target=\"_blank\" class=\"twitter\">T</a>\n\t\t\t\t\t\t</li>\n\t\t\t\t\t\t<li>\n\t\t\t\t\t\t\t<a href=\"mailto:?body=Here is a link to an article I found on the St. Louis Browns Historical Society website: http://www.thestlbrowns.com/%23/news-and-events/{{ slug }}&amp;subject=An article from the St. Louis Browns Historical Society\" class=\"email\">M</a>\n\t\t\t\t\t\t</li>\n\t\t\t\t\t</ul>\n\t\t\t\t</div>\n\n\t\t\t</div>\n\n\t\t{{ /blog.posts }}\n\t</div>\n\n</div>\n\n",
		"contact": "<div class=\"page-title\">\n\t<h1>Contact</h1>\n</div>\n\n<div class=\"content\">\n\t\n\t<div class=\"inner\">\n\t\n\t\t<div class=\"grid grid-padded\">\n\t\t\t\n\t\t\t<div>\n\t\t\t\t\n\t\t\t\t<h2>Contact The Society</h2>\n\t\t\t\t<p>If you want to learn more about the St. Louis Browns, the Historical Society, membership, upcoming events, or any other related topic, please fill out the form below. Someone will get back to you shortly.</p>\n\n\t\t\t</div>\n\n\t\t\t<div>\n\n\t\t\t\t<form id=\"contact\" novalidate>\n\t\t\t\t\t<div class=\"form-group\" data-required>\n\t\t\t\t\t\t<input id=\"name\" name=\"name\" type=\"text\" placeholder=\"Your Name\" />\n\t\t\t\t\t</div>\n\t\t\t\t\t\n\t\t\t\t\t<div class=\"form-group\" data-required>\n\t\t\t\t\t\t<input id=\"email\" name=\"email\" type=\"email\" placeholder=\"Email Address\" />\n\t\t\t\t\t</div>\n\n\t\t\t\t\t<div class=\"form-group\" data-required>\n\t\t\t\t\t\t<input id=\"phone\" name=\"phone\" type=\"text\" placeholder=\"Phone Number\" />\n\t\t\t\t\t</div>\n\n\t\t\t\t\t<div class=\"form-group\" data-required>\n\t\t\t\t\t\t<textarea id=\"comment\" name=\"comment\" placeholder=\"Question/Comment\"></textarea>\n\t\t\t\t\t</div>\n\n\t\t\t\t\t<div class=\"form-group error\">\n\t\t\t\t\t\t<p>All fields are required.</p>\n\t\t\t\t\t</div>\n\n\t\t\t\t\t<button type=\"submit\" class=\"submit\">Submit</button>\n\t\t\t\t</form>\n\n\t\t\t</div>\n\n\t\t</div>\n\n\t</div>\n\n</div>"

	},

	init: function( data, onComplete ) {

		var _this = this;
		var r = data.route.split('/')[ 1 ]
		this.template = this.templates[ r ];
		Data.Config = Config;

		Data.trimmedTitle = function() {

			return function (text, render) {

				var t = render(text);

				if( t.length > 70 ) {
					var tr = Util.truncate(t, 70) + '...';
					return tr;
				} else {
					return t;
				}
			}
		};

		var nav = this.navController = $.select('.nav-controller');
		$.removeClass(nav, 'dark');

		this.render(Data, Stage);

		$.addClass('page ' + r + '-view', this.div);

		//- set up smooth scroll renderer
		this.renderer = new SmoothScroll( this.onRender.bind(this) );

		this.content = $.select('.content', this.div);
		this.title = $.select('.page-title h1', this.div);
		this.backgroundImage = $.select('.bg', Stage);

		var header = $.select('.page-title', this.div);
		headerHeight = header[ 0 ].scrollHeight;

		// attach footer to content div
		this.content[ 0 ].innerHTML += footer;

		this.bindUI();

		setTimeout(onComplete, 100);
	},

	bindUI: function() {

		var form = this.form = $.select('form', this.div)[ 0 ];

		if( form ) $.on(form, 'submit', this.formSubmit);

		$.on(this.div, 'click', function(e) {

			if( $.hasClass(e.target, 'twitter') || $.hasClass(e.target, 'facebook') ) {

				e.preventDefault();

				var href = e.target.getAttribute('href');

				window.open(href, null, 'height=420, width=550');
			}
		});
	},

	formSubmit: function( e ) {

		var form = this.form;

		var error = $.select('.error', form)[ 0 ];
		var button = $.select('.submit', form)[ 0 ];

		e.preventDefault();

		$.css(error, { display: 'none' });
		button.disabled = true;

		var valid = true;
		var required = $.select('[data-required]', form);

		for( var i = 0; i < required.length; i ++ ) {

			var input = $.select('input, textarea, select', required[ i ])[ 0 ];
			var type = input.getAttribute('type') || 'text';
			var val = input.value;

			if( type == 'text' && val == '' ) valid = false;
			if( type == 'email' && !testEmail(val) ) valid = false;
		}

		if( valid ) {

			var data = Serialize(e.target);
			var form = $.select('#contact')[ 0 ];

			$.css(form, {
				height: form.scrollHeight
			});

			Loader.post('/api/contact?', data, function( res ) {

				form.innerHTML = '<p>' + res.message + '</p>';
			});
		} else {

			$.css(error, { display: 'block' });
			button.disabled = false;
		}
	},

	animateOut: function( onComplete ) {

		Velocity(this.div, {
			opacity: [ 0, 1 ]
		}, {
			duration: 1000,
			complete: onComplete
		});

		this.renderer.stopRender();
	},

	animateIn: function( onComplete ) {

		this.renderer.startRender();

		Velocity(this.div, {
			opacity: [ 1, 0 ]
		}, {
			duration: 1000,
			complete: onComplete,
			easing: 'linear'
		});

		this.backgroundImage = $.select('.bg', Stage);
		this.sections = $.select('.top', this.div);
		this.resize();
	},

	onRender: function( scr ) {

		var op = 1 - ((scr / 2) / -100);

		$.transform(this.content, {
			y: scr
		});

		$.transform(this.backgroundImage, {
			y: (scr * -0.075)
		});

		$.transform(this.title, {
			y: (scr * 0.15)
		}).css(this.title, {
			opacity: op
		});

		for( var i = 0; i < this.sections.length; i ++ ) {

			var visible = isVisible(this.sections[ i ]);

			if( scr < -headerHeight ) {

				if( visible && !headerDark ) {

					$.addClass('dark', this.navController);
					headerDark = true;
				} else if( !visible && headerDark ) {

					$.removeClass(this.navController, 'dark');
					headerDark = false;
				}
			} else {

				if( headerDark ) {

					$.removeClass(this.navController, 'dark');
					headerDark = false;
				}
			}
		}
	},

	resize: function( w, h ) {

		var max = Math.max(0, (this.div.scrollHeight - window.innerHeight));
		this.renderer.setLimits((max * -1), 0);

		var header = $.select('.page-title', this.div);
		headerHeight = header[ 0 ].scrollHeight;
	}
});

module.exports = GenericView;
},{"./../Config":1,"./../Data":2,"./../components/DOM":6,"./../components/FormSerializer":9,"./../components/Loader":12,"./../components/SmoothScroll":19,"./../components/Utils":22,"./../components/View":23,"./../components/oop/Class":28,"velocity-animate":54}],32:[function(require,module,exports){



var Class = require('./../components/oop/Class');
var View = require('./../components/View');
var Velocity = require('velocity-animate');
var _ = require('underscore');

var Hero = require('./../components/HistoryHero');
var HistoryTimeline = require('./../components/HistoryTimeline');

var $ = require('./../components/DOM');
var _data = require('./../Data').historySection;
var Config = require('./../Config');
var Util = require('./../components/Utils');
var Device = require('./../components/Device');

var Overlay = require('./../components/Overlay');
var Carousel = require('./../components/Carousel');

var SmoothScroll = require('./../components/SmoothScroll');
var VirtualScroll = require('./../components/VirtualScroll')();

var threshold = 0.8;

var isVisible = function(el) {

    var rect = el.getBoundingClientRect();

    return (
        rect.top <= (window.innerHeight * threshold) &&
        rect.bottom >= (window.innerHeight * threshold) &&
        rect.left >= 0 &&
        rect.right <= window.innerWidth
    );
};

var HistoryView = new Class({

	name: "history-section-view",
	Extends: View,
	overlay: new Overlay(),
	
	templates: {
		"the-early-years": "<div class=\"border border-top\"></div>\n<div class=\"border border-right\"></div>\n<div class=\"border border-bottom\"></div>\n<div class=\"border border-left\"></div>\n\n<div class=\"inner\">\n\n\t<div class=\"timeline-bar\"></div>\n\n\t<section class=\"browns-town\">\n\n\t\t<div class=\"content\" data-theme=\"light\" data-year=\"1902\" data-section-title=\"Inaugural Season\">\n\t\t\t<div class=\"grid section-1 contain grid-middle\">\n\n\t\t\t\t<div class=\"grid-item\">\n\t\t\t\t\t<img src=\"{{ Config.cdn }}images/history/the-early-years/img-1902.png\" alt=\"\" />\n\t\t\t\t</div>\n\t\t\t\t<div class=\"grid-item\">\n\t\t\t\t\t<h2>Becoming A Browns Town</h2>\n\t\t\t\t\t<p>In 1902, the Milwaukee Brewers moved to St. Louis with carriage-maker Robert Lee Hedges as the new owner. The club joined the National League&rsquo;s Cardinals to become the town&rsquo;s second (and soon favorite) baseball team. St. Louis loved baseball, and baseball loved it back.</p>\n\t\t\t\t\t<p>Giving a nod to the Cardinals&rsquo; former moniker (the Brown Stockings, for the color they wore), Hedges named his team the Browns. Then, he pinched several of the Redbirds&rsquo; notable players, including 1901 batting champ Jesse Burkett, future Hall-of-Fame shortstop Bobby Wallace and three of their best pitchers. Hedges rebuilt Sportsman&rsquo;s Park, which was first erected in 1881, the former home of the St. Louis Cardinals.</p>\n\t\t\t\t\t<p>With this, the Browns&rsquo; legacy — and a hometown rivalry — began.</p>\n\t\t\t\t</div>\n\n\t\t\t</div>\n\n\t\t\t<div class=\"section-2\">\n\t\t\t\t<h5>Inaugural Season</h5>\n\t\t\t\t<img src=\"{{ Config.cdn }}images/history/the-early-years/img-78-58.png\" alt=\"\" class=\"big-stuff\" />\n\t\t\t\t<p>The Browns&rsquo; 1902 record. Good enough for second in the American League.</p>\n\t\t\t\t<p><a href=\"/#/\" class=\"btn show-overlay\" data-overlay=\"almost\">The Story</a></p>\n\t\t\t</div>\n\t\t</div>\n\n\t</section>\n\n\t<section class=\"sportsmans-park dark\">\n\n\t\t<div class=\"content\">\n\t\t\t<div class=\"section-1 contain\" data-theme=\"dark\" data-year=\"1909\" data-section-title=\"Sportsman&rsquo;s Park\">\n\t\t\t\t<h2>Sportsman&rsquo;s Park III</h2>\n\t\t\t\t<p>A third grandstand was built in Sportsman&rsquo;s Park in 1909, with the diamond anchored at the southwest corner. It was also the third concrete-and-steel structure of its kind in the majors. Here, the Browns would beat out the Cardinals - in attendance.</p>\n\t\t\t</div>\n\n\t\t\t<div class=\"section-2\"  data-theme=\"dark\" data-year=\"1910\" data-section-title=\"To the cellar\">\n\t\t\t\t<h5>Loss Record</h5>\n\t\t\t\t<img src=\"{{ Config.cdn }}images/history/the-early-years/img-107.png\" alt=\"\" class=\"big-stuff\" />\n\t\t\t\t<p class=\"center\">The number of losses for the Browns, two years in a row. They finished 47-107 in 1910, and 45-107 in 1911.</p>\n\t\t\t</div>\n\t\t</div>\n\n\t</section>\n\n\t<section class=\"branch-rickey\">\n\t\t<div class=\"content\">\n\t\t\t<div class=\"section-1\" data-theme=\"light\" data-year=\"1910\" data-section-title=\"THE TY COBB SCANDAL\">\n\t\t\t\t<img src=\"{{ Config.cdn }}images/history/the-early-years/img-up-in-arms.png\" alt=\"\" class=\"big-stuff\" />\n\t\t\t\t<p>St. Louis Post-Dispatch, October 1910, regarding Browns manager Jack O&rsquo;Connor&rsquo;s ploy to block Ty Cobb from the batting title</p>\n\t\t\t\t<p><a href=\"/#/\" class=\"btn show-overlay\" data-overlay=\"ty-cobb\">The Story</a></p>\n\t\t\t</div>\n\n\t\t\t<div class=\"section-2 contain\" data-theme=\"light\" data-year=\"1914\" data-section-title=\"BRANCH RICKEY AS MANAGER\">\n\t\t\t\t<h2>Branch Rickey</h2>\n\t\t\t\t<p>In his first full season as the club&rsquo;s manager (1914), Branch Rickey helped the team improve their record to 71-82. The following year, Rickey left the field for the front office, transferring managing duties to Fielder Jones. Also in 1915, Rickey signed George Sisler to the Browns — perhaps the best thing to ever happen to the team.</p>\n\t\t\t</div>\n\t\t</div>\n\t</section>\n\n\t<section class=\"phil-ball dark\">\n\t\t<div class=\"content\">\n\n\t\t\t<div class=\"grid grid-middle contain section-1\" data-theme=\"dark\" data-year=\"1916\" data-section-title=\"Phil Ball\">\n\t\t\t\t<div class=\"grid-item\">\n\t\t\t\t\t<img src=\"{{ Config.cdn }}images/history/the-early-years/img-newspaper-clip.png\" alt=\"\" />\n\t\t\t\t</div>\n\t\t\t\t<div class=\"grid-item\">\n\t\t\t\t\t<h2>Sold To Ball</h2>\n\t\t\t\t\t<p>In 1916, owner Robert Hedges sold the team to Philip Ball, previously the owner of the St. Louis Terriers (of the defunct Federal League).</p>\n\t\t\t\t</div>\n\t\t\t</div>\n\n\t\t\t<img src=\"{{ Config.cdn }}images/history/the-early-years/img-wwi-interlude.png\" alt=\"\" class=\"wwi-interlude\" />\n\n\t\t\t<div class=\"section-2\" data-theme=\"dark\" data-year=\"1916-1922\" data-section-title=\"Ball&rsquo;s Blunders\">\n\t\t\t\t<img src=\"{{ Config.cdn }}images/history/the-early-years/img-balls-blunders.png\" alt=\"\" />\n\n\t\t\t\t<h5>Blunder 1</h5>\n\t\t\t\t<p>Fired Branch Rickey, who subsequently turned the Cardinals into one of baseball&rsquo;s premier teams, and later made history when he signed Jackie Robinson to the Brooklyn Dodgers.</p>\n\n\t\t\t\t<h5>Blunder 2</h5>\n\t\t\t\t<p>Allowed the Cardinals to share Sportsman&rsquo;s Park, freeing up enough funds for the Cards to build a farm system. </p>\n\n\t\t\t\t<h5>Blunder 3</h5>\n\t\t\t\t<p>Spent capital expanding Sportsman&rsquo;s Park in 1922, predicting a World Series there by 1926. Indeed, it came&hellip; but not for the Browns. The Cardinals faced the Yankees in the &lsquo;26 Fall Classic, and won.</p>\n\t\t\t</div>\n\t\t</div>\n\t</section>\n\n\t<section class=\"sizzlin-sisler\">\n\t\t<div class=\"content\">\n\n\t\t\t<div class=\"section-1\" data-theme=\"light\" data-year=\"1920\" data-section-title=\"SIZZLIN&rsquo; SISLER\">\n\t\t\t\t<h5>Sizzlin&rsquo; Sisler</h5>\n\t\t\t\t<img src=\"{{ Config.cdn }}images/history/the-early-years/img-407-257.png\" alt=\"\" class=\"big-stuff\" />\n\t\t\t\t<p>George Sisler&rsquo;s batting average and number of hits in 1920. The latter was a major league record for 84 years.</p>\n\t\t\t</div>\n\n\t\t\t<div class=\"section-2 contain\" data-theme=\"light\" data-year=\"1922\" data-section-title=\"The Hot Squad\">\n\t\t\t\t<h2>The Hot Squad</h2>\n\t\t\t\t<p>In 1922, the Browns outfield was on fire. Ken Williams, Baby Doll Jacobson and Jack Tobin were all .300 or better, for the 4th season in a row. (They&rsquo;d continue the streak in 1923, and repeat the feat in 1925.) Williams not only led the league in RBIs and beat out Babe Ruth for the home run title, he was the founding member of the 30-30 Club — and the only member in the majors until 1956.</p>\n\t\t\t\t<p>That&rsquo;s not all. With a .420 average, future Hall-of-Famer George Sisler&rsquo;s bat was hotter than lightning. He hit safely in 41 consecutive games, stole 51 bases, and became the first official MVP for the American League. </p>\n\t\t\t\t<p>Further contributions to the Browns&rsquo; best-ever 93-61 record: Sisler and Williams were the top two base-stealers; Urban Shocker tallied up 24 Ws as his compatriots on the mound helped earn the league&rsquo;s lowest combined ERA.</p>\n\t\t\t</div>\n\t\t</div>\n\t</section>\n\n\t<section class=\"hot-squad\">\n\t\t<div class=\"content\">\n\t\t\t<h5>The Hot Squad</h5>\n\t\t\t<img src=\"{{ Config.cdn }}images/history/the-early-years/img-stlb-nyy.png\" alt=\"\" class=\"big-stuff\" />\n\t\t\t<p>One more win and the Browns would&rsquo;ve tied the Yanks for the 1922 AL pennant.</p>\n\t\t</div>\n\t</section>\n\n\t<a href=\"/#/history/the-bottom-dwellers\">\n\t\t<section class=\"next-section\" data-theme=\"\">\n\t\t\t<div class=\"content\">\n\t\t\t\t<p>Chapter 2</p>\n\t\t\t\t<h2>The Bottom Dwellers <span>&rarr;</span></h2>\n\t\t\t\t<p>1926-1941</p>\n\t\t\t</div>\n\t\t</section>\n\t</a>\n</div>",
		"the-bottom-dwellers": "<div class=\"border border-top\"></div>\n<div class=\"border border-right\"></div>\n<div class=\"border border-bottom\"></div>\n<div class=\"border border-left\"></div>\n\n<div class=\"inner\">\n\n\t<div class=\"timeline-bar\"></div>\n\n\t<section class=\"cardinals\">\n\n\t\t<div class=\"content\">\n\t\t\t<div class=\"grid grid-middle grid-padded section-1 contain\" data-theme=\"light\" data-year=\"1926\" data-section-title=\"Cardinals Win World Series\">\n\n\t\t\t\t<div class=\"grid-item\">\n\t\t\t\t\t<h2>Painting the Town Red</h2>\n\t\t\t\t\t<p>The 1926 World Series in Sportsman&rsquo;s Park saw the Cardinals beat the Yankees. This resulted in a fanbase coup — the Redbirds went on to win (or, win back) the hearts of local baseball fans. No longer was St. Louis a &ldquo;Browns Town.&rdquo;</p>\n\t\t\t\t</div>\n\n\t\t\t\t<div class=\"grid-item image\">\n\t\t\t\t\t<img src=\"/images/history/the-bottom-dwellers/img-score-card.png\" alt=\"\" />\n\t\t\t\t</div>\n\n\t\t\t</div>\n\t\t\t\n\t\t\t<div class=\"section-2\" data-theme=\"light\" data-year=\"1926-27\" data-section-title=\"Browns lose 90 games\">\n\t\t\t\t<h5>90-loss Seasons</h5>\n\t\t\t\t<img src=\"/images/history/the-bottom-dwellers/img-26-27.png\" alt=\"\" class=\"big-stuff\" />\n\t\t\t\t<p>The Browns had two 90-loss seasons in a row — 92 in 1926, and 94 in 1927. Not surprisingly, they finished in seventh place both times.</p>\n\t\t\t</div>\n\n\t\t\t<div class=\"section-3\" data-theme=\"light\" data-year=\"1929\" data-section-title=\"Manush hits .355\">\n\t\t\t\t<img src=\"/images/history/the-bottom-dwellers/img-choke-up.png\" alt=\"\" />\n\t\t\t\t<p>Ty Cobb gave this fine piece of advice to Browns outfielder Heinie Manush in 1929. It must have done some good, because Manush averaged .355 that year, helping the Browns record their second straight winning season (79-73).</p>\n\t\t\t</div>\n\t\t</div>\n\n\t</section>\n\n\t<section class=\"attendance-woes dark\">\n\t\t\n\t\t<div class=\"content\">\n\t\t\t<div class=\"section-1\" data-theme=\"dark\" data-year=\"1933\" data-section-title=\"just 33 attend Browns game\">\n\t\t\t\t<h5>Attendance Woes</h5>\n\t\t\t\t<img src=\"/images/history/the-bottom-dwellers/img-33.png\" alt=\"\" class=\"big-stuff\" />\n\t\t\t\t<p class=\"contain\">After a string of years with 90+ losses, the Browns played one game for just 33 paying fans. The club faced a catch 22: they needed good players to attract a crowd, but they needed a crowd to afford good players.</p>\n\t\t\t</div>\n\n\t\t\t<div class=\"section-2 contain\" data-theme=\"dark\" data-year=\"1933\" data-section-title=\"Browns tab hornsby\">\n\t\t\t\t\n\t\t\t\t<div class=\"grid grid-padded grid-middle\">\n\t\t\t\t\t\n\t\t\t\t\t<div class=\"image\">\n\t\t\t\t\t\t<img src=\"/images/history/the-bottom-dwellers/img-card-back.png\" alt=\"\" />\n\t\t\t\t\t</div>\n\n\t\t\t\t\t<div>\n\t\t\t\t\t\t<h2>The Rajah</h2>\n\t\t\t\t\t\t<p>Phil Ball picked up Rogers Hornsby as player-manager in 1933, trying to lure Cardinals fans to Browns games. Hornsby holds the second best career batting average of all time (surpassed only by Ty Cobb). Despite his prowess, &ldquo;The Rajah&rdquo; didn&rsquo;t put himself in the lineup enough to scoop the Browns out of what would become a decade-long losing streak. However, he did hit the last home run of his career as a Brownie, helping his team beat the White Sox in a rare 15-10 victory.</p>\n\t\t\t\t\t</div>\n\n\t\t\t\t</div>\n\n\t\t\t</div>\n\n\t\t\t<div class=\"section-3\" data-theme=\"dark\" data-year=\"1935\" data-section-title=\"Record low attendance\">\n\t\t\t\t\n\t\t\t\t<h5>Another depressing low</h5>\n\t\t\t\t<img src=\"/images/history/the-bottom-dwellers/img-80000.png\" alt=\"\" class=\"big-stuff\" />\n\t\t\t\t<p class=\"contain\">The depths of the Great Depression brought another famous low — the Browns&rsquo; worst single-season attendance record, woefully attained in 1935. This record still stands as a major league low.</p>\n\n\t\t\t</div>\n\t\t</div>\n\n\t</section>\n\n\t<section class=\"barnes-dewitt\">\n\n\t\t<div class=\"content\">\n\t\t\t<div class=\"section-1\" data-theme=\"light\" data-year=\"1936\" data-section-title=\"Barnes &amp; Dewitt Buy Browns\">\n\t\t\t\t\n\t\t\t\t<div class=\"grid grid-padded grid-middle contain\">\t\t\t\t\t\t\t\t\t\n\t\t\t\t\t<div>\n\t\t\t\t\t\t<h2>Barnes &amp; Dewitt</h2>\n\t\t\t\t\t\t<p>New ownership took hold of the team in 1936 — Donald Lee Barnes became the majority stockholder and owner, and Bill DeWitt, Sr., became minority owner and general manager. The first few years remained rocky, but an upswing was on its way.</p>\n\t\t\t\t\t\t<div class=\"note\">\n\t\t\t\t\t\t\t<img src=\"{{ Config.cdn }}images/history/after-the-browns.png\" alt=\"\" class=\"show-overlay\" data-overlay=\"dewitt\" />\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</div>\n\t\t\t\t\t<div>\n\t\t\t\t\t\t<img src=\"/images/history/the-bottom-dwellers/img-dewitt.png\" alt=\"\" />\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\n\t\t\t</div>\n\n\t\t\t<div class=\"section-2 contain\" data-theme=\"light\" data-year=\"1939\" data-section-title=\"Browns All-time worst record\">\n\t\t\t\t<h5>All-time worst</h5>\n\t\t\t\t<img src=\"/images/history/the-bottom-dwellers/img-43-111.png\" alt=\"\" class=\"big-stuff\" />\n\t\t\t\t<p class=\"contain\">The Browns&rsquo; all-time worst record put them 64 and a half games out of first for the 1939 season. The pitching staff’s combined ERA was 6.01, which could have been the main culprit.</p>\n\t\t\t</div>\n\t\t\t\n\t\t\t<div class=\"section-3 contain\" data-theme=\"light\" data-year=\"1941\" data-section-title=\"Attack on pearl harbor\">\n\t\t\t\t\n\t\t\t\t<h2>Disastrous Timing</h2>\n\t\t\t\t<p>Owner Don Barnes was trying to move the team to Los Angeles, hoping for a better financial outlook. A league meeting to bestow final approval was slated for December 8th, 1941. The attack on Pearl Harbor happened on December 7th. Needless to say, the meeting didn’t happen, and the team stayed put.</p>\n\n\t\t\t</div>\n\t\t</div>\n\t</section>\n\n\t<section class=\"rebuilding dark\" data-theme=\"dark\" data-year=\"1941\" data-section-title=\"Browns Rebuild\">\n\n\t\t<div class=\"content\">\n\t\t\t\n\t\t\t<img src=\"/images/history/the-bottom-dwellers/img-rebuilding.png\" alt=\"\" class=\"big-stuff\" />\n\t\t\t<p class=\"contain\">New manager Luke Sewell establishes a rebuilding program in 1941. This would be the chance the Browns had always been waiting for.</p>\n\t\t\t\n\t\t</div>\n\n\t</section>\n\n\t<a href=\"/#/history/the-war-years\">\n\t\t<section class=\"next-section\" data-theme=\"\">\n\t\t\t<div class=\"content\">\n\t\t\t\t<p>Chapter 3</p>\n\t\t\t\t<h2>The War Years <span>&rarr;</span></h2>\n\t\t\t\t<p>1942-1946</p>\n\t\t\t</div>\n\t\t</section>\n\t</a>\n</div>",
		"the-war-years": "<div class=\"border border-top\"></div>\n<div class=\"border border-right\"></div>\n<div class=\"border border-bottom\"></div>\n<div class=\"border border-left\"></div>\n\n<div class=\"inner\">\n\n\t<div class=\"timeline-bar\"></div>\n\n\t<section class=\"roosevelt\">\n\n\t\t<div class=\"content\">\n\t\t\t<div class=\"section-1 contain\" data-theme=\"light\" data-year=\"1942\" data-section-title=\"Honesty\">\n\t\t\t\t<img src=\"{{ Config.cdn }}images/history/the-war-years/img-honestly.png\" alt=\"\" />\n\t\t\t\t<p class=\"attr\">President Franklin D. Roosevelt</p>\n\t\t\t</div>\n\n\t\t\t<div class=\"section-2\">\n\t\t\t\t<div class=\"grid grid-middle contain\">\n\t\t\t\t\t\n\t\t\t\t\t<div class=\"text\">\n\t\t\t\t\t\t<p>The first World War had prematurely ended the 1918 baseball season, and many feared World War 2 would do the same. On January 15, 1942, President Roosevelt responded to a plea from Commissioner Kenesaw Mountain Landis, in what was come to be known as the &lsquo;Green Light Letter.&rdquo; Not only did he ensure the continuation of wartime baseball, he also pushed for more night games to give the hard-working people behind the war production effort a well-deserved break.</p>\n\t\t\t\t\t</div>\n\n\t\t\t\t\t<div>\n\t\t\t\t\t\t<img src=\"{{ Config.cdn }}images/history/the-war-years/img-letter.png\" alt=\"\" />\n\t\t\t\t\t</div>\n\n\t\t\t\t</div>\n\t\t\t</div>\n\n\t\t\t<div class=\"section-3 contain\" data-theme=\"light\" data-year=\"1942\" data-section-title=\"Building a Winner\">\n\t\t\t\t<h2>Building a Winner</h2>\n\t\t\t\t<p>With the go-ahead to keep playing, Luke Sewell got surgical with his 1942 roster. He got rid of lazy players and weak bats. He signed promising rookies. And he traded for veterans with positive attitudes and overlooked power. Some of the gems Sewell brought on board included Don Gutteridge, Vern Stephens, Ellis Clary, Steve Sundra, and Al Hollingsworth.</p>\n\t\t\t\t<p>The Browns lost some players to the war effort, but they didn&rsquo;t lose star-level power like Joe Dimaggio, Hank Greenberg or Ted Williams. So, as the other teams in the league said goodbye to their key players, the Browns&rsquo; chances of winning got better and better.</p>\n\t\t\t</div>\n\n\t\t\t<div class=\"section-4\">\n\t\t\t\t<h5>1942 SEASON</h5>\n\t\t\t\t<img src=\"{{ Config.cdn }}images/history/the-war-years/img-82-69.png\" alt=\"\" class=\"big-stuff\">\n\t\t\t\t<p>The 1942 Browns brought home the team&rsquo;s first winning season since 1929.</p>\n\t\t\t</div>\n\t\t</div>\n\n\t</section>\n\n\t<section class=\"cold-springs dark\">\n\t\t\n\t\t<div class=\"content\">\n\t\t\t<div class=\"section-1 contain\" data-theme=\"dark\" data-year=\"1943\" data-section-title=\"Cold Springs\">\n\t\t\t\t<h2>Cold Springs</h2>\n\t\t\t\t<p>From 1943 to 1945, Commissioner Landis required all Major League Teams to stay close to home for spring training, explaining that long-distance travel resources were best left to those involved in the war effort. The Browns trained just 100 miles south of St. Louis in Cape Girardeau, Missouri. Theirs was a much better plight than the many northeast teams, who made training grounds out of airport hangars, horse stables, hotel rooms, and — when the baseball fields were too frosty — golf fairways.</p>\n\t\t\t</div>\n\n\t\t\t<div class=\"section-2\" data-theme=\"dark\" data-year=\"1943\" data-section-title=\"Balata Ball\">\n\t\t\t\t<div class=\"grid grid-middle contain\">\n\t\t\t\t\t\n\t\t\t\t\t<div class=\"text\">\n\t\t\t\t\t\t<h2>Balata Ball</h2>\n\t\t\t\t\t\t<p>Rubber was in high demand for the war, so regular baseballs got the shaft. For the 1943 season, major leaguers had to play with a &lsquo;balata ball,&rsquo; which had a hard plastic core and didn&rsquo;t travel as far. Lower scoring games were common. Batters were not thrilled.</p>\n\t\t\t\t\t</div>\n\n\t\t\t\t\t<div>\n\t\t\t\t\t\t<img src=\"{{ Config.cdn }}images/history/the-war-years/img-ball.png\" alt=\"\" />\n\t\t\t\t\t</div>\n\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t</div>\n\n\t</section>\n\n\t<section class=\"infield\">\n\t\t\n\t\t<div class=\"content\">\n\t\t\t\n\t\t\t<div class=\"section-1 contain\" data-theme=\"light\" data-year=\"1944\" data-section-title=\"All 4-F Infield\">\n\t\t\t\t<h2>All 4-F Infield</h2>\n\t\t\t\t<p>Every player on the 1944 Browns infield was 4-F, or excused from military service for one reason or another.</p>\n\n\t\t\t\t<img src=\"{{ Config.cdn }}images/history/the-war-years/img-infield.png\" alt=\"\" />\n\t\t\t</div>\n\n\t\t\t<div class=\"section-2\">\n\t\t\t\t<h2>9 Straight W&rsquo;s</h2>\n\t\t\t\t<p>The Browns opened the 1944 season with a bang — or a crack — or a whopping, righteous blast — nine straight wins.</p>\n\t\t\t</div>\n\n\t\t\t<div class=\"section-3\">\n\t\t\t\t<h2>Almost Perfect</h2>\n\t\t\t\t<p>On May 26, 1944, Nels Potter retired 23 batters in a row. Sadly, Jim Tabor, of the opposing Red Sox, got a hit in the 8th to dash Potter&rsquo;s hopes of a perfect game.</p>\n\t\t\t</div>\n\n\t\t\t<div class=\"section-4 contain\" data-theme=\"light\" data-year=\"1944\" data-section-title=\"The 1st Illegal Pitcher\">\n\n\t\t\t\t<div class=\"grid grid-middle\">\n\t\t\t\t\t\n\t\t\t\t\t<div class=\"image\">\n\t\t\t\t\t\t<img src=\"{{ Config.cdn }}images/history/the-war-years/img-pitcher.png\" alt=\"\" />\n\t\t\t\t\t</div>\n\n\t\t\t\t\t<div>\n\t\t\t\t\t\t<h2>The 1st Illegal Pitcher</h2>\n\t\t\t\t\t\t<p>Browns pitcher Nels Potter was caught &lsquo;moistening his fingers&rsquo; before every pitch in a game against the Yankees on July 20, 1944. He was suspended for 10 games, becoming the first player in MLB history to be suspended for throwing an illegal pitch.</p>\n\t\t\t\t\t</div>\n\n\t\t\t\t</div>\n\t\t\t\t\n\t\t\t</div>\n\n\t\t</div>\n\n\t</section>\n\n\t<section class=\"scrabeenies dark\">\n\t\t\n\t\t<div class=\"content\">\n\t\t\t\n\t\t\t<div class=\"section-1\" data-theme=\"dark\" data-year=\"1944\" data-section-title=\"Scrabeenies\">\n\t\t\t\t<div class=\"contain\">\n\t\t\t\t\t<h2>Scrabeenies</h2>\n\t\t\t\t\t<p>Ellis Clary crowned himself the &ldquo;manager&rdquo; of the Browns&rsquo; backup players, who called themselves the scrabeenies. Most of these utility guys didn&rsquo;t show their stuff when given the chance. But Al Zarilla went 2 for 2 in a July game against the Red Sox, earning himself a more frequent spot in the lineup for the remainder of the season. Soon after, this former scrabeenie pounded out an 11-game hitting streak.</p>\n\t\t\t\t</div>\n\t\t\t</div>\n\n\t\t\t<div class=\"section-2\">\n\t\t\t\t<img src=\"{{ Config.cdn }}images/history/the-war-years/img-25000.png\" alt=\"\" class=\"big-stuff\" />\n\t\t\t\t<p class=\"contain\">Every major league team was required to host one game where all net proceeds would be given to a national war relief organization. On July 26, 1944, the Browns played the Philadelphia Athletics — in front of their biggest crowd since their first night game in 1940 — and raised $25,000.</p>\n\t\t\t</div>\n\n\t\t\t<div class=\"section-3\" data-theme=\"dark\" data-year=\"1944\" data-section-title=\"70 Days In First\">\n\t\t\t\t<h2>70 Days in 1st</h2>\n\t\t\t\t<p>On August 8th, the Browns broke their previous record, set in 1922, for consecutive days leading the American League.</p>\n\t\t\t</div>\n\n\t\t\t<div class=\"section-4 contain\" data-theme=\"dark\" data-year=\"1944\" data-section-title=\"Fight!\">\n\t\t\t\t\n\t\t\t\t<div class=\"grid grid-padded grid-middle\">\n\t\t\t\t\t\n\t\t\t\t\t<div>\n\t\t\t\t\t\t<img src=\"{{ Config.cdn }}images/history/the-war-years/img-fight.png\" alt=\"\" class=\"flush-bottom\" />\n\t\t\t\t\t</div>\n\n\t\t\t\t\t<div>\n\t\t\t\t\t\t<p class=\"flush-bottom\">On September 21, 1944, the Browns were in the last game of the last series against the Senators. A fight broke out between Browns catcher Tom Turner and Senators outfielder Roberto Ortiz. The Senators would go on to play the Tigers, who the Browns were racing for first-place. So, when Ortiz broke his hand in the fight with Turner, the Browns weren&rsquo;t too happy about it, either.</p>\n\t\t\t\t\t</div>\n\n\t\t\t\t</div>\n\n\t\t\t</div>\n\n\t\t\t<div class=\"section-5\" data-theme=\"dark\" data-year=\"1944\" data-section-title=\"The Heat Is On\">\n\t\t\t\t\n\t\t\t\t<img src=\"{{ Config.cdn }}images/history/the-war-years/img-84-64.png\" alt=\"\" class=\"big-stuff\" />\n\t\t\t\t<p>The Browns and the Tigers were tied for first with an identical record. There were 6 games left in the season. The heat was on.</p>\n\n\t\t\t</div>\n\n\t\t</div>\n\n\t</section>\n\n\t<section class=\"pennant\">\n\t\t\n\t\t<div class=\"content\" data-theme=\"light\" data-year=\"1944\" data-section-title=\"The Clincher\">\n\t\t\t\n\t\t\t<img src=\"{{ Config.cdn }}images/history/the-war-years/img-clincher.png\" alt=\"\" class=\"big-stuff\" />\n\n\t\t\t<div class=\"section-1\">\n\t\t\t\t<div class=\"highlight\">\n\t\t\t\t\t<h5>Highlight 1</h5>\n\t\t\t\t\t<p>Wild man Sig Jakucki took the mound for the Browns.</p>\n\t\t\t\t</div>\n\t\t\t\t<div class=\"highlight\">\n\t\t\t\t\t<h5>Highlight 2</h5>\n\t\t\t\t\t<p>He retired the first two Yanks.</p>\n\t\t\t\t</div>\n\t\t\t\t<div class=\"highlight\">\n\t\t\t\t\t<h5>Highlight 3</h5>\n\t\t\t\t\t<p>The Browns were hitless through the third. Key errors put the Yankees up 2-0.</p>\n\t\t\t\t</div>\n\t\t\t\t<div class=\"highlight\">\n\t\t\t\t\t<h5>Highlight 4</h5>\n\t\t\t\t\t<p>Chet Laabs crushed a fastball over the bleachers to tie the game.</p>\n\t\t\t\t</div>\n\t\t\t</div>\n\n\t\t\t<img src=\"{{ Config.cdn }}images/history/the-war-years/img-scoreboard.png\" alt=\"\" class=\"big-stuff\" />\n\n\t\t\t<div class=\"section-2\" data-theme=\"light\" data-year=\"1944\" data-section-title=\"The Fighten’st Team Ever To Wear A Uniform!\">\n\t\t\t\t<div class=\"highlight\">\n\t\t\t\t\t<h5>Highlight 5</h5>\n\t\t\t\t\t<p>Bottom 5, Laabs was up for his third at-bat, and ripped another 2-run homer.</p>\n\t\t\t\t</div>\n\t\t\t\t<div class=\"highlight\">\n\t\t\t\t\t<h5>Highlight 6</h5>\n\t\t\t\t\t<p>In the remaining innings, Jakucki only allowed one more batter to reach 3rd.</p>\n\t\t\t\t</div>\n\t\t\t\t<div class=\"highlight\">\n\t\t\t\t\t<h5>Highlight 7</h5>\n\t\t\t\t\t<p>The Browns led 5-2 into the ninth. Johnny Lindell blasted a pitch from Jakucki, but it was caught for a long out by Browns right fielder Gene Moore. The crowd exhaled.</p>\n\t\t\t\t</div>\n\t\t\t\t<div class=\"highlight\">\n\t\t\t\t\t<h5>Highlight 8</h5>\n\t\t\t\t\t<p>Down to the final out, Oscar Grimes spikes a high fly ball into foul territory. Browns first baseman George McQuinn finds it in his glove.</p>\n\t\t\t\t</div>\n\t\t\t</div>\n\n\t\t\t<img src=\"{{ Config.cdn }}images/history/the-war-years/img-pennant.png\" alt=\"\" class=\"big-stuff\" />\n\n\t\t</div>\n\n\t</section>\n\n\t<section class=\"street-car dark\">\n\t\t\n\t\t<div class=\"content\">\n\t\t\t\n\t\t\t<div class=\"section-1\" data-theme=\"dark\" data-year=\"1944\" data-section-title=\"The Streetcar Series\">\n\t\t\t\t<img src=\"{{ Config.cdn }}images/history/the-war-years/img-streetcar.png\" alt=\"\" class=\"big-stuff\" />\n\t\t\t</div>\n\n\t\t\t<div class=\"section-2\">\n\t\t\t\t\n\t\t\t\t<img src=\"{{ Config.cdn }}images/history/the-war-years/img-world-series.png\" alt=\"\" class=\"big-stuff\" />\n\t\t\t\t<p>Stan Musial, St. Louis Cardinals</p>\n\n\t\t\t</div>\n\n\t\t\t<div class=\"section-3\">\n\t\t\t\t\n\t\t\t\t<div class=\"grid contain grid-middle\" data-theme=\"dark\" data-year=\"1944\" data-section-title=\"Shared Turf\">\n\t\t\t\t\t\n\t\t\t\t\t<div>\n\t\t\t\t\t\t<h2>Shared Turf</h2>\n\t\t\t\t\t\t<p>The Cardinals and the Browns both called Sportsman&rsquo;s Park home. So, both teams would have the home team advantage&hellip; The Cards for the first two and the last two games, and the Browns for the three in the middle.</p>\n\t\t\t\t\t\t<p>The teams shared more than just the stadium. Luke Sewell and Cardinals manager Billy Southworth shared an apartment in St. Louis. They agreed that Sewell would stay there during the Series, and Southworth would reside at a hotel until it was over.</p>\n\t\t\t\t\t</div>\n\n\t\t\t\t\t<div class=\"image\">\n\t\t\t\t\t\t<img src=\"{{ Config.cdn }}images/history/the-war-years/img-poster.png\" alt=\"\" />\n\t\t\t\t\t</div>\n\n\t\t\t\t</div>\n\n\t\t\t</div>\n\n\t\t\t<div class=\"section-4\" data-theme=\"dark\" data-year=\"1944\" data-section-title=\"The World Series\">\n\n\t\t\t\t<div class=\"carousel\">\n\t\t\t\t\t<div class=\"arrow-right\"><img src=\"{{ Config.cdn }}images/arrow-right.png\" alt=\"\" /></div>\n\t\t\t\t\t<div class=\"arrow-left\"><img src=\"{{ Config.cdn }}images/arrow-left.png\" alt=\"\" /></div>\n\t\t\t\t\t<div class=\"slides\">\n\t\t\t\t\t\t<div class=\"slide\">\n\t\t\t\t\t\t\t<div class=\"wrapper\">\n\t\t\t\t\t\t\t\t<img src=\"{{ Config.cdn }}images/history/the-war-years/img-game-1.png\" alt=\"\" />\n\t\t\t\t\t\t\t\t<p>No player on the 1944 Browns roster had ever made it to a World Series. The veteran Cardinals were favored to win, but the Browns didn&rsquo;t care. They came out with a fighting spirit. Denny Galehouse out-pitched Mort Cooper and the Cardinals. George McQuinn hit a two-run jack in the fourth inning. And the Browns won it, 2-1.</p>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t\t<div class=\"slide\">\n\t\t\t\t\t\t\t<div class=\"wrapper\">\n\t\t\t\t\t\t\t\t<img src=\"{{ Config.cdn }}images/history/the-war-years/img-game-2.png\" alt=\"\" />\n\t\t\t\t\t\t\t\t<p>The Browns were hoping luck stayed on their side. Missouri Senator, Democratic Party vice presidential nominee and future president Harry S. Truman was in the audience. The St. Louis Beer Company had given each player a silver horseshoe to hang over their lockers. However, Nelson Potter, who normally didn&rsquo;t shave before he started a game, took the mound clean-shaven. </p>\n\t\t\t\t\t\t\t\t<p>The Cardinals led 2-0 through the 6th, thanks to Blix Donnelly&rsquo;s stellar arm and a series of errant defensive plays. With 2 outs in the 7th, the Browns tied it up. The game stretched until the 11th, when Cardinals backup catcher and pinch hitter Ken O&rsquo;Dea hit a game-winning RBI single to end the game. </p>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t\t<div class=\"slide\">\n\t\t\t\t\t\t\t<div class=\"wrapper\">\n\t\t\t\t\t\t\t\t<img src=\"{{ Config.cdn }}images/history/the-war-years/img-game-3.png\" alt=\"\" />\n\t\t\t\t\t\t\t\t<p>Still at Sportsman&rsquo;s Park, but now the Browns were the home team. The advantage served them well — Browns pitcher Jack Kramer gave up only 7 hits, and struck out 10 batters.</p>\n\t\t\t\t\t\t\t\t<p>It wasn&rsquo;t all smooth sailing, though. Browns shortstop Vern Stephens booted a ground ball, resulting in a two-base error that eventually let the Cards score 1 in the first. The Browns came up empty-handed in the second inning with a bases-loaded strikeout. </p>\n\t\t\t\t\t\t\t\t<p>The Browns seemed to crack the code in the third, playing small ball and scoring 3 on singles, eventually landing a 6-2 victory. To that point, all of the Browns&rsquo; 10 runs in the series had been scored on 2 outs. </p>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t\t<div class=\"slide\">\n\t\t\t\t\t\t\t<div class=\"wrapper\">\n\t\t\t\t\t\t\t<img src=\"{{ Config.cdn }}images/history/the-war-years/img-game-4.png\" alt=\"\" />\n\t\t\t\t\t\t\t\t<p>The Cardinals had Sig Jakucki&rsquo;s number for Game 4. The 35-year-old pitcher had been out of baseball for 5 years prior to the 1944 season, but he&rsquo;d still brought in 13 wins that year. But most of this game was robbery.</p> \n\t\t\t\t\t\t\t\t<p>Stan Musial took a big cut at a low fastball, and sent it out of the park. Double plays and an over-the-shoulder catch suffocated the Browns offense. And an error made it 4-0, Cardinals, in the 3rd. Jakucki was pulled in the bottom of that inning. Outfielder Chet Laabs hit into a double play that scored the Browns&rsquo; one and only run, and the Redbirds went on to win it 5-1.</p>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t\t<div class=\"slide\">\n\t\t\t\t\t\t\t<div class=\"wrapper\">\n\t\t\t\t\t\t\t\t<img src=\"{{ Config.cdn }}images/history/the-war-years/img-game-5.png\" alt=\"\" />\n\t\t\t\t\t\t\t\t<p>With the series tied 2-2, the Browns were hoping that the Galehouse-Cooper matchup would be a repeat of their success in the first game. Through 5, it was a pitcher&rsquo;s duel, with no hits for either team. </p>\n\t\t\t\t\t\t\t\t<p>Then, Ray Sanders hit a solo shot onto the right field roof — the first homer Galehouse had allowed since August 6th. Galehouse took it in stride, until Danny Litwhiler followed suit in the 8th. Cooper&rsquo;s pitching struck out 12 men, just one shy of the record at the time, as he shut out the Browns, 2-0.</p> \n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t\t<div class=\"slide\">\n\t\t\t\t\t\t\t<div class=\"wrapper\">\n\t\t\t\t\t\t\t\t<img src=\"{{ Config.cdn }}images/history/the-war-years/img-game-6.png\" alt=\"\" />\n\t\t\t\t\t\t\t\t<p>It was a frosty night. Nelson Potter was back on the Browns mound, and Max Lanier threw for the Cards (who were the home team once again). The Browns took an early lead in the second within RBI single by George McQuinn, but they couldn&rsquo;t hold on to the lead. A walk and a handful of singles put the Cardinals on top in the fourth inning, and that&rsquo;s where they stayed. The Browns said goodbye to their &ldquo;Cinderella season,&rdquo; and their last-ever appearance in a World Series, with a 3-1 loss.</p>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\n\t\t\t</div>\n\n\t\t</div>\n\n\t</section>\n\n\t<section class=\"war-ends\">\n\t\t\n\t\t<div class=\"content\">\n\t\t\t\n\t\t\t<div class=\"section-1\" data-theme=\"light\" data-year=\"1946\" data-section-title=\"The War Ends\">\n\t\t\t\t<img src=\"{{ Config.cdn }}images/history/the-war-years/img-1945.png\" alt=\"\" class=\"big-stuff\" />\n\t\t\t\t<div class=\"contain\">\n\t\t\t\t\t<p>Although the Browns didn&rsquo;t win the World Series, they unbelievably captured the 1944 pennant. The next year, they still had enough steam to contend in the pennant race, finishing 6 games back to take 3rd in the American League. Also in 1945, Don Barnes sold the Browns to Richard Muckerman.</p>\n\t\t\t\t</div>\n\t\t\t</div>\n\n\t\t\t<div class=\"section-2 contain\">\n\t\t\t\t<div class=\"grid grid-padded grid-middle\">\n\t\t\t\t\t<div class=\"grid-item image\">\n\t\t\t\t\t\t<img src=\"{{ Config.cdn }}images/history/the-war-years/img-crowd.png\" alt=\"\" />\n\t\t\t\t\t</div>\n\t\t\t\t\t<div class=\"grid-item\">\n\t\t\t\t\t\t<h2>THE WAR ENDS</h2>\n\t\t\t\t\t\t<p>Many of the baseball greats who had gone off to serve in World War II had returned home for the 1946 season, and were returning to the field. The rest of the league&rsquo;s talent was replenished, and the Browns&rsquo; best years were put behind them. The 1947 and 1948 seasons saw the Browns&rsquo; return to an ever-so-familiar place — last in the American League. Both years ended with 59 wins and more than 90 losses.</p>\t\t\t\t\t\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t</div>\n\n\t\t</div>\n\n\t</section>\n\n\t<a href=\"/#/history/the-bill-veeck-era\">\n\t\t<section class=\"next-section\" data-theme=\"\">\n\t\t\t<div class=\"content\">\n\t\t\t\t<p>Chapter 4</p>\n\t\t\t\t<h2>The Bill Veeck Era <span>&rarr;</span></h2>\n\t\t\t\t<p>1949-1953</p>\n\t\t\t</div>\n\t\t</section>\n\t</a>\n</div>",
		"the-bill-veeck-era": "<div class=\"border border-top\"></div>\n<div class=\"border border-right\"></div>\n<div class=\"border border-bottom\"></div>\n<div class=\"border border-left\"></div>\n\n<div class=\"inner\">\n\n\t<div class=\"timeline-bar\"></div>\n\n\t<section class=\"dewitt-brothers\">\n\n\t\t<div class=\"content\">\n\t\t\t<div class=\"section-1 contain\" data-theme=\"light\" data-year=\"1948\" data-section-title=\"The Dewitt Bros. buy the browns\">\n\n\t\t\t\t<h2>The DeWitt Brothers</h2>\n\t\t\t\t<p>Owner Richard Muckerman had proven to be ineffective during his 4 seasons as owner (1945-1948). This was quite a disappointment, following the Browns&rsquo; 1944 pennant victory. In hopes to resurrect the team&rsquo;s potential, Bill DeWitt and his brother, Charlie, bought the Browns club after the 1948 season.</p>\n\n\t\t\t</div>\n\t\t\t\n\t\t\t<div class=\"section-2 contain\" data-theme=\"light\" data-year=\"1949\" data-section-title=\"Browns lose 90 games\">\n\t\t\t\t<div class=\"grid grid-middle\">\n\t\t\t\t\t<div>\n\t\t\t\t\t\t<img src=\"{{ Config.cdn }}images/history/the-veeck-era/img-senators.jpg\" alt=\"\" />\n\t\t\t\t\t</div>\n\t\t\t\t\t<div>\n\t\t\t\t\t\t<h2>Better Than the Senators</h2>\n\t\t\t\t\t\t<p>That was about the only recognition the Browns could muster up for the &lsquo;49 season. They finished in 7th place with a 53-101 record, just a few games better than the 50-104 Washington Senators.</p>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t</div>\n\n\t</section>\n\n\t<section class=\"veeck-background dark\">\n\t\t\n\t\t<div class=\"content\">\n\t\t\t<div class=\"section-1 contain\" data-theme=\"dark\" data-year=\"1950\" data-section-title=\"Bill Veeck buys the Browns\">\n\t\t\t\t<img src=\"{{ Config.cdn }}images/history/the-veeck-era/img-quote-beautiful.png\" alt=\"\" />\n\t\t\t\t<p class=\"attr\">- Bill Veeck</p>\n\t\t\t</div>\n\n\t\t\t<div class=\"section-2 contain\">\n\t\t\t\t<h2>Bill Veeck: Background</h2>\n\t\t\t\t<p>The DeWitts sold the Browns to Bill Veeck in 1951. Veeck was coming off the best and most tumultuous times of his life. He&rsquo;d signed the first black player to the American League in 1947. A year later, he signed Satchel Paige, the oldest rookie in the majors. He also led the Cleveland Indians to the team&rsquo;s first pennant and World Series title since 1920. Sadly, his first wife divorced him in 1949. Strapped for cash, he sold the Indians.</p>\n\t\t\t\t<p>Things were on the upswing for him by 1950 — he married his new true love, Mary Frances Ackerman, and bought 80% stake in the Browns organization.</p>\n\n\t\t\t\t<div class=\"note\">\n\t\t\t\t\t<img src=\"{{ Config.cdn }}images/history/after-the-browns.png\" alt=\"\" class=\"show-overlay\" data-overlay=\"veeck\" />\n\t\t\t\t</div>\n\t\t\t</div>\n\n\t\t\t<div data-theme=\"dark\" data-year=\"1951\" data-section-title=\"Veeck competes with Cardinals\">\n\t\t\t\t<div class=\"section-3 contain\">\n\t\t\t\t\t\n\t\t\t\t\t<div class=\"grid grid-middle\">\n\t\t\t\t\t\t\n\t\t\t\t\t\t<div>\n\t\t\t\t\t\t\t<img src=\"{{ Config.cdn }}images/history/the-veeck-era/img-program.png\" alt=\"\" />\n\t\t\t\t\t\t</div>\n\t\t\t\t\t\t<div>\n\t\t\t\t\t\t\t<h2>Two&rsquo;s a Crowd</h2>\n\t\t\t\t\t\t\t<p>Since Day 1, Bill Veeck saw the Cardinals as a threat, not just a friendly rivalry. He tried to push them out — or at least stir up some drama at their shared home park. Veeck brought three former Cardinals over to the Browns: Rogers Hornsby and Marty Marion as coaches, and Dizzy Dean as announcer. He also decorated Sportsman&rsquo;s Park solely with Browns memorabilia.</p>\n\t\t\t\t\t\t</div>\n\n\t\t\t\t\t</div>\n\n\t\t\t\t</div>\n\n\t\t\t\t<div class=\"section-4 contain\">\n\t\t\t\t\t<img src=\"{{ Config.cdn }}images/history/the-veeck-era/img-quote-argyin.png\" alt=\"\" />\n\t\t\t\t\t<p class=\"attr\">- Dizzy Dean</p>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t</div>\n\n\t</section>\n\n\t<section class=\"free-beer\">\n\t\t<div class=\"content\">\n\t\t\t<div class=\"section-1 contain\" data-theme=\"light\" data-year=\"1951\" data-section-title=\"Free Beer Night\">\n\t\t\t\t<h2>Free Beer</h2>\n\t\t\t\t<p>For his first game as owner, Bill Veeck gave everyone in the ballpark a free beer or soda. Just imagine what he&rsquo;d think of ballpark prices today.</p>\n\t\t\t</div>\n\n\t\t\t<div data-theme=\"light\" data-year=\"1951\" data-section-title=\"Eddie Gaedal walks\">\n\t\t\t\t<div class=\"section-2 contain\">\n\t\t\t\t\t<div class=\"grid grid-middle grid-padded\">\n\t\t\t\t\t\t<div class=\"image\">\n\t\t\t\t\t\t\t<img src=\"{{ Config.cdn }}images/history/the-veeck-era/img-1-8.png\" alt=\"\" />\n\t\t\t\t\t\t</div>\n\t\t\t\t\t\t<div>\n\t\t\t\t\t\t\t<p>Of all of Veeck&rsquo;s radical promotions — or, in his eyes, creative ways to attract a much-needed crowd — this little one left a big impact on fans&rsquo; memories. Eddie Gaedel, standing just 3-foot-7, appeared as a pinch hitter on August 19, 1951. Wearing the number ⅛ on a jersey made for Bill DeWitt&rsquo;s son, Gaedel drew four straight balls. His strike zone was tiny, as were his legs. He was replaced by a pinch runner, but his 1.000 career on-base percentage remains in tact.</p>\t\t\t\t\t\t\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t\t\n\t\t\t\t<div class=\"section-3\">\n\t\t\t\t\t<h5>A small threat</h5>\n\t\t\t\t\t<img src=\"{{ Config.cdn }}images/history/the-veeck-era/img-1000000.png\" alt=\"\" />\n\t\t\t\t\t<p>The life insurance policy Bill Veeck took out for Eddie Gaedel. Veeck threatened Gaedel with his life if he dared to swing the bat.</p>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t</div>\n\t</section>\n\n\t<section class=\"dreamers dark\">\n\t\t<div class=\"content\">\n\t\n\t\t\t<div data-theme=\"dark\" data-year=\"1951\" data-section-title=\"Fans manage from stands\">\n\t\t\t\t<div class=\"section-1 contain\">\n\t\t\t\t\t<img src=\"{{ Config.cdn }}images/history/the-veeck-era/img-quote-dreamers.png\" alt=\"\" />\n\t\t\t\t\t<p class=\"attr\">- Bill Veeck</p>\n\t\t\t\t</div>\n\t\t\t\t\n\t\t\t\t<div class=\"section-2 contain\">\n\t\t\t\t\t<div class=\"grid grid-padded grid-middle\">\n\t\t\t\t\t\t<div class=\"image\">\n\t\t\t\t\t\t\t<img src=\"{{ Config.cdn }}images/history/the-veeck-era/img-grandstand.jpg\" alt=\"\" />\n\t\t\t\t\t\t</div>\n\t\t\t\t\t\t<div>\n\t\t\t\t\t\t\t<h2>Grandstand Manager&rsquo;s Day</h2>\n\t\t\t\t\t\t\t<p>No, the managers weren&rsquo;t in the stands. No, the grandstands didn&rsquo;t have a new manager. Indeed, Bill Veeck appointed the fans in the grandstand to make managerial decisions throughout the game. They would vote on whether a player should bunt, steal a base, change pitchers, and more, by holding up signs that read “YES” or “NO.” The Browns went on to win that game 5-3, breaking their 4-game losing streak.</p>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t</div>\n\t</section>\n\n\t<section class=\"california\">\n\t\t<div class=\"content\">\n\n\t\t\t<div class=\"section-1 contain\" data-theme=\"light\" data-year=\"1952\" data-section-title=\"Veeck attempts move to L.A.\">\n\t\t\t\t<h2>California or Bust</h2>\n\t\t\t\t<p>Despite all of his efforts to bring in a crowd, Bill Veeck couldn&rsquo;t bring home enough wins. The 1951 season ended with a 52-102 record. The &lsquo;52 season was just a shade better at 64-90. Veeck tried to move the Browns to Los Angeles, but with most other teams in the Midwest or on the East Coast, the travel expenses — and the ire of other team owners — were too much for MLB execs to approve it.</p>\n\t\t\t</div>\n\t\t\t\n\t\t\t<div class=\"section-2 contain\" data-theme=\"light\" data-year=\"1953\" data-section-title=\"Anheuser-Busch buys Cardinals\">\n\t\t\t\t<div class=\"grid grid-padded grid-middle\">\n\t\t\t\t\t<div class=\"image\">\n\t\t\t\t\t\t<img src=\"{{ Config.cdn }}images/history/the-veeck-era/img-anheuser.png\" alt=\"\" />\n\t\t\t\t\t</div>\n\t\t\t\t\t<div>\n\t\t\t\t\t\t<h2>How Beer Wrecked Veeck</h2>\n\t\t\t\t\t\t<p>Cardinals owner Fred Saigh was forced to sell the team after he was convicted of income tax evasion. It looked like Veeck had won&hellip; until August Busch, Jr., owner of Anheuser-Busch, came to bat for the Redbirds. Veeck knew the Cardinals were here to stay, and he was no match for the financial, political and social power of the Busch family.</p>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t</div>\n\n\t\t\t<div class=\"section-3 contain\" data-theme=\"light\" data-year=\"1953\" data-section-title=\"Veeck sells Park to Cards\">\n\t\t\t\t\n\t\t\t\t<img src=\"{{ Config.cdn }}images/history/the-veeck-era/img-quote-villian.png\" alt=\"\" />\n\t\t\t\t<p class=\"attr\">– Bill Veeck in his autobiography, Veeck – As In Wreck: The Autobiography of Bill Veeck</p>\n\t\t\t\t<p>Veeck was running out of options, and running out of cash. He sold Sportsman&rsquo;s Park to August Busch, Jr., for $800,000 during the 1953 season.</p>\n\n\t\t\t</div>\n\n\t\t\t<div class=\"section-4 contain\" data-theme=\"light\" data-year=\"1953\" data-section-title=\"Browns Sold and moved to Baltimore\">\n\t\t\t\t\n\t\t\t\t<h2>Baltimore-Bound</h2>\n\t\t\t\t<p>Bill Veeck wanted to move the team to Baltimore. But the American League decision-makers were still so riled up about Veeck&rsquo;s antics, they denied the transfer. It&rsquo;s not that they didn&rsquo;t want the team to move — they simply didn&rsquo;t want Veeck in Baltimore. Veeck&rsquo;s only move was to sell all of his shares to a Baltimore attorney and baseball-lover, Clarence Miles.</p>\n\n\t\t\t</div>\n\t\t</div>\n\t</section>\n\n\t<section class=\"final dark\" data-theme=\"dark\" data-year=\"1953\" data-section-title=\"The End\">\n\t\t\n\t\t<div class=\"content\">\n\t\t\t<div class=\"contain\">\n\t\t\t\t<img src=\"{{ Config.cdn }}images/history/the-veeck-era/img-final-tally.png\" alt=\"\" />\n\t\t\t</div>\n\t\t</div>\n\n\t</section>\n\n\t<a href=\"/#/players\">\n\t\t<section class=\"next-section\" data-theme=\"\" data-year=\"\" data-section-title=\"\">\n\t\t\t<div class=\"content\">\n\t\t\t\t<p>More Browns History</p>\n\t\t\t\t<h2>See The Players &rarr;</h2>\n\t\t\t</div>\n\t\t</section>\n\t</a>\n\n</div>"
	},

	init: function( routeData, onComplete ) {

		var id = routeData.params.id;

		//- set up container
		$.addClass(id + ' page', this.div);

		$.css(this.div, {
			padding: 0
		});

		var nav = this.nav = $.select('.nav-controller', document.body);
		$.removeClass(nav, 'dark');

		//- save current section
		var id = this.id = routeData.params.id;
		this.template = this.templates[ id ];

		var sectionData = this.data = _.findWhere(_data.sections, { key: id });
		sectionData.Config = Config;

		//- render main view
		this.render( sectionData );

		//- build hero
		this.hero = new Hero( sectionData );

		//- build timeline
		this.timeline = new HistoryTimeline();

		//- render hero and timeline
		$.prepend( this.hero.div, this.div);
		$.prepend( this.timeline.div, this.div);

		//- add to the scene
		$.append(this.div, Stage);

		//- save DOM queries
		this.wrapper = 		$.select('.inner', this.div);
		this.sections = 	$.select('section', this.div);
		this.borders = 		$.select('.border', this.div);
		this.years = 		$.select('[data-year]', this.div);
		this.timelineBar = 	$.select('.timeline-bar', this.div);
		this.carousels = 	[];

		this.currentYear = 		null;
		this.currentSection = 	null;

		//- create carousel(only one of them...)
		var c = $.select('.carousel', this.div);

		for( var i = 0; i < c.length; i ++ ) {
			this.carousels[ i ] = new Carousel( c[ i ], {} );
		}

		//- save scroll position
		this.scr = 0;

		//- wire event listeners
		this.addListeners();

		//- set up renderer for smooooooooooth scrolling
		this.renderer = new SmoothScroll( this.onRender.bind(this) );

		//- set scroll limits on renderer
		this.resize();

		Velocity.hook(this.timeline.div, "opacity", 0);

		this.overlay.init( this );

		//- animate in
		onComplete();
	},

	addListeners: function() {

		var _this = this;
		var bug = $.select('.scroll', this.div);
		var wrapper = $.select('.inner', this.div);
		var max = Math.max(0, wrapper[0].scrollHeight);

		$.on(bug[ 0 ], 'click', function() {

			_this.renderer.setTarget(window.innerHeight * -1);

			setTimeout(function() {
				_this.scrollCheck();
			}, 350);
		});

		var handler = function(e) {

			if( $.hasClass(e.target, 'show-overlay') ) {

				e.preventDefault();

				var section = $.attr(e.target, 'data-overlay');
				var data = _this.data[ 'overlayData' ][ section ];

				_this.overlay.populate(data, 'history-section');
			}

			if( $.hasClass(e.target, 'close') ) {

				_this.overlay.animateOut();
			}
		};

		if( Device.system.touch ) {
			$.on(this.div, 'touchend', handler);
		} else {
			$.on(this.div, 'click', handler);
		}

		VirtualScroll.on(function(e) {
			_this.scrollCheck(e);
		});
	},

	scrollCheck: Util.debounce(function(e) {

		threshold = (e.deltaY > 0) ? 0 : 0.8;

		if( this.scr > -100 ) {

			$.removeClass(this.borders, 'light dark');
			$.removeClass(this.timeline.div, 'light dark');
			$.removeClass(this.timelineBar, 'light dark');
			$.removeClass(this.nav, 'light dark');

			this.currentSection = 'hero';
			this.currentYear = '';
		}

		if( this.scr <= (window.innerHeight * -0.65) ) {

			if( !this.timeline.active ) {

				this.timeline.active = true;

				Velocity(this.timeline.div, {
					opacity: 1
				}, {
					duration: 1000,
					easing: 'easeOutCubic',
				});
			}
		} else {

			if( this.timeline.active ) {

				this.timeline.active = false;
				
				Velocity(this.timeline.div, {
					opacity: 0
				}, {
					duration: 250,
					easing: 'easeOutCubic',
				});
			}
		}

		//- check viewport vis for sections
		for( var i = 0; i < this.sections.length; i ++ ) {

			var _this = this.sections[ i ];

			if( isVisible(_this) && _this !== this.currentSection ) {

				this.currentSection = _this;
				var content = $.select('.content', _this);

				if( !$._bonzo(content).data('visible') ) {

					$._bonzo(content).data('visible', true);

					Velocity(content, {
						opacity: [ 1, 0 ],
						translateY: [ 0, 50 ]
					}, {
						duration: 1200,
						easing: 'easeOutCubic',
						delay: 250
					});
				}
			}
		}

		//- check viewport vis for items tagged with years
		for( var i = 0; i < this.years.length; i ++ ) {

			var _this = this.years[ i ];

			if( isVisible(_this) && this.currentYear !== _this ) {

				// console.log(_this);

				this.currentYear = _this;

				var year = $.attr(_this, 'data-year');
				var title = $.attr(_this, 'data-section-title');
				var theme = $.attr(_this, 'data-theme') || '';
				var navTheme = ( theme == "dark" ) ? '' : 'dark';

				$.removeClass(this.borders, 'light dark');
				$.removeClass(this.timeline.div, 'light dark');
				$.removeClass(this.timelineBar, 'light dark');
				$.removeClass(this.nav, 'light dark');

				$.addClass(theme, this.borders);
				$.addClass(theme, this.timeline.div);
				$.addClass(theme, this.timelineBar);
				$.addClass(navTheme, this.nav);
				
				this.timeline.update(year, title);
			}
		}
	}, 15),

	onRender: function( scr ) {

		this.scr = scr;

		this.hero.onRender(scr);

		$.transform(this.wrapper, {
			y: scr
		});
	},

	animateOut: function( onComplete ) {

		Velocity(this.div, {
			opacity: [ 0, 1 ]
		}, {
			duration: 1000,
			complete: onComplete
		});

		this.hero.animateOut();
		this.renderer.stopRender();
	},

	animateIn: function( onComplete ) {

		var _this = this;

		setTimeout(function() {
			_this.resize();
		}, 100);

		Velocity(this.div, {
			opacity: [ 1, 0 ]
		}, {
			duration: 1000,
			complete: onComplete,
			easing: 'linear'
		});

		this.renderer.startRender();
		this.hero.animateIn();
	},

	resize: function( w, h ) {

		this.hero.resize( w, h );

		var wrapper = $.select('.inner', this.div);
		var max = Math.max(0, wrapper[0].scrollHeight);

		this.renderer.setLimits((max * -1), 0);

		for( var i = 0; i < this.carousels.length; i ++ ) {
			Util.debounce(this.carousels[ i ].resize( w, h ), 1000, false);
		}
	}
});

module.exports = HistoryView;
},{"./../Config":1,"./../Data":2,"./../components/Carousel":5,"./../components/DOM":6,"./../components/Device":7,"./../components/HistoryHero":10,"./../components/HistoryTimeline":11,"./../components/Overlay":15,"./../components/SmoothScroll":19,"./../components/Utils":22,"./../components/View":23,"./../components/VirtualScroll":26,"./../components/oop/Class":28,"underscore":53,"velocity-animate":54}],33:[function(require,module,exports){


var Class = require('./../components/oop/Class');
var View = require('./../components/View');
var Velocity = require('velocity-animate');
var $ = require('./../components/DOM');

var Config = require('./../Config');
var _data = require('./../Data').historySection;
var Util = require('./../components/Utils');
var SnappyScroll = require('./../components/SnappyScroll');
var Shuffle = require('./../components/ShuffleLetters')();

var HistoryView = new Class({

	name: "history-view",
	Extends: View,
	template: "\n<div class=\"page-title\">\n\t<h1>{{ title }}</h1>\n</div>\n\n<div class=\"scroll-bug\">\n\t<div><img src=\"{{ config.cdn }}images/bg/icn-right-arrow.png\" alt=\"\" /></div>\n\t<h5>Scroll to explore the chapters</h5>\n</div>\n\n<div class=\"content\">\n\t\n\t<div class=\"inner\">\n\t\t<ul class=\"history-sections\">\n\t\t\t{{ #sections }}\n\t\t\t\t<li>\n\t\t\t\t\t<a href=\"/#/history/{{ key }}\">\n\t\t\t\t\t\t<img src=\"{{ config.cdn }}images/fpo/{{ overviewImage }}\" alt=\"\" />\n\t\t\t\t\t</a>\t\n\t\t\t\t</li>\n\t\t\t{{ /sections }}\n\t\t</ul>\n\t</div>\n\n</div>\n\n<div class=\"title\">\n\t<p><span>Chapter 1:</span> <a href=\"/#/history\" class=\"btn\">The Early Years</a></p>\n</div>",

	init: function( routeData, onComplete ) {

		_data.config = Config;

		var nav = $.select('.nav-controller');
		$.addClass('dark', nav);

		this.render(_data);
		$.addClass('page', this.div);

		this.sections = $.select('.grid-item', this.div);
		Velocity.hook(this.sections, "opacity", 0);

		$.append(this.div, Stage);

		this.wrapper = $.select('.history-sections', this.div);
		this.content = $.select('li', this.wrapper);
		this.title = $.select('.title', this.div);

		this.renderer = new SnappyScroll( this.onRender.bind(this) );
		this.renderer.setWidth( 770 );
		this.renderer.setMaxIndex( this.content.length );
		this.renderer.onScrollUpdate = this.onScrollUpdate.bind(this);

		this.addListeners();
		onComplete();
	},

	addListeners: function() {

		var _this = this;

		$.on(this.div, 'click', function(e) {

			var t = e.target.parentNode.parentNode; // ...

			if( t !== _this.currentItem ) {

				e.preventDefault();

				var idx = _this.content.indexOf( t );
				_this.renderer.setIndex(idx);
			}
		});
	},

	onRender: function( scr ) {

		$.transform(this.wrapper, {
			x: scr
		});

		for( var i = 0; i < this.content.length; i ++ ) {

			var offset = this.content[ i ].offsetLeft;
			var position = offset + scr;
			var absPosition = Math.abs(position);

			//- opacity
			var o = (( absPosition / 15 ) / 100);
				o = Util.clamp(o, 0, 1);
				o = 1 - o;

			//- scale
			var s = (( absPosition / 50 ) / 100);
				s = Util.clamp(s, 0, 1);
				s = 1 - s;

			$.css(this.content[ i ], {
				opacity: o
			}).transform(this.content[ i ], {
				scale: s
			});
		}
	},

	onScrollUpdate: function( index ) {

		if( index !== this.lastScroll ) {

			var item = this.currentItem = this.content[ index ];

			var d = _data.sections[ index ];
			var ch = 'Chapter ' + (parseInt(index) + 1) + ':';

			var l = $.select('a', this.title);
			var p = $.select('span', this.title);

			Shuffle(p, ch);
			Shuffle(l, d.title)

			l[ 0 ].href = '#/history/' + d.key;
		}

		this.lastScroll = index;
	},

	animateOut: function( onComplete ) {

		Velocity(this.div, {
			opacity: [ 0, 1 ]
		}, {
			duration: 1000,
			complete: onComplete
		});

		Velocity(this.sections, "transition.fadeOut", {
			stagger: 500,
			duration: 1000,
			delay: 500
		});

		this.renderer.stopRender();
	},

	animateIn: function( onComplete ) {

		var content = $.select('.inner', this.div);
		var bug = $.select('.scroll-bug');
		$.show(bug);

		Velocity(this.div, {
			opacity: [ 1, 0 ]
		}, {
			duration: 1000,
			complete: onComplete,
			easing: 'linear'
		});

		Velocity(this.sections, "transition.fadeIn", {
			stagger: 500,
			duration: 1000,
			delay: 500
		});

		Velocity(content, {
			opacity: [ 1, 0 ],
			translateX: [ 0, -100 ]
		}, {
			duration: 1500,
			display: 'block',
			easing: 'easeOutCubic'
		});

		Velocity(bug, {
			opacity: [ 1, 0 ]
		}, {
			duration: 500,
			easing: 'easeOutCubic'
		});

		this.renderer.startRender();
	},

	resize: function( w, h ) {

		var wrapper = $.select('.history-sections', this.div);
		var max = Math.max(0, wrapper[0].scrollWidth - 770);

		this.renderer.setLimits(-max, 0);
	}
});

module.exports = HistoryView;
},{"./../Config":1,"./../Data":2,"./../components/DOM":6,"./../components/ShuffleLetters":18,"./../components/SnappyScroll":20,"./../components/Utils":22,"./../components/View":23,"./../components/oop/Class":28,"velocity-animate":54}],34:[function(require,module,exports){


var Device = require('./../components/Device');
var Class = require('./../components/oop/Class');
var View = require('./../components/View');
var Velocity = require('velocity-animate');
var $ = require('./../components/DOM');
var Config = require('./../Config');

var HomeView = new Class({

	name: "home-view",
	Extends: View,
	template: "\n<div class=\"content\">\n\t<div class=\"inner\">\n\n\t\t<div class=\"title icon\">\n\t\t\tThe Indelible History <img src=\"{{ config.cdn }}images/img-intro-icon.png\" alt=\"\" /> of The St. Louis Browns \n\t\t</div>\n\n\t\t<img src=\"{{ config.cdn }}images/home-text.png\" alt=\"\" class=\"title\" />\n\n\t\t<div class=\"title play-ball\">\n\t\t\t<a href=\"/#/history\">\n\t\t\t\t<span>Play Ball &rarr;</span>\n\t\t\t\t<span>Play Ball &rarr;</span>\n\t\t\t</a>\n\t\t</div>\n\n\t</div>\n</div>",

	init: function( data, onComplete ) {

		var _this = this;
		var nav = $.select('.nav-controller');
		$.removeClass(nav, 'dark');

		data.config = Config;

		this.render( data );
		$.addClass('page', this.div);

		this.titles = $.select('.title', this.div);

		Velocity.hook(this.titles, "opacity", 0);

		if( !Device.system.touch ) {

			var video = document.createElement('video');
			video.autoplay = true;
			video.loop = true;

			video.src = Config.cdn + 'video/home-loop.' + Device.media.video;

			$.css(video, {
				opacity: 0
			});

			video.addEventListener('loadeddata', function(e) {
				
				_this.div.appendChild(video);

				Velocity(video, {
					opacity: 1
				}, {
					duration: 500
				});
			});
			
		}

		$.append(this.div, Stage);
		
		onComplete();
	},

	animateIn: function( onComplete ) {

		var content = $.select('.content .inner', this.div);

		Velocity(this.div, {
			opacity: [ 1, 0 ],
			translateZ: 0
		}, {
			duration: 4000,
			complete: onComplete,
			easing: 'easeOutCubic'
		});

		Velocity(this.titles, "transition.slideUpIn", {
			stagger: 400,
			duration: 1000,
			easing: 'easeOutCubic'
		});

		Velocity(content, {
			rotateX: [ 0, 15 ]
		}, {
			duration: 1200,
			easing: 'easeOutCubic'
		});

		setInterval(function() {

			var x = (Math.random() * 6) - 3;
			var y = (Math.random() * 6) - 3;

			Velocity(content, {
				blur: 3,
				translateX: x,
				translateY: y,
				translateZ: 0
			}, {
				duration: 10,
				loop: 1
			});
		}, 4000);
	},

	animateOut: function( onComplete ) {

		Velocity(this.div, {
			opacity: 0,
			translateZ: 0
		}, {
			duration: 2000,
			complete: onComplete,
			easing: 'easeOutCubic'
		});

		Velocity(this.titles, "transition.slideDownOut", {
			stagger: 100,
			duration: 500,
			easing: 'easeOutCubic'
		});

	},

	resize: function( w, h ) {

		// console.log(w, h);
	}
});

module.exports = HomeView;
},{"./../Config":1,"./../components/DOM":6,"./../components/Device":7,"./../components/View":23,"./../components/oop/Class":28,"velocity-animate":54}],35:[function(require,module,exports){


var Class = require('./../components/oop/Class');
var View = require('./../components/View');
var Velocity = require('velocity-animate');
var Loop = require('raf-loop');

var $ = require('./../components/DOM');
var Config = require('./../Config');
var VirtualScroll = require('./../components/VirtualScroll')();
var Util = require('./../components/Utils');

var _ = require('underscore');
var _data = require('./../Data').players;

var PlayersView = new Class({

	name: "players-list-view",
	Extends: View,
	template: "<ol class=\"players-list\">\n\t{{#players}}\n\t\t<li>\n\t\t\t<a href=\"#\" data-href=\"{{ key }}\" class=\"btn info\">\n\t\t\t\t<span data-href=\"{{ key }}\" class=\"info\">{{{ firstName }}} {{{ lastName }}}</span>\n\t\t\t</a>\n\t\t</li>\n\t{{/players}}\n</ol>",

	init: function( data, onComplete ) {

		var sorted = _.sortBy(_data.players, "lastName");
		_data.players = sorted;

		this.render(_data);

		var content = $.select('.content', '.players-view');
		$.append(this.div, content);

		this.list = $.select('li', this.div);

		$.hide(this.div);

		Velocity.hook(this.list, "opacity", 0);
	},

	animateOut: function( newContent ) {

		var _this = this;

		Velocity(this.div, {
			opacity: 0
		}, {
			mobileHA: false,
			stagger: 100,
			duration: 250,
			display: 'none',
			complete: function() {

				// _this.destroy();
				if( newContent && newContent.animateIn ) newContent.animateIn();
			}
		});
	},

	animateIn: function( onComplete ) {

		$.show(this.div);

		Velocity(this.div, {
			opacity: 1
		}, {
			mobileHA: false,
			duration: 500
		});

		Velocity(this.list, "transition.fadeIn", {
			stagger: 40,
			duration: 400,
			mobileHA: false
		});
	},

	resize: function( w, h ) {

		// console.log(w, h);
	}
});

module.exports = PlayersView;
},{"./../Config":1,"./../Data":2,"./../components/DOM":6,"./../components/Utils":22,"./../components/View":23,"./../components/VirtualScroll":26,"./../components/oop/Class":28,"raf-loop":48,"underscore":53,"velocity-animate":54}],36:[function(require,module,exports){


var Class = require('./../components/oop/Class');
var View = require('./../components/View');
var Velocity = require('velocity-animate');
var Device = require('./../components/Device');

var $ = require('./../components/DOM');
var Config = require('./../Config');
var Util = require('./../components/Utils');
var SmoothScroll = require('./../components/SmoothScroll');
var Config = require('./../Config');

var _ = require('underscore');
var _data = require('./../Data').players;

var lastCategory = "";
var isVisible = function(el) {

    var rect = el.getBoundingClientRect();
    var threshold = 0.25;

    return (
        rect.top <= (window.innerHeight * threshold) &&
        rect.bottom >= (window.innerHeight * threshold) &&
        rect.left >= -100 &&
        rect.right <= window.innerWidth
    );
};

var PlayersPhotoView = new Class({

	name: "players-photo-view",
	Extends: View,
	template: "<ol class=\"player-photos\">\n\t{{ #players }}\n\t\t<li {{ #category }} data-category=\"{{ category }}\" {{ /category }}>\n\t\t\t<img src=\"{{ config.cdn }}images/players/{{ key }}.png\" alt=\"{{ name }}\" class=\"player\" />\n\t\t\t<div class=\"more-info\">\n\t\t\t\t{{ #hallOfFame }}\n\t\t\t\t\t<img src=\"{{ config.cdn }}images/hof-badge.png\" alt=\"\" class=\"badge\" />\n\t\t\t\t{{ /hallOfFame }}\n\t\t\t\t{{ #cardinalsPlayer }}\n\t\t\t\t\t<img src=\"{{ config.cdn }}images/cards-badge.png\" alt=\"\" class=\"badge\" />\n\t\t\t\t{{ /cardinalsPlayer }}\n\t\t\t\t<h2 class=\"info\" data-href=\"{{ key }}\">{{{ firstName }}} {{{ lastName }}}</h2>\n\t\t\t\t<a href=\"#\" data-href=\"{{ key }}\" class=\"btn info\">More Info</a>\n\t\t\t</div>\n\t\t</li>\n\t{{ /players }}\n</ol>\n\n<div class=\"alpha-controls\">\n\t<div class=\"grid\">\n\t\t<div class=\"indicator\"></div>\n\t\t<div data-category=\"a\" class=\"active\">A</div>\n\t\t<div data-category=\"b\">B</div>\n\t\t<div data-category=\"c\">C</div>\n\t\t<div data-category=\"d\">D</div>\n\t\t<div data-category=\"e\">E</div>\n\t\t<div data-category=\"f\">F</div>\n\t\t<div data-category=\"g\">G</div>\n\t\t<div data-category=\"h\">H</div>\n\t\t<div data-category=\"i\">I</div>\n\t\t<div data-category=\"j\">J</div>\n\t\t<div data-category=\"k\">K</div>\n\t\t<div data-category=\"l\">L</div>\n\t\t<div data-category=\"m\">M</div>\n\t\t<div data-category=\"n\">N</div>\n\t\t<div data-category=\"o\">O</div>\n\t\t<div data-category=\"p\">P</div>\n\t\t<div data-category=\"q\">Q</div>\n\t\t<div data-category=\"r\">R</div>\n\t\t<div data-category=\"s\">S</div>\n\t\t<div data-category=\"t\">T</div>\n\t\t<div data-category=\"u\">U</div>\n\t\t<div data-category=\"v\">V</div>\n\t\t<div data-category=\"w\">W</div>\n\t\t<div data-category=\"x\">X</div>\n\t\t<div data-category=\"y\">Y</div>\n\t\t<div data-category=\"z\">Z</div>\n\t</div>\n</div>",

	init: function( data, onComplete ) {

		var lastCategory;

		_data.activeCategories = [];

		var sorted = _.sortBy(_data.players, "lastName");
		var grouped = _.each(sorted, function( player ) { 

			var category = player['lastName'].substr(0, 1).toLowerCase();
			
			if( category !== lastCategory ) {

				player.category = category;
			    lastCategory = category;

			    _data.activeCategories.push(category);
			}
		});

		_data.players = grouped;
		_data.config = Config;

		this.render(_data);

		var content = $.select('.content', '.players-view');
		$.append(this.div, content);

		this.controls = $.select('.alpha-controls', this.div);
		this.list = $.select('li', this.div);
		this.wrapper = $.select('.player-photos', this.div);

		this.renderer = new SmoothScroll( this.onRender.bind(this), 0.0875 );

		_.each(_data.activeCategories, function(e) {

			var el = $.select('[data-category=' + e + ']', this.controls);
			$.addClass('selected', el);
		});

		this.addListeners();
	},

	addListeners: function() {

		var _this = this;
		var controls = $.select('div', this.controls);
		var indicator = $.select('.indicator', this.controls);

		$.on(this.controls[ 0 ], 'click', function(e) {

			if( !$.hasClass(e.target, 'indicator') ) {

				var category = e.target.innerHTML.toLowerCase();
				var target = $.select('.player-photos [data-category=' + category + ']', Stage)[ 0 ];
				
				if( target ) {

					_this.renderer.easer.setTarget(-target.offsetLeft);

					$.removeClass(controls, 'active');
					$.addClass('active', e.target);

					var active = $.select('.active', _this.controls[ 0 ]);
					var offset = active[ 0 ].offsetLeft;

					Velocity(indicator, {
						translateX: offset
					}, {
						duration: 500,
						easing: 'easeInOutCubic'
					});
				}
			}
		});

		$.on(this.div, 'click', function(e) {

			if( $.hasClass(e.target, 'player') ) {

				var t = e.target.parentNode;
				var offset = t.offsetLeft * -1;

				_this.renderer.setTarget(offset);
			}
		});
	},

	onRender: function( scr ) {

		$.transform(this.wrapper, {
			x: scr
		});

		for( var i = 0; i < this.list.length; i ++ ) {

			var offset = this.list[ i ].offsetLeft;
			var position = offset + scr;
			var absPosition = Math.abs(position);
			var category = $.attr(this.list[ i ], 'data-category');
			
			// get current letter in view
			if( category && category !== lastCategory && isVisible(this.list[ i ]) ) {

				lastCategory = category;
				var controls = $.select('div', this.controls);
				var control = $.select('[data-category="' + category + '"]', this.controls);
				var offset = control[ 0 ].offsetLeft;
				var indicator = $.select('.indicator', this.controls);
				
				$.removeClass(controls, 'active');
				$.addClass('active', control);

				Velocity(indicator, {
					translateX: offset
				}, {
					duration: 500,
					easing: 'easeOutCubic',
					queue: false
				});
			}

			if( !Device.system.touch ) {
				//- opacity
				var o = (( absPosition / 8 ) / 100);
					o = Util.clamp(o, 0, 1);
					o = 1 - o;

				//- x offset
				var tx = absPosition / 7;
					Util.clamp(tx, 0, 100);

				$.transform(this.list[ i ], {
					x: tx
				});

				$.css(this.list[ i ], {
					opacity: o
				});
			}
		}
	},

	animateOut: function( newContent ) {

		var _this = this;

		Velocity(this.div, {
			opacity: 0,
			left: [ 100, 0 ]
		}, {
			duration: 750,
			easing: 'easeOutCubic',
			display: 'none',
			mobileHA: false,
			complete: function() {

				if( newContent && newContent.animateIn ) newContent.animateIn();
			}
		});

		// accomodate for whole div moving...
		Velocity(this.controls, {
			translateX: [ -100, 0 ],
			translateZ: 0
		}, {
			duration: 750,
			display: 'block',
			easing: 'easeOutCubic'
		});

		var bug = $.select('.scroll-bug');
		
		Velocity(bug, {
			opacity: 0
		}, {
			duration: 500,
			easing: 'easeOutCubic'
		});

		this.renderer.stopRender();
	},

	animateIn: function( onComplete ) {

		$.show(this.div);

		this.renderer.startRender();

		Velocity(this.div, {
			opacity: [ 1, 0 ],
			left: [ 0, -100 ]
		}, {
			duration: 1500,
			display: 'block',
			easing: 'easeOutCubic',
			mobileHA: false
		});

		// accomodate for whole div moving...
		Velocity(this.controls, {
			translateX: [ 0, 100 ],
			translateZ: 0
		}, {
			duration: 1500,
			display: 'block',
			easing: 'easeOutCubic'
		});

		var bug = $.select('.scroll-bug');
		Velocity.hook(bug, "opacity", 0);
		$.show(bug);

		Velocity(bug, {
			opacity: 1
		}, {
			duration: 500,
			easing: 'easeOutCubic'
		});
	},

	resize: function( w, h ) {

		var wrapper = $.select('.player-photos', this.div);
		var max = Math.max(0, ( wrapper[0].scrollWidth - (window.innerWidth - 400) ));

		this.renderer.setLimits((max * -1), 0);
	}
});

module.exports = PlayersPhotoView;
},{"./../Config":1,"./../Data":2,"./../components/DOM":6,"./../components/Device":7,"./../components/SmoothScroll":19,"./../components/Utils":22,"./../components/View":23,"./../components/oop/Class":28,"underscore":53,"velocity-animate":54}],37:[function(require,module,exports){


var Class = require('./../components/oop/Class');
var View = require('./../components/View');
var Velocity = require('velocity-animate');

var ListView = require('./PlayersListView');
var PhotoView = require('./PlayersPhotoView');
var Overlay = require('./../components/Overlay');

var $ = require('./../components/DOM');
var Config = require('./../Config');
var VirtualScroll = require('./../components/VirtualScroll')();
var Util = require('./../components/Utils');

var _ = require('underscore');
var _data = require('./../Data').players;


var PlayersView = new Class({

	name: "players-view",
	Extends: View,
	template: "<div class=\"page-title\">\n\t<h1>{{ title}}</h1>\n</div>\n\n<div class=\"scroll-bug\" style=\"display: none;\">\n\t<div><img src=\"{{ config.cdn }}images/bg/icn-right-arrow.png\" alt=\"\" /></div>\n\t<h5>Scroll to explore notable and living browns players</h5>\n</div>\n\n<div class=\"content\"></div>\n\n<div class=\"controls\">\n\t<ul>\n\t\t<li class=\"explore active\">Explore</li>\n\t\t<li class=\"list\">List</li>\n\t</ul>\n</div>",
	overlay: new Overlay(),

	init: function( data, onComplete ) {

		var nav = $.select('.nav-controller');
		$.addClass('dark', nav);

		_data.config = Config;

		this.data = _data;

		this.render(this.data);
		$.addClass('page', this.div);

		$.append(this.div, Stage);

		//- initialize separate views
		this.photoView = new PhotoView();
		this.listView = new ListView();

		this.listView.init();
		this.photoView.init();

		this.overlay.init( this );
		this.currentView = this.photoView;

		this.addListeners();
		onComplete();
	},

	addListeners: function() {

		var _this = this;
		var controls = $.select('.controls', this.div);
		var controlItems = $.select('li', controls);

		$.on(controls[ 0 ], 'click', function(e) {

			if( $.hasClass(e.target, 'list') ) {

				$.removeClass(controlItems, 'active');
				_this.swap(_this.listView);
				_this.currentView = _this.listView;
				$.addClass('active', controlItems[ 1 ]);
			} else if( $.hasClass(e.target, 'explore') ) {

				$.removeClass(controlItems, 'active');
				_this.swap(_this.photoView);
				_this.currentView = _this.photoView;
				$.addClass('active', controlItems[ 0 ]);
			}
		});

		$.on(this.div, 'click', function(e) {

			var attr = $.attr(e.target, 'data-href');
			var btn = $.hasClass(e.target, 'info');
			var overlay = e.target.className == 'close';

			if( attr && btn ) {

				e.preventDefault();
				e.stopPropagation();

				var player = _.findWhere(_data.players, { "key": attr });
				_this.showOverlay( player );
			} else if( overlay ) {

				e.preventDefault();
				_this.hideOverlay();
			}
		});
	},

	swap: function( newContent ) {

		this.currentView.animateOut(newContent);
	},

	animateOut: function( onComplete ) {

		Velocity(this.div, {
			opacity: [ 0, 1 ]
		}, {
			duration: 1000,
			complete: onComplete
		});

		this.currentView.animateOut();
	},

	animateIn: function( onComplete ) {

		Velocity(this.div, {
			opacity: [ 1, 0 ]
		}, {
			duration: 1000,
			complete: onComplete,
			easing: 'linear'
		});

		this.currentView.animateIn();
	},

	showOverlay: function( playerData ) {

		this.overlay.populate( playerData, "players" );

		Velocity(this.currentView.div, {
			opacity: [ 0.5, 1 ]
		}, {
			duration: 1500,
			easing: 'easeOutCubic',
			mobileHA: false
		});

		if( this.currentView == this.photoView ) {

			this.photoView.renderer.stopRender();
		}	
	},

	hideOverlay: function() {

		Velocity(this.currentView.div, {
			opacity: [ 1, 0.5 ]
		}, {
			duration: 500,
			easing: 'easeOutCubic',
			mobileHA: false
		});

		this.overlay.animateOut();

		if( this.currentView == this.photoView ) {

			this.photoView.renderer.startRender();
		}
	},

	resize: function( w, h ) {

		this.photoView.resize( w, h );
		this.overlay.resize( w, h );
	}
});

module.exports = PlayersView;
},{"./../Config":1,"./../Data":2,"./../components/DOM":6,"./../components/Overlay":15,"./../components/Utils":22,"./../components/View":23,"./../components/VirtualScroll":26,"./../components/oop/Class":28,"./PlayersListView":35,"./PlayersPhotoView":36,"underscore":53,"velocity-animate":54}],38:[function(require,module,exports){


var Class = require('./../components/oop/Class');
var View = require('./../components/View');
var Velocity = require('velocity-animate');
var $ = require('./../components/DOM');
var Config = require('./../Config');

var Preloader = require('./../components/PreLoader');
var Ticker = require('./../components/Ticker');

var Images = require('./../components/Bundle');
var ImagesContainer = $.select('#image-store')[ 0 ];

var PreloaderView = new Class({

	name: "preloader",
	Extends: View,
	template: "<div class=\"content\">\n\t<img src=\"{{ config.cdn }}images/bg/loading.gif\" alt=\"\" />\n\t<div class=\"progress\"></div>\n</div>",

	initialize: function( onComplete ) {

		var _this = this;
		var data = {
			config: Config
		};

		this.onPreloadComplete = onComplete;

		this.loader = new Preloader(Images, {
			pipeline: true,
			onProgress: _this.onProgress.bind(this),
			onComplete: _this.onComplete.bind(this)
		});

		this.render(data, document.body);

		this.progress = $.select('.progress', this.div)[ 0 ];
	},

	animateIn: function( onComplete ) {

		
	},

	animateOut: function( onComplete ) {

		Velocity(this.div, {
			opacity: 0
		}, {
			display: 'none',
			duration: 1200,
			complete: onComplete
		});
	},

	onProgress: function( img, imageEl, index ) {

		// fires every time an image is done or errors. 
		// imageEl will be falsy if error
		// console.log('just ' +  (!imageEl ? 'failed: ' : 'loaded: ') + img);

		ImagesContainer.appendChild( imageEl );
		
		var percent = Math.floor((100 / this.loader.queue.length) * this.loader.completed.length);

		this.progress.innerHTML = percent + '%';
	},

	onComplete: function( loaded, errors ) {

		// fires when whole list is done. cache is primed.
		// console.log('done', loaded);

		ImagesContainer.parentNode.removeChild( ImagesContainer );
		
		if ( errors ) {
			console.log('the following failed', errors);
		}

		this.onPreloadComplete();
	},

	destroy: function() {

		document.body.removeChild(this.div);
	}
});

module.exports = PreloaderView;
},{"./../Config":1,"./../components/Bundle":4,"./../components/DOM":6,"./../components/PreLoader":16,"./../components/Ticker":21,"./../components/View":23,"./../components/oop/Class":28,"velocity-animate":54}],39:[function(require,module,exports){


var Class = require('./../components/oop/Class');
var View = require('./../components/View');
var Velocity = require('velocity-animate');
var $ = require('./../components/DOM');

var StoreView = new Class({

	name: "store-view",
	Extends: View,
	template: "<div class=\"page-title\">\n\t<h1>Store</h1>\n</div>",

	init: function( data, onComplete ) {

		var nav = $.select('.nav-controller');
		$.addClass('dark', nav);

		var stage = document.querySelector('#stage');		
		this.render(data, stage);
		$.addClass('page', this.div);

		onComplete();
	},

	animateOut: function( onComplete ) {

		Velocity(this.div, {
			opacity: [ 0, 1 ]
		}, {
			duration: 1000,
			complete: onComplete
		});
	},

	animateIn: function( onComplete ) {

		Velocity(this.div, {
			opacity: [ 1, 0 ]
		}, {
			duration: 1000,
			complete: onComplete,
			easing: 'linear'
		});
	},

	resize: function( w, h ) {

		// console.log(w, h);
	}
});

module.exports = StoreView;
},{"./../components/DOM":6,"./../components/View":23,"./../components/oop/Class":28,"velocity-animate":54}],40:[function(require,module,exports){
var Framework = require('./app/components/Application');
var $ = require('./app/components/DOM');

var PreLoader = require('./app/views/PreloaderView');
var Nav = require('./app/components/Nav');
var HomeView = require('./app/views/HomeView');
var HistoryView = require('./app/views/HistoryView');
var HistorySectionView = require('./app/views/HistorySectionView');
var PlayersView = require('./app/views/PlayersView');
var StoreView = require('./app/views/StoreView');
var BlogPostView = require('./app/views/BlogPostView');
var ContactView = require('./app/views/ContactView');
var GenericView = require('./app/views/GenericView');

var Device = require('./app/components/Device');

(function() {

	var nav = new Nav();

	var app = Framework({
		autoResize: true,
		overlap: !Device.system.touch,
		initSection: PreLoader,
		onRoute: nav.animateOut.bind( nav ),
		routes: {
			'/': HomeView,
			'/history': HistoryView,
			'/history/:id': HistorySectionView,
			'/players': PlayersView,
			'/about': GenericView,
			'/membership': GenericView,
			'/store': StoreView,
			'/news-and-events': GenericView,
			'/news-and-events/:id': BlogPostView,
			'/contact': GenericView
		}
	});

	//- kickitoff
	var exp = window && Device.system.pushstate && window.innerWidth > 767;

	if( exp ) {

		window.Stage = $.select('#stage')[ 0 ];
		app.init();

		if( Device.system.touch ) {

			document.addEventListener('touchmove', function(e) {

				e.preventDefault();
			});
		}
	} else {

		window.location = '/fallback';
	}
})();
},{"./app/components/Application":3,"./app/components/DOM":6,"./app/components/Device":7,"./app/components/Nav":13,"./app/views/BlogPostView":29,"./app/views/ContactView":30,"./app/views/GenericView":31,"./app/views/HistorySectionView":32,"./app/views/HistoryView":33,"./app/views/HomeView":34,"./app/views/PlayersView":37,"./app/views/PreloaderView":38,"./app/views/StoreView":39}],41:[function(require,module,exports){
/*!
  * Bonzo: DOM Utility (c) Dustin Diaz 2012
  * https://github.com/ded/bonzo
  * License MIT
  */
(function (name, context, definition) {
  if (typeof module != 'undefined' && module.exports) module.exports = definition()
  else if (typeof define == 'function' && define.amd) define(definition)
  else context[name] = definition()
})('bonzo', this, function() {
  var win = window
    , doc = win.document
    , html = doc.documentElement
    , parentNode = 'parentNode'
    , specialAttributes = /^(checked|value|selected|disabled)$/i
      // tags that we have trouble inserting *into*
    , specialTags = /^(select|fieldset|table|tbody|tfoot|td|tr|colgroup)$/i
    , simpleScriptTagRe = /\s*<script +src=['"]([^'"]+)['"]>/
    , table = ['<table>', '</table>', 1]
    , td = ['<table><tbody><tr>', '</tr></tbody></table>', 3]
    , option = ['<select>', '</select>', 1]
    , noscope = ['_', '', 0, 1]
    , tagMap = { // tags that we have trouble *inserting*
          thead: table, tbody: table, tfoot: table, colgroup: table, caption: table
        , tr: ['<table><tbody>', '</tbody></table>', 2]
        , th: td , td: td
        , col: ['<table><colgroup>', '</colgroup></table>', 2]
        , fieldset: ['<form>', '</form>', 1]
        , legend: ['<form><fieldset>', '</fieldset></form>', 2]
        , option: option, optgroup: option
        , script: noscope, style: noscope, link: noscope, param: noscope, base: noscope
      }
    , stateAttributes = /^(checked|selected|disabled)$/
    , hasClass, addClass, removeClass
    , uidMap = {}
    , uuids = 0
    , digit = /^-?[\d\.]+$/
    , dattr = /^data-(.+)$/
    , px = 'px'
    , setAttribute = 'setAttribute'
    , getAttribute = 'getAttribute'
    , features = function() {
        var e = doc.createElement('p')
        return {
          transform: function () {
            var props = ['transform', 'webkitTransform', 'MozTransform', 'OTransform', 'msTransform'], i
            for (i = 0; i < props.length; i++) {
              if (props[i] in e.style) return props[i]
            }
          }()
        , classList: 'classList' in e
        }
      }()
    , whitespaceRegex = /\s+/
    , toString = String.prototype.toString
    , unitless = { lineHeight: 1, zoom: 1, zIndex: 1, opacity: 1, boxFlex: 1, WebkitBoxFlex: 1, MozBoxFlex: 1 }
    , query = doc.querySelectorAll && function (selector) { return doc.querySelectorAll(selector) }


  function getStyle(el, property) {
    var value = null
      , computed = doc.defaultView.getComputedStyle(el, '')
    computed && (value = computed[property])
    return el.style[property] || value
  }


  function isNode(node) {
    return node && node.nodeName && (node.nodeType == 1 || node.nodeType == 11)
  }


  function normalize(node, host, clone) {
    var i, l, ret
    if (typeof node == 'string') return bonzo.create(node)
    if (isNode(node)) node = [ node ]
    if (clone) {
      ret = [] // don't change original array
      for (i = 0, l = node.length; i < l; i++) ret[i] = cloneNode(host, node[i])
      return ret
    }
    return node
  }

  /**
   * @param {string} c a class name to test
   * @return {boolean}
   */
  function classReg(c) {
    return new RegExp('(^|\\s+)' + c + '(\\s+|$)')
  }


  /**
   * @param {Bonzo|Array} ar
   * @param {function(Object, number, (Bonzo|Array))} fn
   * @param {Object=} opt_scope
   * @param {boolean=} opt_rev
   * @return {Bonzo|Array}
   */
  function each(ar, fn, opt_scope, opt_rev) {
    var ind, i = 0, l = ar.length
    for (; i < l; i++) {
      ind = opt_rev ? ar.length - i - 1 : i
      fn.call(opt_scope || ar[ind], ar[ind], ind, ar)
    }
    return ar
  }


  /**
   * @param {Bonzo|Array} ar
   * @param {function(Object, number, (Bonzo|Array))} fn
   * @param {Object=} opt_scope
   * @return {Bonzo|Array}
   */
  function deepEach(ar, fn, opt_scope) {
    for (var i = 0, l = ar.length; i < l; i++) {
      if (isNode(ar[i])) {
        deepEach(ar[i].childNodes, fn, opt_scope)
        fn.call(opt_scope || ar[i], ar[i], i, ar)
      }
    }
    return ar
  }


  /**
   * @param {string} s
   * @return {string}
   */
  function camelize(s) {
    return s.replace(/-(.)/g, function (m, m1) {
      return m1.toUpperCase()
    })
  }


  /**
   * @param {string} s
   * @return {string}
   */
  function decamelize(s) {
    return s ? s.replace(/([a-z])([A-Z])/g, '$1-$2').toLowerCase() : s
  }


  /**
   * @param {Element} el
   * @return {*}
   */
  function data(el) {
    el[getAttribute]('data-node-uid') || el[setAttribute]('data-node-uid', ++uuids)
    var uid = el[getAttribute]('data-node-uid')
    return uidMap[uid] || (uidMap[uid] = {})
  }


  /**
   * removes the data associated with an element
   * @param {Element} el
   */
  function clearData(el) {
    var uid = el[getAttribute]('data-node-uid')
    if (uid) delete uidMap[uid]
  }


  function dataValue(d) {
    var f
    try {
      return (d === null || d === undefined) ? undefined :
        d === 'true' ? true :
          d === 'false' ? false :
            d === 'null' ? null :
              (f = parseFloat(d)) == d ? f : d;
    } catch(e) {}
    return undefined
  }


  /**
   * @param {Bonzo|Array} ar
   * @param {function(Object, number, (Bonzo|Array))} fn
   * @param {Object=} opt_scope
   * @return {boolean} whether `some`thing was found
   */
  function some(ar, fn, opt_scope) {
    for (var i = 0, j = ar.length; i < j; ++i) if (fn.call(opt_scope || null, ar[i], i, ar)) return true
    return false
  }


  /**
   * this could be a giant enum of CSS properties
   * but in favor of file size sans-closure deadcode optimizations
   * we're just asking for any ol string
   * then it gets transformed into the appropriate style property for JS access
   * @param {string} p
   * @return {string}
   */
  function styleProperty(p) {
      (p == 'transform' && (p = features.transform)) ||
        (/^transform-?[Oo]rigin$/.test(p) && (p = features.transform + 'Origin'))
      return p ? camelize(p) : null
  }

  // this insert method is intense
  function insert(target, host, fn, rev) {
    var i = 0, self = host || this, r = []
      // target nodes could be a css selector if it's a string and a selector engine is present
      // otherwise, just use target
      , nodes = query && typeof target == 'string' && target.charAt(0) != '<' ? query(target) : target
    // normalize each node in case it's still a string and we need to create nodes on the fly
    each(normalize(nodes), function (t, j) {
      each(self, function (el) {
        fn(t, r[i++] = j > 0 ? cloneNode(self, el) : el)
      }, null, rev)
    }, this, rev)
    self.length = i
    each(r, function (e) {
      self[--i] = e
    }, null, !rev)
    return self
  }


  /**
   * sets an element to an explicit x/y position on the page
   * @param {Element} el
   * @param {?number} x
   * @param {?number} y
   */
  function xy(el, x, y) {
    var $el = bonzo(el)
      , style = $el.css('position')
      , offset = $el.offset()
      , rel = 'relative'
      , isRel = style == rel
      , delta = [parseInt($el.css('left'), 10), parseInt($el.css('top'), 10)]

    if (style == 'static') {
      $el.css('position', rel)
      style = rel
    }

    isNaN(delta[0]) && (delta[0] = isRel ? 0 : el.offsetLeft)
    isNaN(delta[1]) && (delta[1] = isRel ? 0 : el.offsetTop)

    x != null && (el.style.left = x - offset.left + delta[0] + px)
    y != null && (el.style.top = y - offset.top + delta[1] + px)

  }

  // classList support for class management
  // altho to be fair, the api sucks because it won't accept multiple classes at once
  if (features.classList) {
    hasClass = function (el, c) {
      return el.classList.contains(c)
    }
    addClass = function (el, c) {
      el.classList.add(c)
    }
    removeClass = function (el, c) {
      el.classList.remove(c)
    }
  }
  else {
    hasClass = function (el, c) {
      return classReg(c).test(el.className)
    }
    addClass = function (el, c) {
      el.className = (el.className + ' ' + c).trim()
    }
    removeClass = function (el, c) {
      el.className = (el.className.replace(classReg(c), ' ')).trim()
    }
  }


  /**
   * this allows method calling for setting values
   *
   * @example
   * bonzo(elements).css('color', function (el) {
   *   return el.getAttribute('data-original-color')
   * })
   *
   * @param {Element} el
   * @param {function (Element)|string} v
   * @return {string}
   */
  function setter(el, v) {
    return typeof v == 'function' ? v.call(el, el) : v
  }

  function scroll(x, y, type) {
    var el = this[0]
    if (!el) return this
    if (x == null && y == null) {
      return (isBody(el) ? getWindowScroll() : { x: el.scrollLeft, y: el.scrollTop })[type]
    }
    if (isBody(el)) {
      win.scrollTo(x, y)
    } else {
      x != null && (el.scrollLeft = x)
      y != null && (el.scrollTop = y)
    }
    return this
  }

  /**
   * @constructor
   * @param {Array.<Element>|Element|Node|string} elements
   */
  function Bonzo(elements) {
    this.length = 0
    if (elements) {
      elements = typeof elements !== 'string' &&
        !elements.nodeType &&
        typeof elements.length !== 'undefined' ?
          elements :
          [elements]
      this.length = elements.length
      for (var i = 0; i < elements.length; i++) this[i] = elements[i]
    }
  }

  Bonzo.prototype = {

      /**
       * @param {number} index
       * @return {Element|Node}
       */
      get: function (index) {
        return this[index] || null
      }

      // itetators
      /**
       * @param {function(Element|Node)} fn
       * @param {Object=} opt_scope
       * @return {Bonzo}
       */
    , each: function (fn, opt_scope) {
        return each(this, fn, opt_scope)
      }

      /**
       * @param {Function} fn
       * @param {Object=} opt_scope
       * @return {Bonzo}
       */
    , deepEach: function (fn, opt_scope) {
        return deepEach(this, fn, opt_scope)
      }


      /**
       * @param {Function} fn
       * @param {Function=} opt_reject
       * @return {Array}
       */
    , map: function (fn, opt_reject) {
        var m = [], n, i
        for (i = 0; i < this.length; i++) {
          n = fn.call(this, this[i], i)
          opt_reject ? (opt_reject(n) && m.push(n)) : m.push(n)
        }
        return m
      }

    // text and html inserters!

    /**
     * @param {string} h the HTML to insert
     * @param {boolean=} opt_text whether to set or get text content
     * @return {Bonzo|string}
     */
    , html: function (h, opt_text) {
        var method = opt_text
              ? 'textContent'
              : 'innerHTML'
          , that = this
          , append = function (el, i) {
              each(normalize(h, that, i), function (node) {
                el.appendChild(node)
              })
            }
          , updateElement = function (el, i) {
              try {
                if (opt_text || (typeof h == 'string' && !specialTags.test(el.tagName))) {
                  return el[method] = h
                }
              } catch (e) {}
              append(el, i)
            }
        return typeof h != 'undefined'
          ? this.empty().each(updateElement)
          : this[0] ? this[0][method] : ''
      }

      /**
       * @param {string=} opt_text the text to set, otherwise this is a getter
       * @return {Bonzo|string}
       */
    , text: function (opt_text) {
        return this.html(opt_text, true)
      }

      // more related insertion methods

      /**
       * @param {Bonzo|string|Element|Array} node
       * @return {Bonzo}
       */
    , append: function (node) {
        var that = this
        return this.each(function (el, i) {
          each(normalize(node, that, i), function (i) {
            el.appendChild(i)
          })
        })
      }


      /**
       * @param {Bonzo|string|Element|Array} node
       * @return {Bonzo}
       */
    , prepend: function (node) {
        var that = this
        return this.each(function (el, i) {
          var first = el.firstChild
          each(normalize(node, that, i), function (i) {
            el.insertBefore(i, first)
          })
        })
      }


      /**
       * @param {Bonzo|string|Element|Array} target the location for which you'll insert your new content
       * @param {Object=} opt_host an optional host scope (primarily used when integrated with Ender)
       * @return {Bonzo}
       */
    , appendTo: function (target, opt_host) {
        return insert.call(this, target, opt_host, function (t, el) {
          t.appendChild(el)
        })
      }


      /**
       * @param {Bonzo|string|Element|Array} target the location for which you'll insert your new content
       * @param {Object=} opt_host an optional host scope (primarily used when integrated with Ender)
       * @return {Bonzo}
       */
    , prependTo: function (target, opt_host) {
        return insert.call(this, target, opt_host, function (t, el) {
          t.insertBefore(el, t.firstChild)
        }, 1)
      }


      /**
       * @param {Bonzo|string|Element|Array} node
       * @return {Bonzo}
       */
    , before: function (node) {
        var that = this
        return this.each(function (el, i) {
          each(normalize(node, that, i), function (i) {
            el[parentNode].insertBefore(i, el)
          })
        })
      }


      /**
       * @param {Bonzo|string|Element|Array} node
       * @return {Bonzo}
       */
    , after: function (node) {
        var that = this
        return this.each(function (el, i) {
          each(normalize(node, that, i), function (i) {
            el[parentNode].insertBefore(i, el.nextSibling)
          }, null, 1)
        })
      }


      /**
       * @param {Bonzo|string|Element|Array} target the location for which you'll insert your new content
       * @param {Object=} opt_host an optional host scope (primarily used when integrated with Ender)
       * @return {Bonzo}
       */
    , insertBefore: function (target, opt_host) {
        return insert.call(this, target, opt_host, function (t, el) {
          t[parentNode].insertBefore(el, t)
        })
      }


      /**
       * @param {Bonzo|string|Element|Array} target the location for which you'll insert your new content
       * @param {Object=} opt_host an optional host scope (primarily used when integrated with Ender)
       * @return {Bonzo}
       */
    , insertAfter: function (target, opt_host) {
        return insert.call(this, target, opt_host, function (t, el) {
          var sibling = t.nextSibling
          sibling ?
            t[parentNode].insertBefore(el, sibling) :
            t[parentNode].appendChild(el)
        }, 1)
      }


      /**
       * @param {Bonzo|string|Element|Array} node
       * @return {Bonzo}
       */
    , replaceWith: function (node) {
        var that = this
        return this.each(function (el, i) {
          each(normalize(node, that, i), function (i) {
            el[parentNode] && el[parentNode].replaceChild(i, el)
          })
        })
      }

      /**
       * @param {Object=} opt_host an optional host scope (primarily used when integrated with Ender)
       * @return {Bonzo}
       */
    , clone: function (opt_host) {
        var ret = [] // don't change original array
          , l, i
        for (i = 0, l = this.length; i < l; i++) ret[i] = cloneNode(opt_host || this, this[i])
        return bonzo(ret)
      }

      // class management

      /**
       * @param {string} c
       * @return {Bonzo}
       */
    , addClass: function (c) {
        c = toString.call(c).split(whitespaceRegex)
        return this.each(function (el) {
          // we `each` here so you can do $el.addClass('foo bar')
          each(c, function (c) {
            if (c && !hasClass(el, setter(el, c)))
              addClass(el, setter(el, c))
          })
        })
      }


      /**
       * @param {string} c
       * @return {Bonzo}
       */
    , removeClass: function (c) {
        c = toString.call(c).split(whitespaceRegex)
        return this.each(function (el) {
          each(c, function (c) {
            if (c && hasClass(el, setter(el, c)))
              removeClass(el, setter(el, c))
          })
        })
      }


      /**
       * @param {string} c
       * @return {boolean}
       */
    , hasClass: function (c) {
        c = toString.call(c).split(whitespaceRegex)
        return some(this, function (el) {
          return some(c, function (c) {
            return c && hasClass(el, c)
          })
        })
      }


      /**
       * @param {string} c classname to toggle
       * @param {boolean=} opt_condition whether to add or remove the class straight away
       * @return {Bonzo}
       */
    , toggleClass: function (c, opt_condition) {
        c = toString.call(c).split(whitespaceRegex)
        return this.each(function (el) {
          each(c, function (c) {
            if (c) {
              typeof opt_condition !== 'undefined' ?
                opt_condition ? !hasClass(el, c) && addClass(el, c) : removeClass(el, c) :
                hasClass(el, c) ? removeClass(el, c) : addClass(el, c)
            }
          })
        })
      }

      // display togglers

      /**
       * @param {string=} opt_type useful to set back to anything other than an empty string
       * @return {Bonzo}
       */
    , show: function (opt_type) {
        opt_type = typeof opt_type == 'string' ? opt_type : ''
        return this.each(function (el) {
          el.style.display = opt_type
        })
      }


      /**
       * @return {Bonzo}
       */
    , hide: function () {
        return this.each(function (el) {
          el.style.display = 'none'
        })
      }


      /**
       * @param {Function=} opt_callback
       * @param {string=} opt_type
       * @return {Bonzo}
       */
    , toggle: function (opt_callback, opt_type) {
        opt_type = typeof opt_type == 'string' ? opt_type : '';
        typeof opt_callback != 'function' && (opt_callback = null)
        return this.each(function (el) {
          el.style.display = (el.offsetWidth || el.offsetHeight) ? 'none' : opt_type;
          opt_callback && opt_callback.call(el)
        })
      }


      // DOM Walkers & getters

      /**
       * @return {Element|Node}
       */
    , first: function () {
        return bonzo(this.length ? this[0] : [])
      }


      /**
       * @return {Element|Node}
       */
    , last: function () {
        return bonzo(this.length ? this[this.length - 1] : [])
      }


      /**
       * @return {Element|Node}
       */
    , next: function () {
        return this.related('nextSibling')
      }


      /**
       * @return {Element|Node}
       */
    , previous: function () {
        return this.related('previousSibling')
      }


      /**
       * @return {Element|Node}
       */
    , parent: function() {
        return this.related(parentNode)
      }


      /**
       * @private
       * @param {string} method the directional DOM method
       * @return {Element|Node}
       */
    , related: function (method) {
        return bonzo(this.map(
          function (el) {
            el = el[method]
            while (el && el.nodeType !== 1) {
              el = el[method]
            }
            return el || 0
          },
          function (el) {
            return el
          }
        ))
      }


      /**
       * @return {Bonzo}
       */
    , focus: function () {
        this.length && this[0].focus()
        return this
      }


      /**
       * @return {Bonzo}
       */
    , blur: function () {
        this.length && this[0].blur()
        return this
      }

      // style getter setter & related methods

      /**
       * @param {Object|string} o
       * @param {string=} opt_v
       * @return {Bonzo|string}
       */
    , css: function (o, opt_v) {
        var p, iter = o
        // is this a request for just getting a style?
        if (opt_v === undefined && typeof o == 'string') {
          // repurpose 'v'
          opt_v = this[0]
          if (!opt_v) return null
          if (opt_v === doc || opt_v === win) {
            p = (opt_v === doc) ? bonzo.doc() : bonzo.viewport()
            return o == 'width' ? p.width : o == 'height' ? p.height : ''
          }
          return (o = styleProperty(o)) ? getStyle(opt_v, o) : null
        }

        if (typeof o == 'string') {
          iter = {}
          iter[o] = opt_v
        }

        function fn(el, p, v) {
          for (var k in iter) {
            if (iter.hasOwnProperty(k)) {
              v = iter[k];
              // change "5" to "5px" - unless you're line-height, which is allowed
              (p = styleProperty(k)) && digit.test(v) && !(p in unitless) && (v += px)
              try { el.style[p] = setter(el, v) } catch(e) {}
            }
          }
        }
        return this.each(fn)
      }


      /**
       * @param {number=} opt_x
       * @param {number=} opt_y
       * @return {Bonzo|number}
       */
    , offset: function (opt_x, opt_y) {
        if (opt_x && typeof opt_x == 'object' && (typeof opt_x.top == 'number' || typeof opt_x.left == 'number')) {
          return this.each(function (el) {
            xy(el, opt_x.left, opt_x.top)
          })
        } else if (typeof opt_x == 'number' || typeof opt_y == 'number') {
          return this.each(function (el) {
            xy(el, opt_x, opt_y)
          })
        }
        if (!this[0]) return {
            top: 0
          , left: 0
          , height: 0
          , width: 0
        }
        var el = this[0]
          , de = el.ownerDocument.documentElement
          , bcr = el.getBoundingClientRect()
          , scroll = getWindowScroll()
          , width = el.offsetWidth
          , height = el.offsetHeight
          , top = bcr.top + scroll.y - Math.max(0, de && de.clientTop, doc.body.clientTop)
          , left = bcr.left + scroll.x - Math.max(0, de && de.clientLeft, doc.body.clientLeft)

        return {
            top: top
          , left: left
          , height: height
          , width: width
        }
      }


      /**
       * @return {number}
       */
    , dim: function () {
        if (!this.length) return { height: 0, width: 0 }
        var el = this[0]
          , de = el.nodeType == 9 && el.documentElement // document
          , orig = !de && !!el.style && !el.offsetWidth && !el.offsetHeight ?
             // el isn't visible, can't be measured properly, so fix that
             function (t) {
               var s = {
                   position: el.style.position || ''
                 , visibility: el.style.visibility || ''
                 , display: el.style.display || ''
               }
               t.first().css({
                   position: 'absolute'
                 , visibility: 'hidden'
                 , display: 'block'
               })
               return s
            }(this) : null
          , width = de
              ? Math.max(el.body.scrollWidth, el.body.offsetWidth, de.scrollWidth, de.offsetWidth, de.clientWidth)
              : el.offsetWidth
          , height = de
              ? Math.max(el.body.scrollHeight, el.body.offsetHeight, de.scrollHeight, de.offsetHeight, de.clientHeight)
              : el.offsetHeight

        orig && this.first().css(orig)
        return {
            height: height
          , width: width
        }
      }

      // attributes are hard. go shopping

      /**
       * @param {string} k an attribute to get or set
       * @param {string=} opt_v the value to set
       * @return {Bonzo|string}
       */
    , attr: function (k, opt_v) {
        var el = this[0]
          , n

        if (typeof k != 'string' && !(k instanceof String)) {
          for (n in k) {
            k.hasOwnProperty(n) && this.attr(n, k[n])
          }
          return this
        }

        return typeof opt_v == 'undefined' ?
          !el ? null : specialAttributes.test(k) ?
            stateAttributes.test(k) && typeof el[k] == 'string' ?
              true : el[k] :  el[getAttribute](k) :
          this.each(function (el) {
            specialAttributes.test(k) ? (el[k] = setter(el, opt_v)) : el[setAttribute](k, setter(el, opt_v))
          })
      }


      /**
       * @param {string} k
       * @return {Bonzo}
       */
    , removeAttr: function (k) {
        return this.each(function (el) {
          stateAttributes.test(k) ? (el[k] = false) : el.removeAttribute(k)
        })
      }


      /**
       * @param {string=} opt_s
       * @return {Bonzo|string}
       */
    , val: function (s) {
        return (typeof s == 'string' || typeof s == 'number') ?
          this.attr('value', s) :
          this.length ? this[0].value : null
      }

      // use with care and knowledge. this data() method uses data attributes on the DOM nodes
      // to do this differently costs a lot more code. c'est la vie
      /**
       * @param {string|Object=} opt_k the key for which to get or set data
       * @param {Object=} opt_v
       * @return {Bonzo|Object}
       */
    , data: function (opt_k, opt_v) {
        var el = this[0], o, m
        if (typeof opt_v === 'undefined') {
          if (!el) return null
          o = data(el)
          if (typeof opt_k === 'undefined') {
            each(el.attributes, function (a) {
              (m = ('' + a.name).match(dattr)) && (o[camelize(m[1])] = dataValue(a.value))
            })
            return o
          } else {
            if (typeof o[opt_k] === 'undefined')
              o[opt_k] = dataValue(this.attr('data-' + decamelize(opt_k)))
            return o[opt_k]
          }
        } else {
          return this.each(function (el) { data(el)[opt_k] = opt_v })
        }
      }

      // DOM detachment & related

      /**
       * @return {Bonzo}
       */
    , remove: function () {
        this.deepEach(clearData)
        return this.detach()
      }


      /**
       * @return {Bonzo}
       */
    , empty: function () {
        return this.each(function (el) {
          deepEach(el.childNodes, clearData)

          while (el.firstChild) {
            el.removeChild(el.firstChild)
          }
        })
      }


      /**
       * @return {Bonzo}
       */
    , detach: function () {
        return this.each(function (el) {
          el[parentNode] && el[parentNode].removeChild(el)
        })
      }

      // who uses a mouse anyway? oh right.

      /**
       * @param {number} y
       */
    , scrollTop: function (y) {
        return scroll.call(this, null, y, 'y')
      }


      /**
       * @param {number} x
       */
    , scrollLeft: function (x) {
        return scroll.call(this, x, null, 'x')
      }

  }


  function cloneNode(host, el) {
    var c = el.cloneNode(true)
      , cloneElems
      , elElems
      , i

    // check for existence of an event cloner
    // preferably https://github.com/fat/bean
    // otherwise Bonzo won't do this for you
    if (host.$ && typeof host.cloneEvents == 'function') {
      host.$(c).cloneEvents(el)

      // clone events from every child node
      cloneElems = host.$(c).find('*')
      elElems = host.$(el).find('*')

      for (i = 0; i < elElems.length; i++)
        host.$(cloneElems[i]).cloneEvents(elElems[i])
    }
    return c
  }

  function isBody(element) {
    return element === win || (/^(?:body|html)$/i).test(element.tagName)
  }

  function getWindowScroll() {
    return { x: win.pageXOffset || html.scrollLeft, y: win.pageYOffset || html.scrollTop }
  }

  function createScriptFromHtml(html) {
    var scriptEl = document.createElement('script')
      , matches = html.match(simpleScriptTagRe)
    scriptEl.src = matches[1]
    return scriptEl
  }

  /**
   * @param {Array.<Element>|Element|Node|string} els
   * @return {Bonzo}
   */
  function bonzo(els) {
    return new Bonzo(els)
  }

  bonzo.setQueryEngine = function (q) {
    query = q;
    delete bonzo.setQueryEngine
  }

  bonzo.aug = function (o, target) {
    // for those standalone bonzo users. this love is for you.
    for (var k in o) {
      o.hasOwnProperty(k) && ((target || Bonzo.prototype)[k] = o[k])
    }
  }

  bonzo.create = function (node) {
    // hhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhh
    return typeof node == 'string' && node !== '' ?
      function () {
        if (simpleScriptTagRe.test(node)) return [createScriptFromHtml(node)]
        var tag = node.match(/^\s*<([^\s>]+)/)
          , el = doc.createElement('div')
          , els = []
          , p = tag ? tagMap[tag[1].toLowerCase()] : null
          , dep = p ? p[2] + 1 : 1
          , ns = p && p[3]
          , pn = parentNode

        el.innerHTML = p ? (p[0] + node + p[1]) : node
        while (dep--) el = el.firstChild
        // for IE NoScope, we may insert cruft at the begining just to get it to work
        if (ns && el && el.nodeType !== 1) el = el.nextSibling
        do {
          if (!tag || el.nodeType == 1) {
            els.push(el)
          }
        } while (el = el.nextSibling)
        // IE < 9 gives us a parentNode which messes up insert() check for cloning
        // `dep` > 1 can also cause problems with the insert() check (must do this last)
        each(els, function(el) { el[pn] && el[pn].removeChild(el) })
        return els
      }() : isNode(node) ? [node.cloneNode(true)] : []
  }

  bonzo.doc = function () {
    var vp = bonzo.viewport()
    return {
        width: Math.max(doc.body.scrollWidth, html.scrollWidth, vp.width)
      , height: Math.max(doc.body.scrollHeight, html.scrollHeight, vp.height)
    }
  }

  bonzo.firstChild = function (el) {
    for (var c = el.childNodes, i = 0, j = (c && c.length) || 0, e; i < j; i++) {
      if (c[i].nodeType === 1) e = c[j = i]
    }
    return e
  }

  bonzo.viewport = function () {
    return {
        width: win.innerWidth
      , height: win.innerHeight
    }
  }

  bonzo.isAncestor = 'compareDocumentPosition' in html ?
    function (container, element) {
      return (container.compareDocumentPosition(element) & 16) == 16
    } :
    function (container, element) {
      return container !== element && container.contains(element);
    }

  return bonzo
}); // the only line we care about using a semi-colon. placed here for concatenation tools

},{}],42:[function(require,module,exports){
module.exports = on;
module.exports.on = on;
module.exports.off = off;

function on (element, event, callback, capture) {
  !element.addEventListener && (event = 'on' + event);
  (element.addEventListener || element.attachEvent).call(element, event, callback, capture);
  return callback;
}

function off (element, event, callback, capture) {
  !element.removeEventListener && (event = 'on' + event);
  (element.removeEventListener || element.detachEvent).call(element, event, callback, capture);
  return callback;
}

},{}],43:[function(require,module,exports){
// Copyright Joyent, Inc. and other Node contributors.
//
// Permission is hereby granted, free of charge, to any person obtaining a
// copy of this software and associated documentation files (the
// "Software"), to deal in the Software without restriction, including
// without limitation the rights to use, copy, modify, merge, publish,
// distribute, sublicense, and/or sell copies of the Software, and to permit
// persons to whom the Software is furnished to do so, subject to the
// following conditions:
//
// The above copyright notice and this permission notice shall be included
// in all copies or substantial portions of the Software.
//
// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS
// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN
// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,
// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR
// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE
// USE OR OTHER DEALINGS IN THE SOFTWARE.

var objectCreate = Object.create || objectCreatePolyfill
var objectKeys = Object.keys || objectKeysPolyfill
var bind = Function.prototype.bind || functionBindPolyfill

function EventEmitter() {
  if (!this._events || !Object.prototype.hasOwnProperty.call(this, '_events')) {
    this._events = objectCreate(null);
    this._eventsCount = 0;
  }

  this._maxListeners = this._maxListeners || undefined;
}
module.exports = EventEmitter;

// Backwards-compat with node 0.10.x
EventEmitter.EventEmitter = EventEmitter;

EventEmitter.prototype._events = undefined;
EventEmitter.prototype._maxListeners = undefined;

// By default EventEmitters will print a warning if more than 10 listeners are
// added to it. This is a useful default which helps finding memory leaks.
var defaultMaxListeners = 10;

var hasDefineProperty;
try {
  var o = {};
  if (Object.defineProperty) Object.defineProperty(o, 'x', { value: 0 });
  hasDefineProperty = o.x === 0;
} catch (err) { hasDefineProperty = false }
if (hasDefineProperty) {
  Object.defineProperty(EventEmitter, 'defaultMaxListeners', {
    enumerable: true,
    get: function() {
      return defaultMaxListeners;
    },
    set: function(arg) {
      // check whether the input is a positive number (whose value is zero or
      // greater and not a NaN).
      if (typeof arg !== 'number' || arg < 0 || arg !== arg)
        throw new TypeError('"defaultMaxListeners" must be a positive number');
      defaultMaxListeners = arg;
    }
  });
} else {
  EventEmitter.defaultMaxListeners = defaultMaxListeners;
}

// Obviously not all Emitters should be limited to 10. This function allows
// that to be increased. Set to zero for unlimited.
EventEmitter.prototype.setMaxListeners = function setMaxListeners(n) {
  if (typeof n !== 'number' || n < 0 || isNaN(n))
    throw new TypeError('"n" argument must be a positive number');
  this._maxListeners = n;
  return this;
};

function $getMaxListeners(that) {
  if (that._maxListeners === undefined)
    return EventEmitter.defaultMaxListeners;
  return that._maxListeners;
}

EventEmitter.prototype.getMaxListeners = function getMaxListeners() {
  return $getMaxListeners(this);
};

// These standalone emit* functions are used to optimize calling of event
// handlers for fast cases because emit() itself often has a variable number of
// arguments and can be deoptimized because of that. These functions always have
// the same number of arguments and thus do not get deoptimized, so the code
// inside them can execute faster.
function emitNone(handler, isFn, self) {
  if (isFn)
    handler.call(self);
  else {
    var len = handler.length;
    var listeners = arrayClone(handler, len);
    for (var i = 0; i < len; ++i)
      listeners[i].call(self);
  }
}
function emitOne(handler, isFn, self, arg1) {
  if (isFn)
    handler.call(self, arg1);
  else {
    var len = handler.length;
    var listeners = arrayClone(handler, len);
    for (var i = 0; i < len; ++i)
      listeners[i].call(self, arg1);
  }
}
function emitTwo(handler, isFn, self, arg1, arg2) {
  if (isFn)
    handler.call(self, arg1, arg2);
  else {
    var len = handler.length;
    var listeners = arrayClone(handler, len);
    for (var i = 0; i < len; ++i)
      listeners[i].call(self, arg1, arg2);
  }
}
function emitThree(handler, isFn, self, arg1, arg2, arg3) {
  if (isFn)
    handler.call(self, arg1, arg2, arg3);
  else {
    var len = handler.length;
    var listeners = arrayClone(handler, len);
    for (var i = 0; i < len; ++i)
      listeners[i].call(self, arg1, arg2, arg3);
  }
}

function emitMany(handler, isFn, self, args) {
  if (isFn)
    handler.apply(self, args);
  else {
    var len = handler.length;
    var listeners = arrayClone(handler, len);
    for (var i = 0; i < len; ++i)
      listeners[i].apply(self, args);
  }
}

EventEmitter.prototype.emit = function emit(type) {
  var er, handler, len, args, i, events;
  var doError = (type === 'error');

  events = this._events;
  if (events)
    doError = (doError && events.error == null);
  else if (!doError)
    return false;

  // If there is no 'error' event listener then throw.
  if (doError) {
    if (arguments.length > 1)
      er = arguments[1];
    if (er instanceof Error) {
      throw er; // Unhandled 'error' event
    } else {
      // At least give some kind of context to the user
      var err = new Error('Unhandled "error" event. (' + er + ')');
      err.context = er;
      throw err;
    }
    return false;
  }

  handler = events[type];

  if (!handler)
    return false;

  var isFn = typeof handler === 'function';
  len = arguments.length;
  switch (len) {
      // fast cases
    case 1:
      emitNone(handler, isFn, this);
      break;
    case 2:
      emitOne(handler, isFn, this, arguments[1]);
      break;
    case 3:
      emitTwo(handler, isFn, this, arguments[1], arguments[2]);
      break;
    case 4:
      emitThree(handler, isFn, this, arguments[1], arguments[2], arguments[3]);
      break;
      // slower
    default:
      args = new Array(len - 1);
      for (i = 1; i < len; i++)
        args[i - 1] = arguments[i];
      emitMany(handler, isFn, this, args);
  }

  return true;
};

function _addListener(target, type, listener, prepend) {
  var m;
  var events;
  var existing;

  if (typeof listener !== 'function')
    throw new TypeError('"listener" argument must be a function');

  events = target._events;
  if (!events) {
    events = target._events = objectCreate(null);
    target._eventsCount = 0;
  } else {
    // To avoid recursion in the case that type === "newListener"! Before
    // adding it to the listeners, first emit "newListener".
    if (events.newListener) {
      target.emit('newListener', type,
          listener.listener ? listener.listener : listener);

      // Re-assign `events` because a newListener handler could have caused the
      // this._events to be assigned to a new object
      events = target._events;
    }
    existing = events[type];
  }

  if (!existing) {
    // Optimize the case of one listener. Don't need the extra array object.
    existing = events[type] = listener;
    ++target._eventsCount;
  } else {
    if (typeof existing === 'function') {
      // Adding the second element, need to change to array.
      existing = events[type] =
          prepend ? [listener, existing] : [existing, listener];
    } else {
      // If we've already got an array, just append.
      if (prepend) {
        existing.unshift(listener);
      } else {
        existing.push(listener);
      }
    }

    // Check for listener leak
    if (!existing.warned) {
      m = $getMaxListeners(target);
      if (m && m > 0 && existing.length > m) {
        existing.warned = true;
        var w = new Error('Possible EventEmitter memory leak detected. ' +
            existing.length + ' "' + String(type) + '" listeners ' +
            'added. Use emitter.setMaxListeners() to ' +
            'increase limit.');
        w.name = 'MaxListenersExceededWarning';
        w.emitter = target;
        w.type = type;
        w.count = existing.length;
        if (typeof console === 'object' && console.warn) {
          console.warn('%s: %s', w.name, w.message);
        }
      }
    }
  }

  return target;
}

EventEmitter.prototype.addListener = function addListener(type, listener) {
  return _addListener(this, type, listener, false);
};

EventEmitter.prototype.on = EventEmitter.prototype.addListener;

EventEmitter.prototype.prependListener =
    function prependListener(type, listener) {
      return _addListener(this, type, listener, true);
    };

function onceWrapper() {
  if (!this.fired) {
    this.target.removeListener(this.type, this.wrapFn);
    this.fired = true;
    switch (arguments.length) {
      case 0:
        return this.listener.call(this.target);
      case 1:
        return this.listener.call(this.target, arguments[0]);
      case 2:
        return this.listener.call(this.target, arguments[0], arguments[1]);
      case 3:
        return this.listener.call(this.target, arguments[0], arguments[1],
            arguments[2]);
      default:
        var args = new Array(arguments.length);
        for (var i = 0; i < args.length; ++i)
          args[i] = arguments[i];
        this.listener.apply(this.target, args);
    }
  }
}

function _onceWrap(target, type, listener) {
  var state = { fired: false, wrapFn: undefined, target: target, type: type, listener: listener };
  var wrapped = bind.call(onceWrapper, state);
  wrapped.listener = listener;
  state.wrapFn = wrapped;
  return wrapped;
}

EventEmitter.prototype.once = function once(type, listener) {
  if (typeof listener !== 'function')
    throw new TypeError('"listener" argument must be a function');
  this.on(type, _onceWrap(this, type, listener));
  return this;
};

EventEmitter.prototype.prependOnceListener =
    function prependOnceListener(type, listener) {
      if (typeof listener !== 'function')
        throw new TypeError('"listener" argument must be a function');
      this.prependListener(type, _onceWrap(this, type, listener));
      return this;
    };

// Emits a 'removeListener' event if and only if the listener was removed.
EventEmitter.prototype.removeListener =
    function removeListener(type, listener) {
      var list, events, position, i, originalListener;

      if (typeof listener !== 'function')
        throw new TypeError('"listener" argument must be a function');

      events = this._events;
      if (!events)
        return this;

      list = events[type];
      if (!list)
        return this;

      if (list === listener || list.listener === listener) {
        if (--this._eventsCount === 0)
          this._events = objectCreate(null);
        else {
          delete events[type];
          if (events.removeListener)
            this.emit('removeListener', type, list.listener || listener);
        }
      } else if (typeof list !== 'function') {
        position = -1;

        for (i = list.length - 1; i >= 0; i--) {
          if (list[i] === listener || list[i].listener === listener) {
            originalListener = list[i].listener;
            position = i;
            break;
          }
        }

        if (position < 0)
          return this;

        if (position === 0)
          list.shift();
        else
          spliceOne(list, position);

        if (list.length === 1)
          events[type] = list[0];

        if (events.removeListener)
          this.emit('removeListener', type, originalListener || listener);
      }

      return this;
    };

EventEmitter.prototype.removeAllListeners =
    function removeAllListeners(type) {
      var listeners, events, i;

      events = this._events;
      if (!events)
        return this;

      // not listening for removeListener, no need to emit
      if (!events.removeListener) {
        if (arguments.length === 0) {
          this._events = objectCreate(null);
          this._eventsCount = 0;
        } else if (events[type]) {
          if (--this._eventsCount === 0)
            this._events = objectCreate(null);
          else
            delete events[type];
        }
        return this;
      }

      // emit removeListener for all listeners on all events
      if (arguments.length === 0) {
        var keys = objectKeys(events);
        var key;
        for (i = 0; i < keys.length; ++i) {
          key = keys[i];
          if (key === 'removeListener') continue;
          this.removeAllListeners(key);
        }
        this.removeAllListeners('removeListener');
        this._events = objectCreate(null);
        this._eventsCount = 0;
        return this;
      }

      listeners = events[type];

      if (typeof listeners === 'function') {
        this.removeListener(type, listeners);
      } else if (listeners) {
        // LIFO order
        for (i = listeners.length - 1; i >= 0; i--) {
          this.removeListener(type, listeners[i]);
        }
      }

      return this;
    };

EventEmitter.prototype.listeners = function listeners(type) {
  var evlistener;
  var ret;
  var events = this._events;

  if (!events)
    ret = [];
  else {
    evlistener = events[type];
    if (!evlistener)
      ret = [];
    else if (typeof evlistener === 'function')
      ret = [evlistener.listener || evlistener];
    else
      ret = unwrapListeners(evlistener);
  }

  return ret;
};

EventEmitter.listenerCount = function(emitter, type) {
  if (typeof emitter.listenerCount === 'function') {
    return emitter.listenerCount(type);
  } else {
    return listenerCount.call(emitter, type);
  }
};

EventEmitter.prototype.listenerCount = listenerCount;
function listenerCount(type) {
  var events = this._events;

  if (events) {
    var evlistener = events[type];

    if (typeof evlistener === 'function') {
      return 1;
    } else if (evlistener) {
      return evlistener.length;
    }
  }

  return 0;
}

EventEmitter.prototype.eventNames = function eventNames() {
  return this._eventsCount > 0 ? Reflect.ownKeys(this._events) : [];
};

// About 1.5x faster than the two-arg version of Array#splice().
function spliceOne(list, index) {
  for (var i = index, k = i + 1, n = list.length; k < n; i += 1, k += 1)
    list[i] = list[k];
  list.pop();
}

function arrayClone(arr, n) {
  var copy = new Array(n);
  for (var i = 0; i < n; ++i)
    copy[i] = arr[i];
  return copy;
}

function unwrapListeners(arr) {
  var ret = new Array(arr.length);
  for (var i = 0; i < ret.length; ++i) {
    ret[i] = arr[i].listener || arr[i];
  }
  return ret;
}

function objectCreatePolyfill(proto) {
  var F = function() {};
  F.prototype = proto;
  return new F;
}
function objectKeysPolyfill(obj) {
  var keys = [];
  for (var k in obj) if (Object.prototype.hasOwnProperty.call(obj, k)) {
    keys.push(k);
  }
  return k;
}
function functionBindPolyfill(context) {
  var fn = this;
  return function () {
    return fn.apply(context, arguments);
  };
}

},{}],44:[function(require,module,exports){
if (typeof Object.create === 'function') {
  // implementation from standard node.js 'util' module
  module.exports = function inherits(ctor, superCtor) {
    ctor.super_ = superCtor
    ctor.prototype = Object.create(superCtor.prototype, {
      constructor: {
        value: ctor,
        enumerable: false,
        writable: true,
        configurable: true
      }
    });
  };
} else {
  // old school shim for old browsers
  module.exports = function inherits(ctor, superCtor) {
    ctor.super_ = superCtor
    var TempCtor = function () {}
    TempCtor.prototype = superCtor.prototype
    ctor.prototype = new TempCtor()
    ctor.prototype.constructor = ctor
  }
}

},{}],45:[function(require,module,exports){
/*!
 * mustache.js - Logic-less {{mustache}} templates with JavaScript
 * http://github.com/janl/mustache.js
 */

/*global define: false Mustache: true*/

(function defineMustache (global, factory) {
  if (typeof exports === 'object' && exports && typeof exports.nodeName !== 'string') {
    factory(exports); // CommonJS
  } else if (typeof define === 'function' && define.amd) {
    define(['exports'], factory); // AMD
  } else {
    global.Mustache = {};
    factory(global.Mustache); // script, wsh, asp
  }
}(this, function mustacheFactory (mustache) {

  var objectToString = Object.prototype.toString;
  var isArray = Array.isArray || function isArrayPolyfill (object) {
    return objectToString.call(object) === '[object Array]';
  };

  function isFunction (object) {
    return typeof object === 'function';
  }

  /**
   * More correct typeof string handling array
   * which normally returns typeof 'object'
   */
  function typeStr (obj) {
    return isArray(obj) ? 'array' : typeof obj;
  }

  function escapeRegExp (string) {
    return string.replace(/[\-\[\]{}()*+?.,\\\^$|#\s]/g, '\\$&');
  }

  /**
   * Null safe way of checking whether or not an object,
   * including its prototype, has a given property
   */
  function hasProperty (obj, propName) {
    return obj != null && typeof obj === 'object' && (propName in obj);
  }

  // Workaround for https://issues.apache.org/jira/browse/COUCHDB-577
  // See https://github.com/janl/mustache.js/issues/189
  var regExpTest = RegExp.prototype.test;
  function testRegExp (re, string) {
    return regExpTest.call(re, string);
  }

  var nonSpaceRe = /\S/;
  function isWhitespace (string) {
    return !testRegExp(nonSpaceRe, string);
  }

  var entityMap = {
    '&': '&amp;',
    '<': '&lt;',
    '>': '&gt;',
    '"': '&quot;',
    "'": '&#39;',
    '/': '&#x2F;',
    '`': '&#x60;',
    '=': '&#x3D;'
  };

  function escapeHtml (string) {
    return String(string).replace(/[&<>"'`=\/]/g, function fromEntityMap (s) {
      return entityMap[s];
    });
  }

  var whiteRe = /\s*/;
  var spaceRe = /\s+/;
  var equalsRe = /\s*=/;
  var curlyRe = /\s*\}/;
  var tagRe = /#|\^|\/|>|\{|&|=|!/;

  /**
   * Breaks up the given `template` string into a tree of tokens. If the `tags`
   * argument is given here it must be an array with two string values: the
   * opening and closing tags used in the template (e.g. [ "<%", "%>" ]). Of
   * course, the default is to use mustaches (i.e. mustache.tags).
   *
   * A token is an array with at least 4 elements. The first element is the
   * mustache symbol that was used inside the tag, e.g. "#" or "&". If the tag
   * did not contain a symbol (i.e. {{myValue}}) this element is "name". For
   * all text that appears outside a symbol this element is "text".
   *
   * The second element of a token is its "value". For mustache tags this is
   * whatever else was inside the tag besides the opening symbol. For text tokens
   * this is the text itself.
   *
   * The third and fourth elements of the token are the start and end indices,
   * respectively, of the token in the original template.
   *
   * Tokens that are the root node of a subtree contain two more elements: 1) an
   * array of tokens in the subtree and 2) the index in the original template at
   * which the closing tag for that section begins.
   */
  function parseTemplate (template, tags) {
    if (!template)
      return [];

    var sections = [];     // Stack to hold section tokens
    var tokens = [];       // Buffer to hold the tokens
    var spaces = [];       // Indices of whitespace tokens on the current line
    var hasTag = false;    // Is there a {{tag}} on the current line?
    var nonSpace = false;  // Is there a non-space char on the current line?

    // Strips all whitespace tokens array for the current line
    // if there was a {{#tag}} on it and otherwise only space.
    function stripSpace () {
      if (hasTag && !nonSpace) {
        while (spaces.length)
          delete tokens[spaces.pop()];
      } else {
        spaces = [];
      }

      hasTag = false;
      nonSpace = false;
    }

    var openingTagRe, closingTagRe, closingCurlyRe;
    function compileTags (tagsToCompile) {
      if (typeof tagsToCompile === 'string')
        tagsToCompile = tagsToCompile.split(spaceRe, 2);

      if (!isArray(tagsToCompile) || tagsToCompile.length !== 2)
        throw new Error('Invalid tags: ' + tagsToCompile);

      openingTagRe = new RegExp(escapeRegExp(tagsToCompile[0]) + '\\s*');
      closingTagRe = new RegExp('\\s*' + escapeRegExp(tagsToCompile[1]));
      closingCurlyRe = new RegExp('\\s*' + escapeRegExp('}' + tagsToCompile[1]));
    }

    compileTags(tags || mustache.tags);

    var scanner = new Scanner(template);

    var start, type, value, chr, token, openSection;
    while (!scanner.eos()) {
      start = scanner.pos;

      // Match any text between tags.
      value = scanner.scanUntil(openingTagRe);

      if (value) {
        for (var i = 0, valueLength = value.length; i < valueLength; ++i) {
          chr = value.charAt(i);

          if (isWhitespace(chr)) {
            spaces.push(tokens.length);
          } else {
            nonSpace = true;
          }

          tokens.push([ 'text', chr, start, start + 1 ]);
          start += 1;

          // Check for whitespace on the current line.
          if (chr === '\n')
            stripSpace();
        }
      }

      // Match the opening tag.
      if (!scanner.scan(openingTagRe))
        break;

      hasTag = true;

      // Get the tag type.
      type = scanner.scan(tagRe) || 'name';
      scanner.scan(whiteRe);

      // Get the tag value.
      if (type === '=') {
        value = scanner.scanUntil(equalsRe);
        scanner.scan(equalsRe);
        scanner.scanUntil(closingTagRe);
      } else if (type === '{') {
        value = scanner.scanUntil(closingCurlyRe);
        scanner.scan(curlyRe);
        scanner.scanUntil(closingTagRe);
        type = '&';
      } else {
        value = scanner.scanUntil(closingTagRe);
      }

      // Match the closing tag.
      if (!scanner.scan(closingTagRe))
        throw new Error('Unclosed tag at ' + scanner.pos);

      token = [ type, value, start, scanner.pos ];
      tokens.push(token);

      if (type === '#' || type === '^') {
        sections.push(token);
      } else if (type === '/') {
        // Check section nesting.
        openSection = sections.pop();

        if (!openSection)
          throw new Error('Unopened section "' + value + '" at ' + start);

        if (openSection[1] !== value)
          throw new Error('Unclosed section "' + openSection[1] + '" at ' + start);
      } else if (type === 'name' || type === '{' || type === '&') {
        nonSpace = true;
      } else if (type === '=') {
        // Set the tags for the next time around.
        compileTags(value);
      }
    }

    // Make sure there are no open sections when we're done.
    openSection = sections.pop();

    if (openSection)
      throw new Error('Unclosed section "' + openSection[1] + '" at ' + scanner.pos);

    return nestTokens(squashTokens(tokens));
  }

  /**
   * Combines the values of consecutive text tokens in the given `tokens` array
   * to a single token.
   */
  function squashTokens (tokens) {
    var squashedTokens = [];

    var token, lastToken;
    for (var i = 0, numTokens = tokens.length; i < numTokens; ++i) {
      token = tokens[i];

      if (token) {
        if (token[0] === 'text' && lastToken && lastToken[0] === 'text') {
          lastToken[1] += token[1];
          lastToken[3] = token[3];
        } else {
          squashedTokens.push(token);
          lastToken = token;
        }
      }
    }

    return squashedTokens;
  }

  /**
   * Forms the given array of `tokens` into a nested tree structure where
   * tokens that represent a section have two additional items: 1) an array of
   * all tokens that appear in that section and 2) the index in the original
   * template that represents the end of that section.
   */
  function nestTokens (tokens) {
    var nestedTokens = [];
    var collector = nestedTokens;
    var sections = [];

    var token, section;
    for (var i = 0, numTokens = tokens.length; i < numTokens; ++i) {
      token = tokens[i];

      switch (token[0]) {
        case '#':
        case '^':
          collector.push(token);
          sections.push(token);
          collector = token[4] = [];
          break;
        case '/':
          section = sections.pop();
          section[5] = token[2];
          collector = sections.length > 0 ? sections[sections.length - 1][4] : nestedTokens;
          break;
        default:
          collector.push(token);
      }
    }

    return nestedTokens;
  }

  /**
   * A simple string scanner that is used by the template parser to find
   * tokens in template strings.
   */
  function Scanner (string) {
    this.string = string;
    this.tail = string;
    this.pos = 0;
  }

  /**
   * Returns `true` if the tail is empty (end of string).
   */
  Scanner.prototype.eos = function eos () {
    return this.tail === '';
  };

  /**
   * Tries to match the given regular expression at the current position.
   * Returns the matched text if it can match, the empty string otherwise.
   */
  Scanner.prototype.scan = function scan (re) {
    var match = this.tail.match(re);

    if (!match || match.index !== 0)
      return '';

    var string = match[0];

    this.tail = this.tail.substring(string.length);
    this.pos += string.length;

    return string;
  };

  /**
   * Skips all text until the given regular expression can be matched. Returns
   * the skipped string, which is the entire tail if no match can be made.
   */
  Scanner.prototype.scanUntil = function scanUntil (re) {
    var index = this.tail.search(re), match;

    switch (index) {
      case -1:
        match = this.tail;
        this.tail = '';
        break;
      case 0:
        match = '';
        break;
      default:
        match = this.tail.substring(0, index);
        this.tail = this.tail.substring(index);
    }

    this.pos += match.length;

    return match;
  };

  /**
   * Represents a rendering context by wrapping a view object and
   * maintaining a reference to the parent context.
   */
  function Context (view, parentContext) {
    this.view = view;
    this.cache = { '.': this.view };
    this.parent = parentContext;
  }

  /**
   * Creates a new context using the given view with this context
   * as the parent.
   */
  Context.prototype.push = function push (view) {
    return new Context(view, this);
  };

  /**
   * Returns the value of the given name in this context, traversing
   * up the context hierarchy if the value is absent in this context's view.
   */
  Context.prototype.lookup = function lookup (name) {
    var cache = this.cache;

    var value;
    if (cache.hasOwnProperty(name)) {
      value = cache[name];
    } else {
      var context = this, names, index, lookupHit = false;

      while (context) {
        if (name.indexOf('.') > 0) {
          value = context.view;
          names = name.split('.');
          index = 0;

          /**
           * Using the dot notion path in `name`, we descend through the
           * nested objects.
           *
           * To be certain that the lookup has been successful, we have to
           * check if the last object in the path actually has the property
           * we are looking for. We store the result in `lookupHit`.
           *
           * This is specially necessary for when the value has been set to
           * `undefined` and we want to avoid looking up parent contexts.
           **/
          while (value != null && index < names.length) {
            if (index === names.length - 1)
              lookupHit = hasProperty(value, names[index]);

            value = value[names[index++]];
          }
        } else {
          value = context.view[name];
          lookupHit = hasProperty(context.view, name);
        }

        if (lookupHit)
          break;

        context = context.parent;
      }

      cache[name] = value;
    }

    if (isFunction(value))
      value = value.call(this.view);

    return value;
  };

  /**
   * A Writer knows how to take a stream of tokens and render them to a
   * string, given a context. It also maintains a cache of templates to
   * avoid the need to parse the same template twice.
   */
  function Writer () {
    this.cache = {};
  }

  /**
   * Clears all cached templates in this writer.
   */
  Writer.prototype.clearCache = function clearCache () {
    this.cache = {};
  };

  /**
   * Parses and caches the given `template` and returns the array of tokens
   * that is generated from the parse.
   */
  Writer.prototype.parse = function parse (template, tags) {
    var cache = this.cache;
    var tokens = cache[template];

    if (tokens == null)
      tokens = cache[template] = parseTemplate(template, tags);

    return tokens;
  };

  /**
   * High-level method that is used to render the given `template` with
   * the given `view`.
   *
   * The optional `partials` argument may be an object that contains the
   * names and templates of partials that are used in the template. It may
   * also be a function that is used to load partial templates on the fly
   * that takes a single argument: the name of the partial.
   */
  Writer.prototype.render = function render (template, view, partials) {
    var tokens = this.parse(template);
    var context = (view instanceof Context) ? view : new Context(view);
    return this.renderTokens(tokens, context, partials, template);
  };

  /**
   * Low-level method that renders the given array of `tokens` using
   * the given `context` and `partials`.
   *
   * Note: The `originalTemplate` is only ever used to extract the portion
   * of the original template that was contained in a higher-order section.
   * If the template doesn't use higher-order sections, this argument may
   * be omitted.
   */
  Writer.prototype.renderTokens = function renderTokens (tokens, context, partials, originalTemplate) {
    var buffer = '';

    var token, symbol, value;
    for (var i = 0, numTokens = tokens.length; i < numTokens; ++i) {
      value = undefined;
      token = tokens[i];
      symbol = token[0];

      if (symbol === '#') value = this.renderSection(token, context, partials, originalTemplate);
      else if (symbol === '^') value = this.renderInverted(token, context, partials, originalTemplate);
      else if (symbol === '>') value = this.renderPartial(token, context, partials, originalTemplate);
      else if (symbol === '&') value = this.unescapedValue(token, context);
      else if (symbol === 'name') value = this.escapedValue(token, context);
      else if (symbol === 'text') value = this.rawValue(token);

      if (value !== undefined)
        buffer += value;
    }

    return buffer;
  };

  Writer.prototype.renderSection = function renderSection (token, context, partials, originalTemplate) {
    var self = this;
    var buffer = '';
    var value = context.lookup(token[1]);

    // This function is used to render an arbitrary template
    // in the current context by higher-order sections.
    function subRender (template) {
      return self.render(template, context, partials);
    }

    if (!value) return;

    if (isArray(value)) {
      for (var j = 0, valueLength = value.length; j < valueLength; ++j) {
        buffer += this.renderTokens(token[4], context.push(value[j]), partials, originalTemplate);
      }
    } else if (typeof value === 'object' || typeof value === 'string' || typeof value === 'number') {
      buffer += this.renderTokens(token[4], context.push(value), partials, originalTemplate);
    } else if (isFunction(value)) {
      if (typeof originalTemplate !== 'string')
        throw new Error('Cannot use higher-order sections without the original template');

      // Extract the portion of the original template that the section contains.
      value = value.call(context.view, originalTemplate.slice(token[3], token[5]), subRender);

      if (value != null)
        buffer += value;
    } else {
      buffer += this.renderTokens(token[4], context, partials, originalTemplate);
    }
    return buffer;
  };

  Writer.prototype.renderInverted = function renderInverted (token, context, partials, originalTemplate) {
    var value = context.lookup(token[1]);

    // Use JavaScript's definition of falsy. Include empty arrays.
    // See https://github.com/janl/mustache.js/issues/186
    if (!value || (isArray(value) && value.length === 0))
      return this.renderTokens(token[4], context, partials, originalTemplate);
  };

  Writer.prototype.renderPartial = function renderPartial (token, context, partials) {
    if (!partials) return;

    var value = isFunction(partials) ? partials(token[1]) : partials[token[1]];
    if (value != null)
      return this.renderTokens(this.parse(value), context, partials, value);
  };

  Writer.prototype.unescapedValue = function unescapedValue (token, context) {
    var value = context.lookup(token[1]);
    if (value != null)
      return value;
  };

  Writer.prototype.escapedValue = function escapedValue (token, context) {
    var value = context.lookup(token[1]);
    if (value != null)
      return mustache.escape(value);
  };

  Writer.prototype.rawValue = function rawValue (token) {
    return token[1];
  };

  mustache.name = 'mustache.js';
  mustache.version = '2.3.0';
  mustache.tags = [ '{{', '}}' ];

  // All high-level mustache.* functions use this writer.
  var defaultWriter = new Writer();

  /**
   * Clears all cached templates in the default writer.
   */
  mustache.clearCache = function clearCache () {
    return defaultWriter.clearCache();
  };

  /**
   * Parses and caches the given template in the default writer and returns the
   * array of tokens it contains. Doing this ahead of time avoids the need to
   * parse templates on the fly as they are rendered.
   */
  mustache.parse = function parse (template, tags) {
    return defaultWriter.parse(template, tags);
  };

  /**
   * Renders the `template` with the given `view` and `partials` using the
   * default writer.
   */
  mustache.render = function render (template, view, partials) {
    if (typeof template !== 'string') {
      throw new TypeError('Invalid template! Template should be a "string" ' +
                          'but "' + typeStr(template) + '" was given as the first ' +
                          'argument for mustache#render(template, view, partials)');
    }

    return defaultWriter.render(template, view, partials);
  };

  // This is here for backwards compatibility with 0.4.x.,
  /*eslint-disable */ // eslint wants camel cased function name
  mustache.to_html = function to_html (template, view, partials, send) {
    /*eslint-enable*/

    var result = mustache.render(template, view, partials);

    if (isFunction(send)) {
      send(result);
    } else {
      return result;
    }
  };

  // Export the escaping function so that the user may override it.
  // See https://github.com/janl/mustache.js/issues/244
  mustache.escape = escapeHtml;

  // Export these mainly for testing, but also for advanced usage.
  mustache.Scanner = Scanner;
  mustache.Context = Context;
  mustache.Writer = Writer;

  return mustache;
}));

},{}],46:[function(require,module,exports){
// shim for using process in browser
var process = module.exports = {};

// cached from whatever global is present so that test runners that stub it
// don't break things.  But we need to wrap it in a try catch in case it is
// wrapped in strict mode code which doesn't define any globals.  It's inside a
// function because try/catches deoptimize in certain engines.

var cachedSetTimeout;
var cachedClearTimeout;

function defaultSetTimout() {
    throw new Error('setTimeout has not been defined');
}
function defaultClearTimeout () {
    throw new Error('clearTimeout has not been defined');
}
(function () {
    try {
        if (typeof setTimeout === 'function') {
            cachedSetTimeout = setTimeout;
        } else {
            cachedSetTimeout = defaultSetTimout;
        }
    } catch (e) {
        cachedSetTimeout = defaultSetTimout;
    }
    try {
        if (typeof clearTimeout === 'function') {
            cachedClearTimeout = clearTimeout;
        } else {
            cachedClearTimeout = defaultClearTimeout;
        }
    } catch (e) {
        cachedClearTimeout = defaultClearTimeout;
    }
} ())
function runTimeout(fun) {
    if (cachedSetTimeout === setTimeout) {
        //normal enviroments in sane situations
        return setTimeout(fun, 0);
    }
    // if setTimeout wasn't available but was latter defined
    if ((cachedSetTimeout === defaultSetTimout || !cachedSetTimeout) && setTimeout) {
        cachedSetTimeout = setTimeout;
        return setTimeout(fun, 0);
    }
    try {
        // when when somebody has screwed with setTimeout but no I.E. maddness
        return cachedSetTimeout(fun, 0);
    } catch(e){
        try {
            // When we are in I.E. but the script has been evaled so I.E. doesn't trust the global object when called normally
            return cachedSetTimeout.call(null, fun, 0);
        } catch(e){
            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error
            return cachedSetTimeout.call(this, fun, 0);
        }
    }


}
function runClearTimeout(marker) {
    if (cachedClearTimeout === clearTimeout) {
        //normal enviroments in sane situations
        return clearTimeout(marker);
    }
    // if clearTimeout wasn't available but was latter defined
    if ((cachedClearTimeout === defaultClearTimeout || !cachedClearTimeout) && clearTimeout) {
        cachedClearTimeout = clearTimeout;
        return clearTimeout(marker);
    }
    try {
        // when when somebody has screwed with setTimeout but no I.E. maddness
        return cachedClearTimeout(marker);
    } catch (e){
        try {
            // When we are in I.E. but the script has been evaled so I.E. doesn't  trust the global object when called normally
            return cachedClearTimeout.call(null, marker);
        } catch (e){
            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error.
            // Some versions of I.E. have different rules for clearTimeout vs setTimeout
            return cachedClearTimeout.call(this, marker);
        }
    }



}
var queue = [];
var draining = false;
var currentQueue;
var queueIndex = -1;

function cleanUpNextTick() {
    if (!draining || !currentQueue) {
        return;
    }
    draining = false;
    if (currentQueue.length) {
        queue = currentQueue.concat(queue);
    } else {
        queueIndex = -1;
    }
    if (queue.length) {
        drainQueue();
    }
}

function drainQueue() {
    if (draining) {
        return;
    }
    var timeout = runTimeout(cleanUpNextTick);
    draining = true;

    var len = queue.length;
    while(len) {
        currentQueue = queue;
        queue = [];
        while (++queueIndex < len) {
            if (currentQueue) {
                currentQueue[queueIndex].run();
            }
        }
        queueIndex = -1;
        len = queue.length;
    }
    currentQueue = null;
    draining = false;
    runClearTimeout(timeout);
}

process.nextTick = function (fun) {
    var args = new Array(arguments.length - 1);
    if (arguments.length > 1) {
        for (var i = 1; i < arguments.length; i++) {
            args[i - 1] = arguments[i];
        }
    }
    queue.push(new Item(fun, args));
    if (queue.length === 1 && !draining) {
        runTimeout(drainQueue);
    }
};

// v8 likes predictible objects
function Item(fun, array) {
    this.fun = fun;
    this.array = array;
}
Item.prototype.run = function () {
    this.fun.apply(null, this.array);
};
process.title = 'browser';
process.browser = true;
process.env = {};
process.argv = [];
process.version = ''; // empty string to avoid regexp issues
process.versions = {};

function noop() {}

process.on = noop;
process.addListener = noop;
process.once = noop;
process.off = noop;
process.removeListener = noop;
process.removeAllListeners = noop;
process.emit = noop;
process.prependListener = noop;
process.prependOnceListener = noop;

process.listeners = function (name) { return [] }

process.binding = function (name) {
    throw new Error('process.binding is not supported');
};

process.cwd = function () { return '/' };
process.chdir = function (dir) {
    throw new Error('process.chdir is not supported');
};
process.umask = function() { return 0; };

},{}],47:[function(require,module,exports){
/*!
  * @preserve Qwery - A selector engine
  * https://github.com/ded/qwery
  * (c) Dustin Diaz 2014 | License MIT
  */

(function (name, context, definition) {
  if (typeof module != 'undefined' && module.exports) module.exports = definition()
  else if (typeof define == 'function' && define.amd) define(definition)
  else context[name] = definition()
})('qwery', this, function () {

  var classOnly = /^\.([\w\-]+)$/
    , doc = document
    , win = window
    , html = doc.documentElement
    , nodeType = 'nodeType'
  var isAncestor = 'compareDocumentPosition' in html ?
    function (element, container) {
      return (container.compareDocumentPosition(element) & 16) == 16
    } :
    function (element, container) {
      container = container == doc || container == window ? html : container
      return container !== element && container.contains(element)
    }

  function toArray(ar) {
    return [].slice.call(ar, 0)
  }

  function isNode(el) {
    var t
    return el && typeof el === 'object' && (t = el.nodeType) && (t == 1 || t == 9)
  }

  function arrayLike(o) {
    return (typeof o === 'object' && isFinite(o.length))
  }

  function flatten(ar) {
    for (var r = [], i = 0, l = ar.length; i < l; ++i) arrayLike(ar[i]) ? (r = r.concat(ar[i])) : (r[r.length] = ar[i])
    return r
  }

  function uniq(ar) {
    var a = [], i, j
    label:
    for (i = 0; i < ar.length; i++) {
      for (j = 0; j < a.length; j++) {
        if (a[j] == ar[i]) {
          continue label
        }
      }
      a[a.length] = ar[i]
    }
    return a
  }


  function normalizeRoot(root) {
    if (!root) return doc
    if (typeof root == 'string') return qwery(root)[0]
    if (!root[nodeType] && arrayLike(root)) return root[0]
    return root
  }

  /**
   * @param {string|Array.<Element>|Element|Node} selector
   * @param {string|Array.<Element>|Element|Node=} opt_root
   * @return {Array.<Element>}
   */
  function qwery(selector, opt_root) {
    var m, root = normalizeRoot(opt_root)
    if (!root || !selector) return []
    if (selector === win || isNode(selector)) {
      return !opt_root || (selector !== win && isNode(root) && isAncestor(selector, root)) ? [selector] : []
    }
    if (selector && arrayLike(selector)) return flatten(selector)


    if (doc.getElementsByClassName && selector == 'string' && (m = selector.match(classOnly))) {
      return toArray((root).getElementsByClassName(m[1]))
    }
    // using duck typing for 'a' window or 'a' document (not 'the' window || document)
    if (selector && (selector.document || (selector.nodeType && selector.nodeType == 9))) {
      return !opt_root ? [selector] : []
    }
    return toArray((root).querySelectorAll(selector))
  }

  qwery.uniq = uniq

  return qwery
}, this);

},{}],48:[function(require,module,exports){
var inherits = require('inherits')
var EventEmitter = require('events').EventEmitter
var now = require('right-now')
var raf = require('raf')

module.exports = Engine
function Engine(fn) {
    if (!(this instanceof Engine)) 
        return new Engine(fn)
    this.running = false
    this.last = now()
    this._frame = 0
    this._tick = this.tick.bind(this)

    if (fn)
        this.on('tick', fn)
}

inherits(Engine, EventEmitter)

Engine.prototype.start = function() {
    if (this.running) 
        return
    this.running = true
    this.last = now()
    this._frame = raf(this._tick)
    return this
}

Engine.prototype.stop = function() {
    this.running = false
    if (this._frame !== 0)
        raf.cancel(this._frame)
    this._frame = 0
    return this
}

Engine.prototype.tick = function() {
    this._frame = raf(this._tick)
    var time = now()
    var dt = time - this.last
    this.emit('tick', dt)
    this.last = time
}
},{"events":43,"inherits":44,"raf":49,"right-now":51}],49:[function(require,module,exports){
(function (global){
var now = require('performance-now')
  , root = typeof window === 'undefined' ? global : window
  , vendors = ['moz', 'webkit']
  , suffix = 'AnimationFrame'
  , raf = root['request' + suffix]
  , caf = root['cancel' + suffix] || root['cancelRequest' + suffix]

for(var i = 0; !raf && i < vendors.length; i++) {
  raf = root[vendors[i] + 'Request' + suffix]
  caf = root[vendors[i] + 'Cancel' + suffix]
      || root[vendors[i] + 'CancelRequest' + suffix]
}

// Some versions of FF have rAF but not cAF
if(!raf || !caf) {
  var last = 0
    , id = 0
    , queue = []
    , frameDuration = 1000 / 60

  raf = function(callback) {
    if(queue.length === 0) {
      var _now = now()
        , next = Math.max(0, frameDuration - (_now - last))
      last = next + _now
      setTimeout(function() {
        var cp = queue.slice(0)
        // Clear queue here to prevent
        // callbacks from appending listeners
        // to the current frame's queue
        queue.length = 0
        for(var i = 0; i < cp.length; i++) {
          if(!cp[i].cancelled) {
            try{
              cp[i].callback(last)
            } catch(e) {
              setTimeout(function() { throw e }, 0)
            }
          }
        }
      }, Math.round(next))
    }
    queue.push({
      handle: ++id,
      callback: callback,
      cancelled: false
    })
    return id
  }

  caf = function(handle) {
    for(var i = 0; i < queue.length; i++) {
      if(queue[i].handle === handle) {
        queue[i].cancelled = true
      }
    }
  }
}

module.exports = function(fn) {
  // Wrap in a new function to prevent
  // `cancel` potentially being assigned
  // to the native rAF function
  return raf.call(root, fn)
}
module.exports.cancel = function() {
  caf.apply(root, arguments)
}
module.exports.polyfill = function(object) {
  if (!object) {
    object = root;
  }
  object.requestAnimationFrame = raf
  object.cancelAnimationFrame = caf
}

}).call(this,typeof global !== "undefined" ? global : typeof self !== "undefined" ? self : typeof window !== "undefined" ? window : {})
},{"performance-now":50}],50:[function(require,module,exports){
(function (process){
// Generated by CoffeeScript 1.12.2
(function() {
  var getNanoSeconds, hrtime, loadTime, moduleLoadTime, nodeLoadTime, upTime;

  if ((typeof performance !== "undefined" && performance !== null) && performance.now) {
    module.exports = function() {
      return performance.now();
    };
  } else if ((typeof process !== "undefined" && process !== null) && process.hrtime) {
    module.exports = function() {
      return (getNanoSeconds() - nodeLoadTime) / 1e6;
    };
    hrtime = process.hrtime;
    getNanoSeconds = function() {
      var hr;
      hr = hrtime();
      return hr[0] * 1e9 + hr[1];
    };
    moduleLoadTime = getNanoSeconds();
    upTime = process.uptime() * 1e9;
    nodeLoadTime = moduleLoadTime - upTime;
  } else if (Date.now) {
    module.exports = function() {
      return Date.now() - loadTime;
    };
    loadTime = Date.now();
  } else {
    module.exports = function() {
      return new Date().getTime() - loadTime;
    };
    loadTime = new Date().getTime();
  }

}).call(this);



}).call(this,require('_process'))
},{"_process":46}],51:[function(require,module,exports){
(function (global){
module.exports =
  global.performance &&
  global.performance.now ? function now() {
    return performance.now()
  } : Date.now || function now() {
    return +new Date
  }

}).call(this,typeof global !== "undefined" ? global : typeof self !== "undefined" ? self : typeof window !== "undefined" ? window : {})
},{}],52:[function(require,module,exports){
(function (global){
!function(e){if("object"==typeof exports)module.exports=e();else if("function"==typeof define&&define.amd)define(e);else{var f;"undefined"!=typeof window?f=window:"undefined"!=typeof global?f=global:"undefined"!=typeof self&&(f=self),f.routes=e()}}(function(){var define,module,exports;return (function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require=="function"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);throw new Error("Cannot find module '"+o+"'")}var f=n[o]={exports:{}};t[o][0].call(f.exports,function(e){var n=t[o][1][e];return s(n?n:e)},f,f.exports,e,t,n,r)}return n[o].exports}var i=typeof require=="function"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})({1:[function(_dereq_,module,exports){

var localRoutes = [];


/**
 * Convert path to route object
 *
 * A string or RegExp should be passed,
 * will return { re, src, keys} obj
 *
 * @param  {String / RegExp} path
 * @return {Object}
 */

var Route = function(path){
  //using 'new' is optional

  var src, re, keys = [];

  if(path instanceof RegExp){
    re = path;
    src = path.toString();
  }else{
    re = pathToRegExp(path, keys);
    src = path;
  }

  return {
  	 re: re,
  	 src: path.toString(),
  	 keys: keys
  }
};

/**
 * Normalize the given path string,
 * returning a regular expression.
 *
 * An empty array should be passed,
 * which will contain the placeholder
 * key names. For example "/user/:id" will
 * then contain ["id"].
 *
 * @param  {String} path
 * @param  {Array} keys
 * @return {RegExp}
 */
var pathToRegExp = function (path, keys) {
	path = path
		.concat('/?')
		.replace(/\/\(/g, '(?:/')
		.replace(/(\/)?(\.)?:(\w+)(?:(\(.*?\)))?(\?)?|\*/g, function(_, slash, format, key, capture, optional){
			if (_ === "*"){
				keys.push(undefined);
				return _;
			}

			keys.push(key);
			slash = slash || '';
			return ''
				+ (optional ? '' : slash)
				+ '(?:'
				+ (optional ? slash : '')
				+ (format || '') + (capture || '([^/]+?)') + ')'
				+ (optional || '');
		})
		.replace(/([\/.])/g, '\\$1')
		.replace(/\*/g, '(.*)');
	return new RegExp('^' + path + '$', 'i');
};

/**
 * Attempt to match the given request to
 * one of the routes. When successful
 * a  {fn, params, splats} obj is returned
 *
 * @param  {Array} routes
 * @param  {String} uri
 * @return {Object}
 */
var match = function (routes, uri, startAt) {
	var captures, i = startAt || 0;

	for (var len = routes.length; i < len; ++i) {
		var route = routes[i],
		    re = route.re,
		    keys = route.keys,
		    splats = [],
		    params = {};

		if (captures = uri.match(re)) {
			for (var j = 1, len = captures.length; j < len; ++j) {
				var key = keys[j-1],
					val = typeof captures[j] === 'string'
						? unescape(captures[j])
						: captures[j];
				if (key) {
					params[key] = val;
				} else {
					splats.push(val);
				}
			}
			return {
				params: params,
				splats: splats,
				route: route.src,
				next: i + 1
			};
		}
	}
};

/**
 * Default "normal" router constructor.
 * accepts path, fn tuples via addRoute
 * returns {fn, params, splats, route}
 *  via match
 *
 * @return {Object}
 */

var Router = function(){
  //using 'new' is optional
  return {
    routes: [],
    routeMap : {},
    addRoute: function(path, fn){
      if (!path) throw new Error(' route requires a path');
      if (!fn) throw new Error(' route ' + path.toString() + ' requires a callback');

      if (this.routeMap[path]) {
        throw new Error('path is already defined: ' + path);
      }

      var route = Route(path);
      route.fn = fn;

      this.routes.push(route);
      this.routeMap[path] = fn;
    },

    removeRoute: function(path) {
      if (!path) throw new Error(' route requires a path');
      if (!this.routeMap[path]) {
        throw new Error('path does not exist: ' + path);
      }

      var match;
      var newRoutes = [];

      // copy the routes excluding the route being removed
      for (var i = 0; i < this.routes.length; i++) {
        var route = this.routes[i];
        if (route.src !== path) {
          newRoutes.push(route);
        }
      }
      this.routes = newRoutes;
      delete this.routeMap[path];
    },

    match: function(pathname, startAt){
      var route = match(this.routes, pathname, startAt);
      if(route){
        route.fn = this.routeMap[route.route];
        route.next = this.match.bind(this, pathname, route.next)
      }
      return route;
    }
  }
};

Router.Route = Route
Router.pathToRegExp = pathToRegExp
Router.match = match
// back compat
Router.Router = Router

module.exports = Router

},{}]},{},[1])
(1)
});
}).call(this,typeof global !== "undefined" ? global : typeof self !== "undefined" ? self : typeof window !== "undefined" ? window : {})
},{}],53:[function(require,module,exports){
//     Underscore.js 1.8.3
//     http://underscorejs.org
//     (c) 2009-2015 Jeremy Ashkenas, DocumentCloud and Investigative Reporters & Editors
//     Underscore may be freely distributed under the MIT license.

(function() {

  // Baseline setup
  // --------------

  // Establish the root object, `window` in the browser, or `exports` on the server.
  var root = this;

  // Save the previous value of the `_` variable.
  var previousUnderscore = root._;

  // Save bytes in the minified (but not gzipped) version:
  var ArrayProto = Array.prototype, ObjProto = Object.prototype, FuncProto = Function.prototype;

  // Create quick reference variables for speed access to core prototypes.
  var
    push             = ArrayProto.push,
    slice            = ArrayProto.slice,
    toString         = ObjProto.toString,
    hasOwnProperty   = ObjProto.hasOwnProperty;

  // All **ECMAScript 5** native function implementations that we hope to use
  // are declared here.
  var
    nativeIsArray      = Array.isArray,
    nativeKeys         = Object.keys,
    nativeBind         = FuncProto.bind,
    nativeCreate       = Object.create;

  // Naked function reference for surrogate-prototype-swapping.
  var Ctor = function(){};

  // Create a safe reference to the Underscore object for use below.
  var _ = function(obj) {
    if (obj instanceof _) return obj;
    if (!(this instanceof _)) return new _(obj);
    this._wrapped = obj;
  };

  // Export the Underscore object for **Node.js**, with
  // backwards-compatibility for the old `require()` API. If we're in
  // the browser, add `_` as a global object.
  if (typeof exports !== 'undefined') {
    if (typeof module !== 'undefined' && module.exports) {
      exports = module.exports = _;
    }
    exports._ = _;
  } else {
    root._ = _;
  }

  // Current version.
  _.VERSION = '1.8.3';

  // Internal function that returns an efficient (for current engines) version
  // of the passed-in callback, to be repeatedly applied in other Underscore
  // functions.
  var optimizeCb = function(func, context, argCount) {
    if (context === void 0) return func;
    switch (argCount == null ? 3 : argCount) {
      case 1: return function(value) {
        return func.call(context, value);
      };
      case 2: return function(value, other) {
        return func.call(context, value, other);
      };
      case 3: return function(value, index, collection) {
        return func.call(context, value, index, collection);
      };
      case 4: return function(accumulator, value, index, collection) {
        return func.call(context, accumulator, value, index, collection);
      };
    }
    return function() {
      return func.apply(context, arguments);
    };
  };

  // A mostly-internal function to generate callbacks that can be applied
  // to each element in a collection, returning the desired result — either
  // identity, an arbitrary callback, a property matcher, or a property accessor.
  var cb = function(value, context, argCount) {
    if (value == null) return _.identity;
    if (_.isFunction(value)) return optimizeCb(value, context, argCount);
    if (_.isObject(value)) return _.matcher(value);
    return _.property(value);
  };
  _.iteratee = function(value, context) {
    return cb(value, context, Infinity);
  };

  // An internal function for creating assigner functions.
  var createAssigner = function(keysFunc, undefinedOnly) {
    return function(obj) {
      var length = arguments.length;
      if (length < 2 || obj == null) return obj;
      for (var index = 1; index < length; index++) {
        var source = arguments[index],
            keys = keysFunc(source),
            l = keys.length;
        for (var i = 0; i < l; i++) {
          var key = keys[i];
          if (!undefinedOnly || obj[key] === void 0) obj[key] = source[key];
        }
      }
      return obj;
    };
  };

  // An internal function for creating a new object that inherits from another.
  var baseCreate = function(prototype) {
    if (!_.isObject(prototype)) return {};
    if (nativeCreate) return nativeCreate(prototype);
    Ctor.prototype = prototype;
    var result = new Ctor;
    Ctor.prototype = null;
    return result;
  };

  var property = function(key) {
    return function(obj) {
      return obj == null ? void 0 : obj[key];
    };
  };

  // Helper for collection methods to determine whether a collection
  // should be iterated as an array or as an object
  // Related: http://people.mozilla.org/~jorendorff/es6-draft.html#sec-tolength
  // Avoids a very nasty iOS 8 JIT bug on ARM-64. #2094
  var MAX_ARRAY_INDEX = Math.pow(2, 53) - 1;
  var getLength = property('length');
  var isArrayLike = function(collection) {
    var length = getLength(collection);
    return typeof length == 'number' && length >= 0 && length <= MAX_ARRAY_INDEX;
  };

  // Collection Functions
  // --------------------

  // The cornerstone, an `each` implementation, aka `forEach`.
  // Handles raw objects in addition to array-likes. Treats all
  // sparse array-likes as if they were dense.
  _.each = _.forEach = function(obj, iteratee, context) {
    iteratee = optimizeCb(iteratee, context);
    var i, length;
    if (isArrayLike(obj)) {
      for (i = 0, length = obj.length; i < length; i++) {
        iteratee(obj[i], i, obj);
      }
    } else {
      var keys = _.keys(obj);
      for (i = 0, length = keys.length; i < length; i++) {
        iteratee(obj[keys[i]], keys[i], obj);
      }
    }
    return obj;
  };

  // Return the results of applying the iteratee to each element.
  _.map = _.collect = function(obj, iteratee, context) {
    iteratee = cb(iteratee, context);
    var keys = !isArrayLike(obj) && _.keys(obj),
        length = (keys || obj).length,
        results = Array(length);
    for (var index = 0; index < length; index++) {
      var currentKey = keys ? keys[index] : index;
      results[index] = iteratee(obj[currentKey], currentKey, obj);
    }
    return results;
  };

  // Create a reducing function iterating left or right.
  function createReduce(dir) {
    // Optimized iterator function as using arguments.length
    // in the main function will deoptimize the, see #1991.
    function iterator(obj, iteratee, memo, keys, index, length) {
      for (; index >= 0 && index < length; index += dir) {
        var currentKey = keys ? keys[index] : index;
        memo = iteratee(memo, obj[currentKey], currentKey, obj);
      }
      return memo;
    }

    return function(obj, iteratee, memo, context) {
      iteratee = optimizeCb(iteratee, context, 4);
      var keys = !isArrayLike(obj) && _.keys(obj),
          length = (keys || obj).length,
          index = dir > 0 ? 0 : length - 1;
      // Determine the initial value if none is provided.
      if (arguments.length < 3) {
        memo = obj[keys ? keys[index] : index];
        index += dir;
      }
      return iterator(obj, iteratee, memo, keys, index, length);
    };
  }

  // **Reduce** builds up a single result from a list of values, aka `inject`,
  // or `foldl`.
  _.reduce = _.foldl = _.inject = createReduce(1);

  // The right-associative version of reduce, also known as `foldr`.
  _.reduceRight = _.foldr = createReduce(-1);

  // Return the first value which passes a truth test. Aliased as `detect`.
  _.find = _.detect = function(obj, predicate, context) {
    var key;
    if (isArrayLike(obj)) {
      key = _.findIndex(obj, predicate, context);
    } else {
      key = _.findKey(obj, predicate, context);
    }
    if (key !== void 0 && key !== -1) return obj[key];
  };

  // Return all the elements that pass a truth test.
  // Aliased as `select`.
  _.filter = _.select = function(obj, predicate, context) {
    var results = [];
    predicate = cb(predicate, context);
    _.each(obj, function(value, index, list) {
      if (predicate(value, index, list)) results.push(value);
    });
    return results;
  };

  // Return all the elements for which a truth test fails.
  _.reject = function(obj, predicate, context) {
    return _.filter(obj, _.negate(cb(predicate)), context);
  };

  // Determine whether all of the elements match a truth test.
  // Aliased as `all`.
  _.every = _.all = function(obj, predicate, context) {
    predicate = cb(predicate, context);
    var keys = !isArrayLike(obj) && _.keys(obj),
        length = (keys || obj).length;
    for (var index = 0; index < length; index++) {
      var currentKey = keys ? keys[index] : index;
      if (!predicate(obj[currentKey], currentKey, obj)) return false;
    }
    return true;
  };

  // Determine if at least one element in the object matches a truth test.
  // Aliased as `any`.
  _.some = _.any = function(obj, predicate, context) {
    predicate = cb(predicate, context);
    var keys = !isArrayLike(obj) && _.keys(obj),
        length = (keys || obj).length;
    for (var index = 0; index < length; index++) {
      var currentKey = keys ? keys[index] : index;
      if (predicate(obj[currentKey], currentKey, obj)) return true;
    }
    return false;
  };

  // Determine if the array or object contains a given item (using `===`).
  // Aliased as `includes` and `include`.
  _.contains = _.includes = _.include = function(obj, item, fromIndex, guard) {
    if (!isArrayLike(obj)) obj = _.values(obj);
    if (typeof fromIndex != 'number' || guard) fromIndex = 0;
    return _.indexOf(obj, item, fromIndex) >= 0;
  };

  // Invoke a method (with arguments) on every item in a collection.
  _.invoke = function(obj, method) {
    var args = slice.call(arguments, 2);
    var isFunc = _.isFunction(method);
    return _.map(obj, function(value) {
      var func = isFunc ? method : value[method];
      return func == null ? func : func.apply(value, args);
    });
  };

  // Convenience version of a common use case of `map`: fetching a property.
  _.pluck = function(obj, key) {
    return _.map(obj, _.property(key));
  };

  // Convenience version of a common use case of `filter`: selecting only objects
  // containing specific `key:value` pairs.
  _.where = function(obj, attrs) {
    return _.filter(obj, _.matcher(attrs));
  };

  // Convenience version of a common use case of `find`: getting the first object
  // containing specific `key:value` pairs.
  _.findWhere = function(obj, attrs) {
    return _.find(obj, _.matcher(attrs));
  };

  // Return the maximum element (or element-based computation).
  _.max = function(obj, iteratee, context) {
    var result = -Infinity, lastComputed = -Infinity,
        value, computed;
    if (iteratee == null && obj != null) {
      obj = isArrayLike(obj) ? obj : _.values(obj);
      for (var i = 0, length = obj.length; i < length; i++) {
        value = obj[i];
        if (value > result) {
          result = value;
        }
      }
    } else {
      iteratee = cb(iteratee, context);
      _.each(obj, function(value, index, list) {
        computed = iteratee(value, index, list);
        if (computed > lastComputed || computed === -Infinity && result === -Infinity) {
          result = value;
          lastComputed = computed;
        }
      });
    }
    return result;
  };

  // Return the minimum element (or element-based computation).
  _.min = function(obj, iteratee, context) {
    var result = Infinity, lastComputed = Infinity,
        value, computed;
    if (iteratee == null && obj != null) {
      obj = isArrayLike(obj) ? obj : _.values(obj);
      for (var i = 0, length = obj.length; i < length; i++) {
        value = obj[i];
        if (value < result) {
          result = value;
        }
      }
    } else {
      iteratee = cb(iteratee, context);
      _.each(obj, function(value, index, list) {
        computed = iteratee(value, index, list);
        if (computed < lastComputed || computed === Infinity && result === Infinity) {
          result = value;
          lastComputed = computed;
        }
      });
    }
    return result;
  };

  // Shuffle a collection, using the modern version of the
  // [Fisher-Yates shuffle](http://en.wikipedia.org/wiki/Fisher–Yates_shuffle).
  _.shuffle = function(obj) {
    var set = isArrayLike(obj) ? obj : _.values(obj);
    var length = set.length;
    var shuffled = Array(length);
    for (var index = 0, rand; index < length; index++) {
      rand = _.random(0, index);
      if (rand !== index) shuffled[index] = shuffled[rand];
      shuffled[rand] = set[index];
    }
    return shuffled;
  };

  // Sample **n** random values from a collection.
  // If **n** is not specified, returns a single random element.
  // The internal `guard` argument allows it to work with `map`.
  _.sample = function(obj, n, guard) {
    if (n == null || guard) {
      if (!isArrayLike(obj)) obj = _.values(obj);
      return obj[_.random(obj.length - 1)];
    }
    return _.shuffle(obj).slice(0, Math.max(0, n));
  };

  // Sort the object's values by a criterion produced by an iteratee.
  _.sortBy = function(obj, iteratee, context) {
    iteratee = cb(iteratee, context);
    return _.pluck(_.map(obj, function(value, index, list) {
      return {
        value: value,
        index: index,
        criteria: iteratee(value, index, list)
      };
    }).sort(function(left, right) {
      var a = left.criteria;
      var b = right.criteria;
      if (a !== b) {
        if (a > b || a === void 0) return 1;
        if (a < b || b === void 0) return -1;
      }
      return left.index - right.index;
    }), 'value');
  };

  // An internal function used for aggregate "group by" operations.
  var group = function(behavior) {
    return function(obj, iteratee, context) {
      var result = {};
      iteratee = cb(iteratee, context);
      _.each(obj, function(value, index) {
        var key = iteratee(value, index, obj);
        behavior(result, value, key);
      });
      return result;
    };
  };

  // Groups the object's values by a criterion. Pass either a string attribute
  // to group by, or a function that returns the criterion.
  _.groupBy = group(function(result, value, key) {
    if (_.has(result, key)) result[key].push(value); else result[key] = [value];
  });

  // Indexes the object's values by a criterion, similar to `groupBy`, but for
  // when you know that your index values will be unique.
  _.indexBy = group(function(result, value, key) {
    result[key] = value;
  });

  // Counts instances of an object that group by a certain criterion. Pass
  // either a string attribute to count by, or a function that returns the
  // criterion.
  _.countBy = group(function(result, value, key) {
    if (_.has(result, key)) result[key]++; else result[key] = 1;
  });

  // Safely create a real, live array from anything iterable.
  _.toArray = function(obj) {
    if (!obj) return [];
    if (_.isArray(obj)) return slice.call(obj);
    if (isArrayLike(obj)) return _.map(obj, _.identity);
    return _.values(obj);
  };

  // Return the number of elements in an object.
  _.size = function(obj) {
    if (obj == null) return 0;
    return isArrayLike(obj) ? obj.length : _.keys(obj).length;
  };

  // Split a collection into two arrays: one whose elements all satisfy the given
  // predicate, and one whose elements all do not satisfy the predicate.
  _.partition = function(obj, predicate, context) {
    predicate = cb(predicate, context);
    var pass = [], fail = [];
    _.each(obj, function(value, key, obj) {
      (predicate(value, key, obj) ? pass : fail).push(value);
    });
    return [pass, fail];
  };

  // Array Functions
  // ---------------

  // Get the first element of an array. Passing **n** will return the first N
  // values in the array. Aliased as `head` and `take`. The **guard** check
  // allows it to work with `_.map`.
  _.first = _.head = _.take = function(array, n, guard) {
    if (array == null) return void 0;
    if (n == null || guard) return array[0];
    return _.initial(array, array.length - n);
  };

  // Returns everything but the last entry of the array. Especially useful on
  // the arguments object. Passing **n** will return all the values in
  // the array, excluding the last N.
  _.initial = function(array, n, guard) {
    return slice.call(array, 0, Math.max(0, array.length - (n == null || guard ? 1 : n)));
  };

  // Get the last element of an array. Passing **n** will return the last N
  // values in the array.
  _.last = function(array, n, guard) {
    if (array == null) return void 0;
    if (n == null || guard) return array[array.length - 1];
    return _.rest(array, Math.max(0, array.length - n));
  };

  // Returns everything but the first entry of the array. Aliased as `tail` and `drop`.
  // Especially useful on the arguments object. Passing an **n** will return
  // the rest N values in the array.
  _.rest = _.tail = _.drop = function(array, n, guard) {
    return slice.call(array, n == null || guard ? 1 : n);
  };

  // Trim out all falsy values from an array.
  _.compact = function(array) {
    return _.filter(array, _.identity);
  };

  // Internal implementation of a recursive `flatten` function.
  var flatten = function(input, shallow, strict, startIndex) {
    var output = [], idx = 0;
    for (var i = startIndex || 0, length = getLength(input); i < length; i++) {
      var value = input[i];
      if (isArrayLike(value) && (_.isArray(value) || _.isArguments(value))) {
        //flatten current level of array or arguments object
        if (!shallow) value = flatten(value, shallow, strict);
        var j = 0, len = value.length;
        output.length += len;
        while (j < len) {
          output[idx++] = value[j++];
        }
      } else if (!strict) {
        output[idx++] = value;
      }
    }
    return output;
  };

  // Flatten out an array, either recursively (by default), or just one level.
  _.flatten = function(array, shallow) {
    return flatten(array, shallow, false);
  };

  // Return a version of the array that does not contain the specified value(s).
  _.without = function(array) {
    return _.difference(array, slice.call(arguments, 1));
  };

  // Produce a duplicate-free version of the array. If the array has already
  // been sorted, you have the option of using a faster algorithm.
  // Aliased as `unique`.
  _.uniq = _.unique = function(array, isSorted, iteratee, context) {
    if (!_.isBoolean(isSorted)) {
      context = iteratee;
      iteratee = isSorted;
      isSorted = false;
    }
    if (iteratee != null) iteratee = cb(iteratee, context);
    var result = [];
    var seen = [];
    for (var i = 0, length = getLength(array); i < length; i++) {
      var value = array[i],
          computed = iteratee ? iteratee(value, i, array) : value;
      if (isSorted) {
        if (!i || seen !== computed) result.push(value);
        seen = computed;
      } else if (iteratee) {
        if (!_.contains(seen, computed)) {
          seen.push(computed);
          result.push(value);
        }
      } else if (!_.contains(result, value)) {
        result.push(value);
      }
    }
    return result;
  };

  // Produce an array that contains the union: each distinct element from all of
  // the passed-in arrays.
  _.union = function() {
    return _.uniq(flatten(arguments, true, true));
  };

  // Produce an array that contains every item shared between all the
  // passed-in arrays.
  _.intersection = function(array) {
    var result = [];
    var argsLength = arguments.length;
    for (var i = 0, length = getLength(array); i < length; i++) {
      var item = array[i];
      if (_.contains(result, item)) continue;
      for (var j = 1; j < argsLength; j++) {
        if (!_.contains(arguments[j], item)) break;
      }
      if (j === argsLength) result.push(item);
    }
    return result;
  };

  // Take the difference between one array and a number of other arrays.
  // Only the elements present in just the first array will remain.
  _.difference = function(array) {
    var rest = flatten(arguments, true, true, 1);
    return _.filter(array, function(value){
      return !_.contains(rest, value);
    });
  };

  // Zip together multiple lists into a single array -- elements that share
  // an index go together.
  _.zip = function() {
    return _.unzip(arguments);
  };

  // Complement of _.zip. Unzip accepts an array of arrays and groups
  // each array's elements on shared indices
  _.unzip = function(array) {
    var length = array && _.max(array, getLength).length || 0;
    var result = Array(length);

    for (var index = 0; index < length; index++) {
      result[index] = _.pluck(array, index);
    }
    return result;
  };

  // Converts lists into objects. Pass either a single array of `[key, value]`
  // pairs, or two parallel arrays of the same length -- one of keys, and one of
  // the corresponding values.
  _.object = function(list, values) {
    var result = {};
    for (var i = 0, length = getLength(list); i < length; i++) {
      if (values) {
        result[list[i]] = values[i];
      } else {
        result[list[i][0]] = list[i][1];
      }
    }
    return result;
  };

  // Generator function to create the findIndex and findLastIndex functions
  function createPredicateIndexFinder(dir) {
    return function(array, predicate, context) {
      predicate = cb(predicate, context);
      var length = getLength(array);
      var index = dir > 0 ? 0 : length - 1;
      for (; index >= 0 && index < length; index += dir) {
        if (predicate(array[index], index, array)) return index;
      }
      return -1;
    };
  }

  // Returns the first index on an array-like that passes a predicate test
  _.findIndex = createPredicateIndexFinder(1);
  _.findLastIndex = createPredicateIndexFinder(-1);

  // Use a comparator function to figure out the smallest index at which
  // an object should be inserted so as to maintain order. Uses binary search.
  _.sortedIndex = function(array, obj, iteratee, context) {
    iteratee = cb(iteratee, context, 1);
    var value = iteratee(obj);
    var low = 0, high = getLength(array);
    while (low < high) {
      var mid = Math.floor((low + high) / 2);
      if (iteratee(array[mid]) < value) low = mid + 1; else high = mid;
    }
    return low;
  };

  // Generator function to create the indexOf and lastIndexOf functions
  function createIndexFinder(dir, predicateFind, sortedIndex) {
    return function(array, item, idx) {
      var i = 0, length = getLength(array);
      if (typeof idx == 'number') {
        if (dir > 0) {
            i = idx >= 0 ? idx : Math.max(idx + length, i);
        } else {
            length = idx >= 0 ? Math.min(idx + 1, length) : idx + length + 1;
        }
      } else if (sortedIndex && idx && length) {
        idx = sortedIndex(array, item);
        return array[idx] === item ? idx : -1;
      }
      if (item !== item) {
        idx = predicateFind(slice.call(array, i, length), _.isNaN);
        return idx >= 0 ? idx + i : -1;
      }
      for (idx = dir > 0 ? i : length - 1; idx >= 0 && idx < length; idx += dir) {
        if (array[idx] === item) return idx;
      }
      return -1;
    };
  }

  // Return the position of the first occurrence of an item in an array,
  // or -1 if the item is not included in the array.
  // If the array is large and already in sort order, pass `true`
  // for **isSorted** to use binary search.
  _.indexOf = createIndexFinder(1, _.findIndex, _.sortedIndex);
  _.lastIndexOf = createIndexFinder(-1, _.findLastIndex);

  // Generate an integer Array containing an arithmetic progression. A port of
  // the native Python `range()` function. See
  // [the Python documentation](http://docs.python.org/library/functions.html#range).
  _.range = function(start, stop, step) {
    if (stop == null) {
      stop = start || 0;
      start = 0;
    }
    step = step || 1;

    var length = Math.max(Math.ceil((stop - start) / step), 0);
    var range = Array(length);

    for (var idx = 0; idx < length; idx++, start += step) {
      range[idx] = start;
    }

    return range;
  };

  // Function (ahem) Functions
  // ------------------

  // Determines whether to execute a function as a constructor
  // or a normal function with the provided arguments
  var executeBound = function(sourceFunc, boundFunc, context, callingContext, args) {
    if (!(callingContext instanceof boundFunc)) return sourceFunc.apply(context, args);
    var self = baseCreate(sourceFunc.prototype);
    var result = sourceFunc.apply(self, args);
    if (_.isObject(result)) return result;
    return self;
  };

  // Create a function bound to a given object (assigning `this`, and arguments,
  // optionally). Delegates to **ECMAScript 5**'s native `Function.bind` if
  // available.
  _.bind = function(func, context) {
    if (nativeBind && func.bind === nativeBind) return nativeBind.apply(func, slice.call(arguments, 1));
    if (!_.isFunction(func)) throw new TypeError('Bind must be called on a function');
    var args = slice.call(arguments, 2);
    var bound = function() {
      return executeBound(func, bound, context, this, args.concat(slice.call(arguments)));
    };
    return bound;
  };

  // Partially apply a function by creating a version that has had some of its
  // arguments pre-filled, without changing its dynamic `this` context. _ acts
  // as a placeholder, allowing any combination of arguments to be pre-filled.
  _.partial = function(func) {
    var boundArgs = slice.call(arguments, 1);
    var bound = function() {
      var position = 0, length = boundArgs.length;
      var args = Array(length);
      for (var i = 0; i < length; i++) {
        args[i] = boundArgs[i] === _ ? arguments[position++] : boundArgs[i];
      }
      while (position < arguments.length) args.push(arguments[position++]);
      return executeBound(func, bound, this, this, args);
    };
    return bound;
  };

  // Bind a number of an object's methods to that object. Remaining arguments
  // are the method names to be bound. Useful for ensuring that all callbacks
  // defined on an object belong to it.
  _.bindAll = function(obj) {
    var i, length = arguments.length, key;
    if (length <= 1) throw new Error('bindAll must be passed function names');
    for (i = 1; i < length; i++) {
      key = arguments[i];
      obj[key] = _.bind(obj[key], obj);
    }
    return obj;
  };

  // Memoize an expensive function by storing its results.
  _.memoize = function(func, hasher) {
    var memoize = function(key) {
      var cache = memoize.cache;
      var address = '' + (hasher ? hasher.apply(this, arguments) : key);
      if (!_.has(cache, address)) cache[address] = func.apply(this, arguments);
      return cache[address];
    };
    memoize.cache = {};
    return memoize;
  };

  // Delays a function for the given number of milliseconds, and then calls
  // it with the arguments supplied.
  _.delay = function(func, wait) {
    var args = slice.call(arguments, 2);
    return setTimeout(function(){
      return func.apply(null, args);
    }, wait);
  };

  // Defers a function, scheduling it to run after the current call stack has
  // cleared.
  _.defer = _.partial(_.delay, _, 1);

  // Returns a function, that, when invoked, will only be triggered at most once
  // during a given window of time. Normally, the throttled function will run
  // as much as it can, without ever going more than once per `wait` duration;
  // but if you'd like to disable the execution on the leading edge, pass
  // `{leading: false}`. To disable execution on the trailing edge, ditto.
  _.throttle = function(func, wait, options) {
    var context, args, result;
    var timeout = null;
    var previous = 0;
    if (!options) options = {};
    var later = function() {
      previous = options.leading === false ? 0 : _.now();
      timeout = null;
      result = func.apply(context, args);
      if (!timeout) context = args = null;
    };
    return function() {
      var now = _.now();
      if (!previous && options.leading === false) previous = now;
      var remaining = wait - (now - previous);
      context = this;
      args = arguments;
      if (remaining <= 0 || remaining > wait) {
        if (timeout) {
          clearTimeout(timeout);
          timeout = null;
        }
        previous = now;
        result = func.apply(context, args);
        if (!timeout) context = args = null;
      } else if (!timeout && options.trailing !== false) {
        timeout = setTimeout(later, remaining);
      }
      return result;
    };
  };

  // Returns a function, that, as long as it continues to be invoked, will not
  // be triggered. The function will be called after it stops being called for
  // N milliseconds. If `immediate` is passed, trigger the function on the
  // leading edge, instead of the trailing.
  _.debounce = function(func, wait, immediate) {
    var timeout, args, context, timestamp, result;

    var later = function() {
      var last = _.now() - timestamp;

      if (last < wait && last >= 0) {
        timeout = setTimeout(later, wait - last);
      } else {
        timeout = null;
        if (!immediate) {
          result = func.apply(context, args);
          if (!timeout) context = args = null;
        }
      }
    };

    return function() {
      context = this;
      args = arguments;
      timestamp = _.now();
      var callNow = immediate && !timeout;
      if (!timeout) timeout = setTimeout(later, wait);
      if (callNow) {
        result = func.apply(context, args);
        context = args = null;
      }

      return result;
    };
  };

  // Returns the first function passed as an argument to the second,
  // allowing you to adjust arguments, run code before and after, and
  // conditionally execute the original function.
  _.wrap = function(func, wrapper) {
    return _.partial(wrapper, func);
  };

  // Returns a negated version of the passed-in predicate.
  _.negate = function(predicate) {
    return function() {
      return !predicate.apply(this, arguments);
    };
  };

  // Returns a function that is the composition of a list of functions, each
  // consuming the return value of the function that follows.
  _.compose = function() {
    var args = arguments;
    var start = args.length - 1;
    return function() {
      var i = start;
      var result = args[start].apply(this, arguments);
      while (i--) result = args[i].call(this, result);
      return result;
    };
  };

  // Returns a function that will only be executed on and after the Nth call.
  _.after = function(times, func) {
    return function() {
      if (--times < 1) {
        return func.apply(this, arguments);
      }
    };
  };

  // Returns a function that will only be executed up to (but not including) the Nth call.
  _.before = function(times, func) {
    var memo;
    return function() {
      if (--times > 0) {
        memo = func.apply(this, arguments);
      }
      if (times <= 1) func = null;
      return memo;
    };
  };

  // Returns a function that will be executed at most one time, no matter how
  // often you call it. Useful for lazy initialization.
  _.once = _.partial(_.before, 2);

  // Object Functions
  // ----------------

  // Keys in IE < 9 that won't be iterated by `for key in ...` and thus missed.
  var hasEnumBug = !{toString: null}.propertyIsEnumerable('toString');
  var nonEnumerableProps = ['valueOf', 'isPrototypeOf', 'toString',
                      'propertyIsEnumerable', 'hasOwnProperty', 'toLocaleString'];

  function collectNonEnumProps(obj, keys) {
    var nonEnumIdx = nonEnumerableProps.length;
    var constructor = obj.constructor;
    var proto = (_.isFunction(constructor) && constructor.prototype) || ObjProto;

    // Constructor is a special case.
    var prop = 'constructor';
    if (_.has(obj, prop) && !_.contains(keys, prop)) keys.push(prop);

    while (nonEnumIdx--) {
      prop = nonEnumerableProps[nonEnumIdx];
      if (prop in obj && obj[prop] !== proto[prop] && !_.contains(keys, prop)) {
        keys.push(prop);
      }
    }
  }

  // Retrieve the names of an object's own properties.
  // Delegates to **ECMAScript 5**'s native `Object.keys`
  _.keys = function(obj) {
    if (!_.isObject(obj)) return [];
    if (nativeKeys) return nativeKeys(obj);
    var keys = [];
    for (var key in obj) if (_.has(obj, key)) keys.push(key);
    // Ahem, IE < 9.
    if (hasEnumBug) collectNonEnumProps(obj, keys);
    return keys;
  };

  // Retrieve all the property names of an object.
  _.allKeys = function(obj) {
    if (!_.isObject(obj)) return [];
    var keys = [];
    for (var key in obj) keys.push(key);
    // Ahem, IE < 9.
    if (hasEnumBug) collectNonEnumProps(obj, keys);
    return keys;
  };

  // Retrieve the values of an object's properties.
  _.values = function(obj) {
    var keys = _.keys(obj);
    var length = keys.length;
    var values = Array(length);
    for (var i = 0; i < length; i++) {
      values[i] = obj[keys[i]];
    }
    return values;
  };

  // Returns the results of applying the iteratee to each element of the object
  // In contrast to _.map it returns an object
  _.mapObject = function(obj, iteratee, context) {
    iteratee = cb(iteratee, context);
    var keys =  _.keys(obj),
          length = keys.length,
          results = {},
          currentKey;
      for (var index = 0; index < length; index++) {
        currentKey = keys[index];
        results[currentKey] = iteratee(obj[currentKey], currentKey, obj);
      }
      return results;
  };

  // Convert an object into a list of `[key, value]` pairs.
  _.pairs = function(obj) {
    var keys = _.keys(obj);
    var length = keys.length;
    var pairs = Array(length);
    for (var i = 0; i < length; i++) {
      pairs[i] = [keys[i], obj[keys[i]]];
    }
    return pairs;
  };

  // Invert the keys and values of an object. The values must be serializable.
  _.invert = function(obj) {
    var result = {};
    var keys = _.keys(obj);
    for (var i = 0, length = keys.length; i < length; i++) {
      result[obj[keys[i]]] = keys[i];
    }
    return result;
  };

  // Return a sorted list of the function names available on the object.
  // Aliased as `methods`
  _.functions = _.methods = function(obj) {
    var names = [];
    for (var key in obj) {
      if (_.isFunction(obj[key])) names.push(key);
    }
    return names.sort();
  };

  // Extend a given object with all the properties in passed-in object(s).
  _.extend = createAssigner(_.allKeys);

  // Assigns a given object with all the own properties in the passed-in object(s)
  // (https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Object/assign)
  _.extendOwn = _.assign = createAssigner(_.keys);

  // Returns the first key on an object that passes a predicate test
  _.findKey = function(obj, predicate, context) {
    predicate = cb(predicate, context);
    var keys = _.keys(obj), key;
    for (var i = 0, length = keys.length; i < length; i++) {
      key = keys[i];
      if (predicate(obj[key], key, obj)) return key;
    }
  };

  // Return a copy of the object only containing the whitelisted properties.
  _.pick = function(object, oiteratee, context) {
    var result = {}, obj = object, iteratee, keys;
    if (obj == null) return result;
    if (_.isFunction(oiteratee)) {
      keys = _.allKeys(obj);
      iteratee = optimizeCb(oiteratee, context);
    } else {
      keys = flatten(arguments, false, false, 1);
      iteratee = function(value, key, obj) { return key in obj; };
      obj = Object(obj);
    }
    for (var i = 0, length = keys.length; i < length; i++) {
      var key = keys[i];
      var value = obj[key];
      if (iteratee(value, key, obj)) result[key] = value;
    }
    return result;
  };

   // Return a copy of the object without the blacklisted properties.
  _.omit = function(obj, iteratee, context) {
    if (_.isFunction(iteratee)) {
      iteratee = _.negate(iteratee);
    } else {
      var keys = _.map(flatten(arguments, false, false, 1), String);
      iteratee = function(value, key) {
        return !_.contains(keys, key);
      };
    }
    return _.pick(obj, iteratee, context);
  };

  // Fill in a given object with default properties.
  _.defaults = createAssigner(_.allKeys, true);

  // Creates an object that inherits from the given prototype object.
  // If additional properties are provided then they will be added to the
  // created object.
  _.create = function(prototype, props) {
    var result = baseCreate(prototype);
    if (props) _.extendOwn(result, props);
    return result;
  };

  // Create a (shallow-cloned) duplicate of an object.
  _.clone = function(obj) {
    if (!_.isObject(obj)) return obj;
    return _.isArray(obj) ? obj.slice() : _.extend({}, obj);
  };

  // Invokes interceptor with the obj, and then returns obj.
  // The primary purpose of this method is to "tap into" a method chain, in
  // order to perform operations on intermediate results within the chain.
  _.tap = function(obj, interceptor) {
    interceptor(obj);
    return obj;
  };

  // Returns whether an object has a given set of `key:value` pairs.
  _.isMatch = function(object, attrs) {
    var keys = _.keys(attrs), length = keys.length;
    if (object == null) return !length;
    var obj = Object(object);
    for (var i = 0; i < length; i++) {
      var key = keys[i];
      if (attrs[key] !== obj[key] || !(key in obj)) return false;
    }
    return true;
  };


  // Internal recursive comparison function for `isEqual`.
  var eq = function(a, b, aStack, bStack) {
    // Identical objects are equal. `0 === -0`, but they aren't identical.
    // See the [Harmony `egal` proposal](http://wiki.ecmascript.org/doku.php?id=harmony:egal).
    if (a === b) return a !== 0 || 1 / a === 1 / b;
    // A strict comparison is necessary because `null == undefined`.
    if (a == null || b == null) return a === b;
    // Unwrap any wrapped objects.
    if (a instanceof _) a = a._wrapped;
    if (b instanceof _) b = b._wrapped;
    // Compare `[[Class]]` names.
    var className = toString.call(a);
    if (className !== toString.call(b)) return false;
    switch (className) {
      // Strings, numbers, regular expressions, dates, and booleans are compared by value.
      case '[object RegExp]':
      // RegExps are coerced to strings for comparison (Note: '' + /a/i === '/a/i')
      case '[object String]':
        // Primitives and their corresponding object wrappers are equivalent; thus, `"5"` is
        // equivalent to `new String("5")`.
        return '' + a === '' + b;
      case '[object Number]':
        // `NaN`s are equivalent, but non-reflexive.
        // Object(NaN) is equivalent to NaN
        if (+a !== +a) return +b !== +b;
        // An `egal` comparison is performed for other numeric values.
        return +a === 0 ? 1 / +a === 1 / b : +a === +b;
      case '[object Date]':
      case '[object Boolean]':
        // Coerce dates and booleans to numeric primitive values. Dates are compared by their
        // millisecond representations. Note that invalid dates with millisecond representations
        // of `NaN` are not equivalent.
        return +a === +b;
    }

    var areArrays = className === '[object Array]';
    if (!areArrays) {
      if (typeof a != 'object' || typeof b != 'object') return false;

      // Objects with different constructors are not equivalent, but `Object`s or `Array`s
      // from different frames are.
      var aCtor = a.constructor, bCtor = b.constructor;
      if (aCtor !== bCtor && !(_.isFunction(aCtor) && aCtor instanceof aCtor &&
                               _.isFunction(bCtor) && bCtor instanceof bCtor)
                          && ('constructor' in a && 'constructor' in b)) {
        return false;
      }
    }
    // Assume equality for cyclic structures. The algorithm for detecting cyclic
    // structures is adapted from ES 5.1 section 15.12.3, abstract operation `JO`.

    // Initializing stack of traversed objects.
    // It's done here since we only need them for objects and arrays comparison.
    aStack = aStack || [];
    bStack = bStack || [];
    var length = aStack.length;
    while (length--) {
      // Linear search. Performance is inversely proportional to the number of
      // unique nested structures.
      if (aStack[length] === a) return bStack[length] === b;
    }

    // Add the first object to the stack of traversed objects.
    aStack.push(a);
    bStack.push(b);

    // Recursively compare objects and arrays.
    if (areArrays) {
      // Compare array lengths to determine if a deep comparison is necessary.
      length = a.length;
      if (length !== b.length) return false;
      // Deep compare the contents, ignoring non-numeric properties.
      while (length--) {
        if (!eq(a[length], b[length], aStack, bStack)) return false;
      }
    } else {
      // Deep compare objects.
      var keys = _.keys(a), key;
      length = keys.length;
      // Ensure that both objects contain the same number of properties before comparing deep equality.
      if (_.keys(b).length !== length) return false;
      while (length--) {
        // Deep compare each member
        key = keys[length];
        if (!(_.has(b, key) && eq(a[key], b[key], aStack, bStack))) return false;
      }
    }
    // Remove the first object from the stack of traversed objects.
    aStack.pop();
    bStack.pop();
    return true;
  };

  // Perform a deep comparison to check if two objects are equal.
  _.isEqual = function(a, b) {
    return eq(a, b);
  };

  // Is a given array, string, or object empty?
  // An "empty" object has no enumerable own-properties.
  _.isEmpty = function(obj) {
    if (obj == null) return true;
    if (isArrayLike(obj) && (_.isArray(obj) || _.isString(obj) || _.isArguments(obj))) return obj.length === 0;
    return _.keys(obj).length === 0;
  };

  // Is a given value a DOM element?
  _.isElement = function(obj) {
    return !!(obj && obj.nodeType === 1);
  };

  // Is a given value an array?
  // Delegates to ECMA5's native Array.isArray
  _.isArray = nativeIsArray || function(obj) {
    return toString.call(obj) === '[object Array]';
  };

  // Is a given variable an object?
  _.isObject = function(obj) {
    var type = typeof obj;
    return type === 'function' || type === 'object' && !!obj;
  };

  // Add some isType methods: isArguments, isFunction, isString, isNumber, isDate, isRegExp, isError.
  _.each(['Arguments', 'Function', 'String', 'Number', 'Date', 'RegExp', 'Error'], function(name) {
    _['is' + name] = function(obj) {
      return toString.call(obj) === '[object ' + name + ']';
    };
  });

  // Define a fallback version of the method in browsers (ahem, IE < 9), where
  // there isn't any inspectable "Arguments" type.
  if (!_.isArguments(arguments)) {
    _.isArguments = function(obj) {
      return _.has(obj, 'callee');
    };
  }

  // Optimize `isFunction` if appropriate. Work around some typeof bugs in old v8,
  // IE 11 (#1621), and in Safari 8 (#1929).
  if (typeof /./ != 'function' && typeof Int8Array != 'object') {
    _.isFunction = function(obj) {
      return typeof obj == 'function' || false;
    };
  }

  // Is a given object a finite number?
  _.isFinite = function(obj) {
    return isFinite(obj) && !isNaN(parseFloat(obj));
  };

  // Is the given value `NaN`? (NaN is the only number which does not equal itself).
  _.isNaN = function(obj) {
    return _.isNumber(obj) && obj !== +obj;
  };

  // Is a given value a boolean?
  _.isBoolean = function(obj) {
    return obj === true || obj === false || toString.call(obj) === '[object Boolean]';
  };

  // Is a given value equal to null?
  _.isNull = function(obj) {
    return obj === null;
  };

  // Is a given variable undefined?
  _.isUndefined = function(obj) {
    return obj === void 0;
  };

  // Shortcut function for checking if an object has a given property directly
  // on itself (in other words, not on a prototype).
  _.has = function(obj, key) {
    return obj != null && hasOwnProperty.call(obj, key);
  };

  // Utility Functions
  // -----------------

  // Run Underscore.js in *noConflict* mode, returning the `_` variable to its
  // previous owner. Returns a reference to the Underscore object.
  _.noConflict = function() {
    root._ = previousUnderscore;
    return this;
  };

  // Keep the identity function around for default iteratees.
  _.identity = function(value) {
    return value;
  };

  // Predicate-generating functions. Often useful outside of Underscore.
  _.constant = function(value) {
    return function() {
      return value;
    };
  };

  _.noop = function(){};

  _.property = property;

  // Generates a function for a given object that returns a given property.
  _.propertyOf = function(obj) {
    return obj == null ? function(){} : function(key) {
      return obj[key];
    };
  };

  // Returns a predicate for checking whether an object has a given set of
  // `key:value` pairs.
  _.matcher = _.matches = function(attrs) {
    attrs = _.extendOwn({}, attrs);
    return function(obj) {
      return _.isMatch(obj, attrs);
    };
  };

  // Run a function **n** times.
  _.times = function(n, iteratee, context) {
    var accum = Array(Math.max(0, n));
    iteratee = optimizeCb(iteratee, context, 1);
    for (var i = 0; i < n; i++) accum[i] = iteratee(i);
    return accum;
  };

  // Return a random integer between min and max (inclusive).
  _.random = function(min, max) {
    if (max == null) {
      max = min;
      min = 0;
    }
    return min + Math.floor(Math.random() * (max - min + 1));
  };

  // A (possibly faster) way to get the current timestamp as an integer.
  _.now = Date.now || function() {
    return new Date().getTime();
  };

   // List of HTML entities for escaping.
  var escapeMap = {
    '&': '&amp;',
    '<': '&lt;',
    '>': '&gt;',
    '"': '&quot;',
    "'": '&#x27;',
    '`': '&#x60;'
  };
  var unescapeMap = _.invert(escapeMap);

  // Functions for escaping and unescaping strings to/from HTML interpolation.
  var createEscaper = function(map) {
    var escaper = function(match) {
      return map[match];
    };
    // Regexes for identifying a key that needs to be escaped
    var source = '(?:' + _.keys(map).join('|') + ')';
    var testRegexp = RegExp(source);
    var replaceRegexp = RegExp(source, 'g');
    return function(string) {
      string = string == null ? '' : '' + string;
      return testRegexp.test(string) ? string.replace(replaceRegexp, escaper) : string;
    };
  };
  _.escape = createEscaper(escapeMap);
  _.unescape = createEscaper(unescapeMap);

  // If the value of the named `property` is a function then invoke it with the
  // `object` as context; otherwise, return it.
  _.result = function(object, property, fallback) {
    var value = object == null ? void 0 : object[property];
    if (value === void 0) {
      value = fallback;
    }
    return _.isFunction(value) ? value.call(object) : value;
  };

  // Generate a unique integer id (unique within the entire client session).
  // Useful for temporary DOM ids.
  var idCounter = 0;
  _.uniqueId = function(prefix) {
    var id = ++idCounter + '';
    return prefix ? prefix + id : id;
  };

  // By default, Underscore uses ERB-style template delimiters, change the
  // following template settings to use alternative delimiters.
  _.templateSettings = {
    evaluate    : /<%([\s\S]+?)%>/g,
    interpolate : /<%=([\s\S]+?)%>/g,
    escape      : /<%-([\s\S]+?)%>/g
  };

  // When customizing `templateSettings`, if you don't want to define an
  // interpolation, evaluation or escaping regex, we need one that is
  // guaranteed not to match.
  var noMatch = /(.)^/;

  // Certain characters need to be escaped so that they can be put into a
  // string literal.
  var escapes = {
    "'":      "'",
    '\\':     '\\',
    '\r':     'r',
    '\n':     'n',
    '\u2028': 'u2028',
    '\u2029': 'u2029'
  };

  var escaper = /\\|'|\r|\n|\u2028|\u2029/g;

  var escapeChar = function(match) {
    return '\\' + escapes[match];
  };

  // JavaScript micro-templating, similar to John Resig's implementation.
  // Underscore templating handles arbitrary delimiters, preserves whitespace,
  // and correctly escapes quotes within interpolated code.
  // NB: `oldSettings` only exists for backwards compatibility.
  _.template = function(text, settings, oldSettings) {
    if (!settings && oldSettings) settings = oldSettings;
    settings = _.defaults({}, settings, _.templateSettings);

    // Combine delimiters into one regular expression via alternation.
    var matcher = RegExp([
      (settings.escape || noMatch).source,
      (settings.interpolate || noMatch).source,
      (settings.evaluate || noMatch).source
    ].join('|') + '|$', 'g');

    // Compile the template source, escaping string literals appropriately.
    var index = 0;
    var source = "__p+='";
    text.replace(matcher, function(match, escape, interpolate, evaluate, offset) {
      source += text.slice(index, offset).replace(escaper, escapeChar);
      index = offset + match.length;

      if (escape) {
        source += "'+\n((__t=(" + escape + "))==null?'':_.escape(__t))+\n'";
      } else if (interpolate) {
        source += "'+\n((__t=(" + interpolate + "))==null?'':__t)+\n'";
      } else if (evaluate) {
        source += "';\n" + evaluate + "\n__p+='";
      }

      // Adobe VMs need the match returned to produce the correct offest.
      return match;
    });
    source += "';\n";

    // If a variable is not specified, place data values in local scope.
    if (!settings.variable) source = 'with(obj||{}){\n' + source + '}\n';

    source = "var __t,__p='',__j=Array.prototype.join," +
      "print=function(){__p+=__j.call(arguments,'');};\n" +
      source + 'return __p;\n';

    try {
      var render = new Function(settings.variable || 'obj', '_', source);
    } catch (e) {
      e.source = source;
      throw e;
    }

    var template = function(data) {
      return render.call(this, data, _);
    };

    // Provide the compiled source as a convenience for precompilation.
    var argument = settings.variable || 'obj';
    template.source = 'function(' + argument + '){\n' + source + '}';

    return template;
  };

  // Add a "chain" function. Start chaining a wrapped Underscore object.
  _.chain = function(obj) {
    var instance = _(obj);
    instance._chain = true;
    return instance;
  };

  // OOP
  // ---------------
  // If Underscore is called as a function, it returns a wrapped object that
  // can be used OO-style. This wrapper holds altered versions of all the
  // underscore functions. Wrapped objects may be chained.

  // Helper function to continue chaining intermediate results.
  var result = function(instance, obj) {
    return instance._chain ? _(obj).chain() : obj;
  };

  // Add your own custom functions to the Underscore object.
  _.mixin = function(obj) {
    _.each(_.functions(obj), function(name) {
      var func = _[name] = obj[name];
      _.prototype[name] = function() {
        var args = [this._wrapped];
        push.apply(args, arguments);
        return result(this, func.apply(_, args));
      };
    });
  };

  // Add all of the Underscore functions to the wrapper object.
  _.mixin(_);

  // Add all mutator Array functions to the wrapper.
  _.each(['pop', 'push', 'reverse', 'shift', 'sort', 'splice', 'unshift'], function(name) {
    var method = ArrayProto[name];
    _.prototype[name] = function() {
      var obj = this._wrapped;
      method.apply(obj, arguments);
      if ((name === 'shift' || name === 'splice') && obj.length === 0) delete obj[0];
      return result(this, obj);
    };
  });

  // Add all accessor Array functions to the wrapper.
  _.each(['concat', 'join', 'slice'], function(name) {
    var method = ArrayProto[name];
    _.prototype[name] = function() {
      return result(this, method.apply(this._wrapped, arguments));
    };
  });

  // Extracts the result from a wrapped and chained object.
  _.prototype.value = function() {
    return this._wrapped;
  };

  // Provide unwrapping proxy for some methods used in engine operations
  // such as arithmetic and JSON stringification.
  _.prototype.valueOf = _.prototype.toJSON = _.prototype.value;

  _.prototype.toString = function() {
    return '' + this._wrapped;
  };

  // AMD registration happens at the end for compatibility with AMD loaders
  // that may not enforce next-turn semantics on modules. Even though general
  // practice for AMD registration is to be anonymous, underscore registers
  // as a named module because, like jQuery, it is a base library that is
  // popular enough to be bundled in a third party lib, but not be part of
  // an AMD load request. Those cases could generate an error when an
  // anonymous define() is called outside of a loader request.
  if (typeof define === 'function' && define.amd) {
    define('underscore', [], function() {
      return _;
    });
  }
}.call(this));

},{}],54:[function(require,module,exports){
/*! VelocityJS.org (1.5.0). (C) 2014 Julian Shapiro. MIT @license: en.wikipedia.org/wiki/MIT_License */

/*************************
 Velocity jQuery Shim
 *************************/

/*! VelocityJS.org jQuery Shim (1.0.1). (C) 2014 The jQuery Foundation. MIT @license: en.wikipedia.org/wiki/MIT_License. */

/* This file contains the jQuery functions that Velocity relies on, thereby removing Velocity's dependency on a full copy of jQuery, and allowing it to work in any environment. */
/* These shimmed functions are only used if jQuery isn't present. If both this shim and jQuery are loaded, Velocity defaults to jQuery proper. */
/* Browser support: Using this shim instead of jQuery proper removes support for IE8. */

(function(window) {
	"use strict";
	/***************
	 Setup
	 ***************/

	/* If jQuery is already loaded, there's no point in loading this shim. */
	if (window.jQuery) {
		return;
	}

	/* jQuery base. */
	var $ = function(selector, context) {
		return new $.fn.init(selector, context);
	};

	/********************
	 Private Methods
	 ********************/

	/* jQuery */
	$.isWindow = function(obj) {
		/* jshint eqeqeq: false */
		return obj && obj === obj.window;
	};

	/* jQuery */
	$.type = function(obj) {
		if (!obj) {
			return obj + "";
		}

		return typeof obj === "object" || typeof obj === "function" ?
				class2type[toString.call(obj)] || "object" :
				typeof obj;
	};

	/* jQuery */
	$.isArray = Array.isArray || function(obj) {
		return $.type(obj) === "array";
	};

	/* jQuery */
	function isArraylike(obj) {
		var length = obj.length,
				type = $.type(obj);

		if (type === "function" || $.isWindow(obj)) {
			return false;
		}

		if (obj.nodeType === 1 && length) {
			return true;
		}

		return type === "array" || length === 0 || typeof length === "number" && length > 0 && (length - 1) in obj;
	}

	/***************
	 $ Methods
	 ***************/

	/* jQuery: Support removed for IE<9. */
	$.isPlainObject = function(obj) {
		var key;

		if (!obj || $.type(obj) !== "object" || obj.nodeType || $.isWindow(obj)) {
			return false;
		}

		try {
			if (obj.constructor &&
					!hasOwn.call(obj, "constructor") &&
					!hasOwn.call(obj.constructor.prototype, "isPrototypeOf")) {
				return false;
			}
		} catch (e) {
			return false;
		}

		for (key in obj) {
		}

		return key === undefined || hasOwn.call(obj, key);
	};

	/* jQuery */
	$.each = function(obj, callback, args) {
		var value,
				i = 0,
				length = obj.length,
				isArray = isArraylike(obj);

		if (args) {
			if (isArray) {
				for (; i < length; i++) {
					value = callback.apply(obj[i], args);

					if (value === false) {
						break;
					}
				}
			} else {
				for (i in obj) {
					if (!obj.hasOwnProperty(i)) {
						continue;
					}
					value = callback.apply(obj[i], args);

					if (value === false) {
						break;
					}
				}
			}

		} else {
			if (isArray) {
				for (; i < length; i++) {
					value = callback.call(obj[i], i, obj[i]);

					if (value === false) {
						break;
					}
				}
			} else {
				for (i in obj) {
					if (!obj.hasOwnProperty(i)) {
						continue;
					}
					value = callback.call(obj[i], i, obj[i]);

					if (value === false) {
						break;
					}
				}
			}
		}

		return obj;
	};

	/* Custom */
	$.data = function(node, key, value) {
		/* $.getData() */
		if (value === undefined) {
			var getId = node[$.expando],
					store = getId && cache[getId];

			if (key === undefined) {
				return store;
			} else if (store) {
				if (key in store) {
					return store[key];
				}
			}
			/* $.setData() */
		} else if (key !== undefined) {
			var setId = node[$.expando] || (node[$.expando] = ++$.uuid);

			cache[setId] = cache[setId] || {};
			cache[setId][key] = value;

			return value;
		}
	};

	/* Custom */
	$.removeData = function(node, keys) {
		var id = node[$.expando],
				store = id && cache[id];

		if (store) {
			// Cleanup the entire store if no keys are provided.
			if (!keys) {
				delete cache[id];
			} else {
				$.each(keys, function(_, key) {
					delete store[key];
				});
			}
		}
	};

	/* jQuery */
	$.extend = function() {
		var src, copyIsArray, copy, name, options, clone,
				target = arguments[0] || {},
				i = 1,
				length = arguments.length,
				deep = false;

		if (typeof target === "boolean") {
			deep = target;

			target = arguments[i] || {};
			i++;
		}

		if (typeof target !== "object" && $.type(target) !== "function") {
			target = {};
		}

		if (i === length) {
			target = this;
			i--;
		}

		for (; i < length; i++) {
			if ((options = arguments[i])) {
				for (name in options) {
					if (!options.hasOwnProperty(name)) {
						continue;
					}
					src = target[name];
					copy = options[name];

					if (target === copy) {
						continue;
					}

					if (deep && copy && ($.isPlainObject(copy) || (copyIsArray = $.isArray(copy)))) {
						if (copyIsArray) {
							copyIsArray = false;
							clone = src && $.isArray(src) ? src : [];

						} else {
							clone = src && $.isPlainObject(src) ? src : {};
						}

						target[name] = $.extend(deep, clone, copy);

					} else if (copy !== undefined) {
						target[name] = copy;
					}
				}
			}
		}

		return target;
	};

	/* jQuery 1.4.3 */
	$.queue = function(elem, type, data) {
		function $makeArray(arr, results) {
			var ret = results || [];

			if (arr) {
				if (isArraylike(Object(arr))) {
					/* $.merge */
					(function(first, second) {
						var len = +second.length,
								j = 0,
								i = first.length;

						while (j < len) {
							first[i++] = second[j++];
						}

						if (len !== len) {
							while (second[j] !== undefined) {
								first[i++] = second[j++];
							}
						}

						first.length = i;

						return first;
					})(ret, typeof arr === "string" ? [arr] : arr);
				} else {
					[].push.call(ret, arr);
				}
			}

			return ret;
		}

		if (!elem) {
			return;
		}

		type = (type || "fx") + "queue";

		var q = $.data(elem, type);

		if (!data) {
			return q || [];
		}

		if (!q || $.isArray(data)) {
			q = $.data(elem, type, $makeArray(data));
		} else {
			q.push(data);
		}

		return q;
	};

	/* jQuery 1.4.3 */
	$.dequeue = function(elems, type) {
		/* Custom: Embed element iteration. */
		$.each(elems.nodeType ? [elems] : elems, function(i, elem) {
			type = type || "fx";

			var queue = $.queue(elem, type),
					fn = queue.shift();

			if (fn === "inprogress") {
				fn = queue.shift();
			}

			if (fn) {
				if (type === "fx") {
					queue.unshift("inprogress");
				}

				fn.call(elem, function() {
					$.dequeue(elem, type);
				});
			}
		});
	};

	/******************
	 $.fn Methods
	 ******************/

	/* jQuery */
	$.fn = $.prototype = {
		init: function(selector) {
			/* Just return the element wrapped inside an array; don't proceed with the actual jQuery node wrapping process. */
			if (selector.nodeType) {
				this[0] = selector;

				return this;
			} else {
				throw new Error("Not a DOM node.");
			}
		},
		offset: function() {
			/* jQuery altered code: Dropped disconnected DOM node checking. */
			var box = this[0].getBoundingClientRect ? this[0].getBoundingClientRect() : {top: 0, left: 0};

			return {
				top: box.top + (window.pageYOffset || document.scrollTop || 0) - (document.clientTop || 0),
				left: box.left + (window.pageXOffset || document.scrollLeft || 0) - (document.clientLeft || 0)
			};
		},
		position: function() {
			/* jQuery */
			function offsetParentFn(elem) {
				var offsetParent = elem.offsetParent;

				while (offsetParent && (offsetParent.nodeName.toLowerCase() !== "html" && offsetParent.style && offsetParent.style.position.toLowerCase() === "static")) {
					offsetParent = offsetParent.offsetParent;
				}

				return offsetParent || document;
			}

			/* Zepto */
			var elem = this[0],
					offsetParent = offsetParentFn(elem),
					offset = this.offset(),
					parentOffset = /^(?:body|html)$/i.test(offsetParent.nodeName) ? {top: 0, left: 0} : $(offsetParent).offset();

			offset.top -= parseFloat(elem.style.marginTop) || 0;
			offset.left -= parseFloat(elem.style.marginLeft) || 0;

			if (offsetParent.style) {
				parentOffset.top += parseFloat(offsetParent.style.borderTopWidth) || 0;
				parentOffset.left += parseFloat(offsetParent.style.borderLeftWidth) || 0;
			}

			return {
				top: offset.top - parentOffset.top,
				left: offset.left - parentOffset.left
			};
		}
	};

	/**********************
	 Private Variables
	 **********************/

	/* For $.data() */
	var cache = {};
	$.expando = "velocity" + (new Date().getTime());
	$.uuid = 0;

	/* For $.queue() */
	var class2type = {},
			hasOwn = class2type.hasOwnProperty,
			toString = class2type.toString;

	var types = "Boolean Number String Function Array Date RegExp Object Error".split(" ");
	for (var i = 0; i < types.length; i++) {
		class2type["[object " + types[i] + "]"] = types[i].toLowerCase();
	}

	/* Makes $(node) possible, without having to call init. */
	$.fn.init.prototype = $.fn;

	/* Globalize Velocity onto the window, and assign its Utilities property. */
	window.Velocity = {Utilities: $};
})(window);

/******************
 Velocity.js
 ******************/

(function(factory) {
	"use strict";
	/* CommonJS module. */
	if (typeof module === "object" && typeof module.exports === "object") {
		module.exports = factory();
		/* AMD module. */
	} else if (typeof define === "function" && define.amd) {
		define(factory);
		/* Browser globals. */
	} else {
		factory();
	}
}(function() {
	"use strict";
	return function(global, window, document, undefined) {

		/***************
		 Summary
		 ***************/

		/*
		 - CSS: CSS stack that works independently from the rest of Velocity.
		 - animate(): Core animation method that iterates over the targeted elements and queues the incoming call onto each element individually.
		 - Pre-Queueing: Prepare the element for animation by instantiating its data cache and processing the call's options.
		 - Queueing: The logic that runs once the call has reached its point of execution in the element's $.queue() stack.
		 Most logic is placed here to avoid risking it becoming stale (if the element's properties have changed).
		 - Pushing: Consolidation of the tween data followed by its push onto the global in-progress calls container.
		 - tick(): The single requestAnimationFrame loop responsible for tweening all in-progress calls.
		 - completeCall(): Handles the cleanup process for each Velocity call.
		 */

		/*********************
		 Helper Functions
		 *********************/

		/* IE detection. Gist: https://gist.github.com/julianshapiro/9098609 */
		var IE = (function() {
			if (document.documentMode) {
				return document.documentMode;
			} else {
				for (var i = 7; i > 4; i--) {
					var div = document.createElement("div");

					div.innerHTML = "<!--[if IE " + i + "]><span></span><![endif]-->";

					if (div.getElementsByTagName("span").length) {
						div = null;

						return i;
					}
				}
			}

			return undefined;
		})();

		/* rAF shim. Gist: https://gist.github.com/julianshapiro/9497513 */
		var rAFShim = (function() {
			var timeLast = 0;

			return window.webkitRequestAnimationFrame || window.mozRequestAnimationFrame || function(callback) {
				var timeCurrent = (new Date()).getTime(),
						timeDelta;

				/* Dynamically set delay on a per-tick basis to match 60fps. */
				/* Technique by Erik Moller. MIT license: https://gist.github.com/paulirish/1579671 */
				timeDelta = Math.max(0, 16 - (timeCurrent - timeLast));
				timeLast = timeCurrent + timeDelta;

				return setTimeout(function() {
					callback(timeCurrent + timeDelta);
				}, timeDelta);
			};
		})();

		var performance = (function() {
			var perf = window.performance || {};

			if (typeof perf.now !== "function") {
				var nowOffset = perf.timing && perf.timing.navigationStart ? perf.timing.navigationStart : (new Date()).getTime();

				perf.now = function() {
					return (new Date()).getTime() - nowOffset;
				};
			}
			return perf;
		})();

		/* Array compacting. Copyright Lo-Dash. MIT License: https://github.com/lodash/lodash/blob/master/LICENSE.txt */
		function compactSparseArray(array) {
			var index = -1,
					length = array ? array.length : 0,
					result = [];

			while (++index < length) {
				var value = array[index];

				if (value) {
					result.push(value);
				}
			}

			return result;
		}

		/**
		 * Shim for "fixing" IE's lack of support (IE < 9) for applying slice
		 * on host objects like NamedNodeMap, NodeList, and HTMLCollection
		 * (technically, since host objects have been implementation-dependent,
		 * at least before ES2015, IE hasn't needed to work this way).
		 * Also works on strings, fixes IE < 9 to allow an explicit undefined
		 * for the 2nd argument (as in Firefox), and prevents errors when
		 * called on other DOM objects.
		 */
		var _slice = (function() {
			var slice = Array.prototype.slice;

			try {
				// Can't be used with DOM elements in IE < 9
				slice.call(document.documentElement);
				return slice;
			} catch (e) { // Fails in IE < 9

				// This will work for genuine arrays, array-like objects, 
				// NamedNodeMap (attributes, entities, notations),
				// NodeList (e.g., getElementsByTagName), HTMLCollection (e.g., childNodes),
				// and will not fail on other DOM objects (as do DOM elements in IE < 9)
				return function(begin, end) {
					var len = this.length;

					if (typeof begin !== "number") {
						begin = 0;
					}
					// IE < 9 gets unhappy with an undefined end argument
					if (typeof end !== "number") {
						end = len;
					}
					// For native Array objects, we use the native slice function
					if (this.slice) {
						return slice.call(this, begin, end);
					}
					// For array like object we handle it ourselves.
					var i,
							cloned = [],
							// Handle negative value for "begin"
							start = (begin >= 0) ? begin : Math.max(0, len + begin),
							// Handle negative value for "end"
							upTo = end < 0 ? len + end : Math.min(end, len),
							// Actual expected size of the slice
							size = upTo - start;

					if (size > 0) {
						cloned = new Array(size);
						if (this.charAt) {
							for (i = 0; i < size; i++) {
								cloned[i] = this.charAt(start + i);
							}
						} else {
							for (i = 0; i < size; i++) {
								cloned[i] = this[start + i];
							}
						}
					}
					return cloned;
				};
			}
		})();

		/* .indexOf doesn't exist in IE<9 */
		var _inArray = (function() {
			if (Array.prototype.includes) {
				return function(arr, val) {
					return arr.includes(val);
				};
			}
			if (Array.prototype.indexOf) {
				return function(arr, val) {
					return arr.indexOf(val) >= 0;
				};
			}
			return function(arr, val) {
				for (var i = 0; i < arr.length; i++) {
					if (arr[i] === val) {
						return true;
					}
				}
				return false;
			};
		});

		function sanitizeElements(elements) {
			/* Unwrap jQuery/Zepto objects. */
			if (Type.isWrapped(elements)) {
				elements = _slice.call(elements);
				/* Wrap a single element in an array so that $.each() can iterate with the element instead of its node's children. */
			} else if (Type.isNode(elements)) {
				elements = [elements];
			}

			return elements;
		}

		var Type = {
			isNumber: function(variable) {
				return (typeof variable === "number");
			},
			isString: function(variable) {
				return (typeof variable === "string");
			},
			isArray: Array.isArray || function(variable) {
				return Object.prototype.toString.call(variable) === "[object Array]";
			},
			isFunction: function(variable) {
				return Object.prototype.toString.call(variable) === "[object Function]";
			},
			isNode: function(variable) {
				return variable && variable.nodeType;
			},
			/* Determine if variable is an array-like wrapped jQuery, Zepto or similar element, or even a NodeList etc. */
			/* NOTE: HTMLFormElements also have a length. */
			isWrapped: function(variable) {
				return variable
						&& variable !== window
						&& Type.isNumber(variable.length)
						&& !Type.isString(variable)
						&& !Type.isFunction(variable)
						&& !Type.isNode(variable)
						&& (variable.length === 0 || Type.isNode(variable[0]));
			},
			isSVG: function(variable) {
				return window.SVGElement && (variable instanceof window.SVGElement);
			},
			isEmptyObject: function(variable) {
				for (var name in variable) {
					if (variable.hasOwnProperty(name)) {
						return false;
					}
				}

				return true;
			}
		};

		/*****************
		 Dependencies
		 *****************/

		var $,
				isJQuery = false;

		if (global.fn && global.fn.jquery) {
			$ = global;
			isJQuery = true;
		} else {
			$ = window.Velocity.Utilities;
		}

		if (IE <= 8 && !isJQuery) {
			throw new Error("Velocity: IE8 and below require jQuery to be loaded before Velocity.");
		} else if (IE <= 7) {
			/* Revert to jQuery's $.animate(), and lose Velocity's extra features. */
			jQuery.fn.velocity = jQuery.fn.animate;

			/* Now that $.fn.velocity is aliased, abort this Velocity declaration. */
			return;
		}

		/*****************
		 Constants
		 *****************/

		var DURATION_DEFAULT = 400,
				EASING_DEFAULT = "swing";

		/*************
		 State
		 *************/

		var Velocity = {
			/* Container for page-wide Velocity state data. */
			State: {
				/* Detect mobile devices to determine if mobileHA should be turned on. */
				isMobile: /Android|webOS|iPhone|iPad|iPod|BlackBerry|IEMobile|Opera Mini/i.test(window.navigator.userAgent),
				/* The mobileHA option's behavior changes on older Android devices (Gingerbread, versions 2.3.3-2.3.7). */
				isAndroid: /Android/i.test(window.navigator.userAgent),
				isGingerbread: /Android 2\.3\.[3-7]/i.test(window.navigator.userAgent),
				isChrome: window.chrome,
				isFirefox: /Firefox/i.test(window.navigator.userAgent),
				/* Create a cached element for re-use when checking for CSS property prefixes. */
				prefixElement: document.createElement("div"),
				/* Cache every prefix match to avoid repeating lookups. */
				prefixMatches: {},
				/* Cache the anchor used for animating window scrolling. */
				scrollAnchor: null,
				/* Cache the browser-specific property names associated with the scroll anchor. */
				scrollPropertyLeft: null,
				scrollPropertyTop: null,
				/* Keep track of whether our RAF tick is running. */
				isTicking: false,
				/* Container for every in-progress call to Velocity. */
				calls: [],
				delayedElements: {
					count: 0
				}
			},
			/* Velocity's custom CSS stack. Made global for unit testing. */
			CSS: {/* Defined below. */},
			/* A shim of the jQuery utility functions used by Velocity -- provided by Velocity's optional jQuery shim. */
			Utilities: $,
			/* Container for the user's custom animation redirects that are referenced by name in place of the properties map argument. */
			Redirects: {/* Manually registered by the user. */},
			Easings: {/* Defined below. */},
			/* Attempt to use ES6 Promises by default. Users can override this with a third-party promises library. */
			Promise: window.Promise,
			/* Velocity option defaults, which can be overriden by the user. */
			defaults: {
				queue: "",
				duration: DURATION_DEFAULT,
				easing: EASING_DEFAULT,
				begin: undefined,
				complete: undefined,
				progress: undefined,
				display: undefined,
				visibility: undefined,
				loop: false,
				delay: false,
				mobileHA: true,
				/* Advanced: Set to false to prevent property values from being cached between consecutive Velocity-initiated chain calls. */
				_cacheValues: true,
				/* Advanced: Set to false if the promise should always resolve on empty element lists. */
				promiseRejectEmpty: true
			},
			/* A design goal of Velocity is to cache data wherever possible in order to avoid DOM requerying. Accordingly, each element has a data cache. */
			init: function(element) {
				$.data(element, "velocity", {
					/* Store whether this is an SVG element, since its properties are retrieved and updated differently than standard HTML elements. */
					isSVG: Type.isSVG(element),
					/* Keep track of whether the element is currently being animated by Velocity.
					 This is used to ensure that property values are not transferred between non-consecutive (stale) calls. */
					isAnimating: false,
					/* A reference to the element's live computedStyle object. Learn more here: https://developer.mozilla.org/en/docs/Web/API/window.getComputedStyle */
					computedStyle: null,
					/* Tween data is cached for each animation on the element so that data can be passed across calls --
					 in particular, end values are used as subsequent start values in consecutive Velocity calls. */
					tweensContainer: null,
					/* The full root property values of each CSS hook being animated on this element are cached so that:
					 1) Concurrently-animating hooks sharing the same root can have their root values' merged into one while tweening.
					 2) Post-hook-injection root values can be transferred over to consecutively chained Velocity calls as starting root values. */
					rootPropertyValueCache: {},
					/* A cache for transform updates, which must be manually flushed via CSS.flushTransformCache(). */
					transformCache: {}
				});
			},
			/* A parallel to jQuery's $.css(), used for getting/setting Velocity's hooked CSS properties. */
			hook: null, /* Defined below. */
			/* Velocity-wide animation time remapping for testing purposes. */
			mock: false,
			version: {major: 1, minor: 5, patch: 1},
			/* Set to 1 or 2 (most verbose) to output debug info to console. */
			debug: false,
			/* Use rAF high resolution timestamp when available */
			timestamp: true,
			/* Pause all animations */
			pauseAll: function(queueName) {
				var currentTime = (new Date()).getTime();

				$.each(Velocity.State.calls, function(i, activeCall) {

					if (activeCall) {

						/* If we have a queueName and this call is not on that queue, skip */
						if (queueName !== undefined && ((activeCall[2].queue !== queueName) || (activeCall[2].queue === false))) {
							return true;
						}

						/* Set call to paused */
						activeCall[5] = {
							resume: false
						};
					}
				});

				/* Pause timers on any currently delayed calls */
				$.each(Velocity.State.delayedElements, function(k, element) {
					if (!element) {
						return;
					}
					pauseDelayOnElement(element, currentTime);
				});
			},
			/* Resume all animations */
			resumeAll: function(queueName) {
				var currentTime = (new Date()).getTime();

				$.each(Velocity.State.calls, function(i, activeCall) {

					if (activeCall) {

						/* If we have a queueName and this call is not on that queue, skip */
						if (queueName !== undefined && ((activeCall[2].queue !== queueName) || (activeCall[2].queue === false))) {
							return true;
						}

						/* Set call to resumed if it was paused */
						if (activeCall[5]) {
							activeCall[5].resume = true;
						}
					}
				});
				/* Resume timers on any currently delayed calls */
				$.each(Velocity.State.delayedElements, function(k, element) {
					if (!element) {
						return;
					}
					resumeDelayOnElement(element, currentTime);
				});
			}
		};

		/* Retrieve the appropriate scroll anchor and property name for the browser: https://developer.mozilla.org/en-US/docs/Web/API/Window.scrollY */
		if (window.pageYOffset !== undefined) {
			Velocity.State.scrollAnchor = window;
			Velocity.State.scrollPropertyLeft = "pageXOffset";
			Velocity.State.scrollPropertyTop = "pageYOffset";
		} else {
			Velocity.State.scrollAnchor = document.documentElement || document.body.parentNode || document.body;
			Velocity.State.scrollPropertyLeft = "scrollLeft";
			Velocity.State.scrollPropertyTop = "scrollTop";
		}

		/* Shorthand alias for jQuery's $.data() utility. */
		function Data(element) {
			/* Hardcode a reference to the plugin name. */
			var response = $.data(element, "velocity");

			/* jQuery <=1.4.2 returns null instead of undefined when no match is found. We normalize this behavior. */
			return response === null ? undefined : response;
		}

		/**************
		 Delay Timer
		 **************/

		function pauseDelayOnElement(element, currentTime) {
			/* Check for any delay timers, and pause the set timeouts (while preserving time data)
			 to be resumed when the "resume" command is issued */
			var data = Data(element);
			if (data && data.delayTimer && !data.delayPaused) {
				data.delayRemaining = data.delay - currentTime + data.delayBegin;
				data.delayPaused = true;
				clearTimeout(data.delayTimer.setTimeout);
			}
		}

		function resumeDelayOnElement(element, currentTime) {
			/* Check for any paused timers and resume */
			var data = Data(element);
			if (data && data.delayTimer && data.delayPaused) {
				/* If the element was mid-delay, re initiate the timeout with the remaining delay */
				data.delayPaused = false;
				data.delayTimer.setTimeout = setTimeout(data.delayTimer.next, data.delayRemaining);
			}
		}



		/**************
		 Easing
		 **************/

		/* Step easing generator. */
		function generateStep(steps) {
			return function(p) {
				return Math.round(p * steps) * (1 / steps);
			};
		}

		/* Bezier curve function generator. Copyright Gaetan Renaudeau. MIT License: http://en.wikipedia.org/wiki/MIT_License */
		function generateBezier(mX1, mY1, mX2, mY2) {
			var NEWTON_ITERATIONS = 4,
					NEWTON_MIN_SLOPE = 0.001,
					SUBDIVISION_PRECISION = 0.0000001,
					SUBDIVISION_MAX_ITERATIONS = 10,
					kSplineTableSize = 11,
					kSampleStepSize = 1.0 / (kSplineTableSize - 1.0),
					float32ArraySupported = "Float32Array" in window;

			/* Must contain four arguments. */
			if (arguments.length !== 4) {
				return false;
			}

			/* Arguments must be numbers. */
			for (var i = 0; i < 4; ++i) {
				if (typeof arguments[i] !== "number" || isNaN(arguments[i]) || !isFinite(arguments[i])) {
					return false;
				}
			}

			/* X values must be in the [0, 1] range. */
			mX1 = Math.min(mX1, 1);
			mX2 = Math.min(mX2, 1);
			mX1 = Math.max(mX1, 0);
			mX2 = Math.max(mX2, 0);

			var mSampleValues = float32ArraySupported ? new Float32Array(kSplineTableSize) : new Array(kSplineTableSize);

			function A(aA1, aA2) {
				return 1.0 - 3.0 * aA2 + 3.0 * aA1;
			}
			function B(aA1, aA2) {
				return 3.0 * aA2 - 6.0 * aA1;
			}
			function C(aA1) {
				return 3.0 * aA1;
			}

			function calcBezier(aT, aA1, aA2) {
				return ((A(aA1, aA2) * aT + B(aA1, aA2)) * aT + C(aA1)) * aT;
			}

			function getSlope(aT, aA1, aA2) {
				return 3.0 * A(aA1, aA2) * aT * aT + 2.0 * B(aA1, aA2) * aT + C(aA1);
			}

			function newtonRaphsonIterate(aX, aGuessT) {
				for (var i = 0; i < NEWTON_ITERATIONS; ++i) {
					var currentSlope = getSlope(aGuessT, mX1, mX2);

					if (currentSlope === 0.0) {
						return aGuessT;
					}

					var currentX = calcBezier(aGuessT, mX1, mX2) - aX;
					aGuessT -= currentX / currentSlope;
				}

				return aGuessT;
			}

			function calcSampleValues() {
				for (var i = 0; i < kSplineTableSize; ++i) {
					mSampleValues[i] = calcBezier(i * kSampleStepSize, mX1, mX2);
				}
			}

			function binarySubdivide(aX, aA, aB) {
				var currentX, currentT, i = 0;

				do {
					currentT = aA + (aB - aA) / 2.0;
					currentX = calcBezier(currentT, mX1, mX2) - aX;
					if (currentX > 0.0) {
						aB = currentT;
					} else {
						aA = currentT;
					}
				} while (Math.abs(currentX) > SUBDIVISION_PRECISION && ++i < SUBDIVISION_MAX_ITERATIONS);

				return currentT;
			}

			function getTForX(aX) {
				var intervalStart = 0.0,
						currentSample = 1,
						lastSample = kSplineTableSize - 1;

				for (; currentSample !== lastSample && mSampleValues[currentSample] <= aX; ++currentSample) {
					intervalStart += kSampleStepSize;
				}

				--currentSample;

				var dist = (aX - mSampleValues[currentSample]) / (mSampleValues[currentSample + 1] - mSampleValues[currentSample]),
						guessForT = intervalStart + dist * kSampleStepSize,
						initialSlope = getSlope(guessForT, mX1, mX2);

				if (initialSlope >= NEWTON_MIN_SLOPE) {
					return newtonRaphsonIterate(aX, guessForT);
				} else if (initialSlope === 0.0) {
					return guessForT;
				} else {
					return binarySubdivide(aX, intervalStart, intervalStart + kSampleStepSize);
				}
			}

			var _precomputed = false;

			function precompute() {
				_precomputed = true;
				if (mX1 !== mY1 || mX2 !== mY2) {
					calcSampleValues();
				}
			}

			var f = function(aX) {
				if (!_precomputed) {
					precompute();
				}
				if (mX1 === mY1 && mX2 === mY2) {
					return aX;
				}
				if (aX === 0) {
					return 0;
				}
				if (aX === 1) {
					return 1;
				}

				return calcBezier(getTForX(aX), mY1, mY2);
			};

			f.getControlPoints = function() {
				return [{x: mX1, y: mY1}, {x: mX2, y: mY2}];
			};

			var str = "generateBezier(" + [mX1, mY1, mX2, mY2] + ")";
			f.toString = function() {
				return str;
			};

			return f;
		}

		/* Runge-Kutta spring physics function generator. Adapted from Framer.js, copyright Koen Bok. MIT License: http://en.wikipedia.org/wiki/MIT_License */
		/* Given a tension, friction, and duration, a simulation at 60FPS will first run without a defined duration in order to calculate the full path. A second pass
		 then adjusts the time delta -- using the relation between actual time and duration -- to calculate the path for the duration-constrained animation. */
		var generateSpringRK4 = (function() {
			function springAccelerationForState(state) {
				return (-state.tension * state.x) - (state.friction * state.v);
			}

			function springEvaluateStateWithDerivative(initialState, dt, derivative) {
				var state = {
					x: initialState.x + derivative.dx * dt,
					v: initialState.v + derivative.dv * dt,
					tension: initialState.tension,
					friction: initialState.friction
				};

				return {dx: state.v, dv: springAccelerationForState(state)};
			}

			function springIntegrateState(state, dt) {
				var a = {
					dx: state.v,
					dv: springAccelerationForState(state)
				},
						b = springEvaluateStateWithDerivative(state, dt * 0.5, a),
						c = springEvaluateStateWithDerivative(state, dt * 0.5, b),
						d = springEvaluateStateWithDerivative(state, dt, c),
						dxdt = 1.0 / 6.0 * (a.dx + 2.0 * (b.dx + c.dx) + d.dx),
						dvdt = 1.0 / 6.0 * (a.dv + 2.0 * (b.dv + c.dv) + d.dv);

				state.x = state.x + dxdt * dt;
				state.v = state.v + dvdt * dt;

				return state;
			}

			return function springRK4Factory(tension, friction, duration) {

				var initState = {
					x: -1,
					v: 0,
					tension: null,
					friction: null
				},
						path = [0],
						time_lapsed = 0,
						tolerance = 1 / 10000,
						DT = 16 / 1000,
						have_duration, dt, last_state;

				tension = parseFloat(tension) || 500;
				friction = parseFloat(friction) || 20;
				duration = duration || null;

				initState.tension = tension;
				initState.friction = friction;

				have_duration = duration !== null;

				/* Calculate the actual time it takes for this animation to complete with the provided conditions. */
				if (have_duration) {
					/* Run the simulation without a duration. */
					time_lapsed = springRK4Factory(tension, friction);
					/* Compute the adjusted time delta. */
					dt = time_lapsed / duration * DT;
				} else {
					dt = DT;
				}

				while (true) {
					/* Next/step function .*/
					last_state = springIntegrateState(last_state || initState, dt);
					/* Store the position. */
					path.push(1 + last_state.x);
					time_lapsed += 16;
					/* If the change threshold is reached, break. */
					if (!(Math.abs(last_state.x) > tolerance && Math.abs(last_state.v) > tolerance)) {
						break;
					}
				}

				/* If duration is not defined, return the actual time required for completing this animation. Otherwise, return a closure that holds the
				 computed path and returns a snapshot of the position according to a given percentComplete. */
				return !have_duration ? time_lapsed : function(percentComplete) {
					return path[ (percentComplete * (path.length - 1)) | 0 ];
				};
			};
		}());

		/* jQuery easings. */
		Velocity.Easings = {
			linear: function(p) {
				return p;
			},
			swing: function(p) {
				return 0.5 - Math.cos(p * Math.PI) / 2;
			},
			/* Bonus "spring" easing, which is a less exaggerated version of easeInOutElastic. */
			spring: function(p) {
				return 1 - (Math.cos(p * 4.5 * Math.PI) * Math.exp(-p * 6));
			}
		};

		/* CSS3 and Robert Penner easings. */
		$.each(
				[
					["ease", [0.25, 0.1, 0.25, 1.0]],
					["ease-in", [0.42, 0.0, 1.00, 1.0]],
					["ease-out", [0.00, 0.0, 0.58, 1.0]],
					["ease-in-out", [0.42, 0.0, 0.58, 1.0]],
					["easeInSine", [0.47, 0, 0.745, 0.715]],
					["easeOutSine", [0.39, 0.575, 0.565, 1]],
					["easeInOutSine", [0.445, 0.05, 0.55, 0.95]],
					["easeInQuad", [0.55, 0.085, 0.68, 0.53]],
					["easeOutQuad", [0.25, 0.46, 0.45, 0.94]],
					["easeInOutQuad", [0.455, 0.03, 0.515, 0.955]],
					["easeInCubic", [0.55, 0.055, 0.675, 0.19]],
					["easeOutCubic", [0.215, 0.61, 0.355, 1]],
					["easeInOutCubic", [0.645, 0.045, 0.355, 1]],
					["easeInQuart", [0.895, 0.03, 0.685, 0.22]],
					["easeOutQuart", [0.165, 0.84, 0.44, 1]],
					["easeInOutQuart", [0.77, 0, 0.175, 1]],
					["easeInQuint", [0.755, 0.05, 0.855, 0.06]],
					["easeOutQuint", [0.23, 1, 0.32, 1]],
					["easeInOutQuint", [0.86, 0, 0.07, 1]],
					["easeInExpo", [0.95, 0.05, 0.795, 0.035]],
					["easeOutExpo", [0.19, 1, 0.22, 1]],
					["easeInOutExpo", [1, 0, 0, 1]],
					["easeInCirc", [0.6, 0.04, 0.98, 0.335]],
					["easeOutCirc", [0.075, 0.82, 0.165, 1]],
					["easeInOutCirc", [0.785, 0.135, 0.15, 0.86]]
				], function(i, easingArray) {
			Velocity.Easings[easingArray[0]] = generateBezier.apply(null, easingArray[1]);
		});

		/* Determine the appropriate easing type given an easing input. */
		function getEasing(value, duration) {
			var easing = value;

			/* The easing option can either be a string that references a pre-registered easing,
			 or it can be a two-/four-item array of integers to be converted into a bezier/spring function. */
			if (Type.isString(value)) {
				/* Ensure that the easing has been assigned to jQuery's Velocity.Easings object. */
				if (!Velocity.Easings[value]) {
					easing = false;
				}
			} else if (Type.isArray(value) && value.length === 1) {
				easing = generateStep.apply(null, value);
			} else if (Type.isArray(value) && value.length === 2) {
				/* springRK4 must be passed the animation's duration. */
				/* Note: If the springRK4 array contains non-numbers, generateSpringRK4() returns an easing
				 function generated with default tension and friction values. */
				easing = generateSpringRK4.apply(null, value.concat([duration]));
			} else if (Type.isArray(value) && value.length === 4) {
				/* Note: If the bezier array contains non-numbers, generateBezier() returns false. */
				easing = generateBezier.apply(null, value);
			} else {
				easing = false;
			}

			/* Revert to the Velocity-wide default easing type, or fall back to "swing" (which is also jQuery's default)
			 if the Velocity-wide default has been incorrectly modified. */
			if (easing === false) {
				if (Velocity.Easings[Velocity.defaults.easing]) {
					easing = Velocity.defaults.easing;
				} else {
					easing = EASING_DEFAULT;
				}
			}

			return easing;
		}

		/*****************
		 CSS Stack
		 *****************/

		/* The CSS object is a highly condensed and performant CSS stack that fully replaces jQuery's.
		 It handles the validation, getting, and setting of both standard CSS properties and CSS property hooks. */
		/* Note: A "CSS" shorthand is aliased so that our code is easier to read. */
		var CSS = Velocity.CSS = {
			/*************
			 RegEx
			 *************/

			RegEx: {
				isHex: /^#([A-f\d]{3}){1,2}$/i,
				/* Unwrap a property value's surrounding text, e.g. "rgba(4, 3, 2, 1)" ==> "4, 3, 2, 1" and "rect(4px 3px 2px 1px)" ==> "4px 3px 2px 1px". */
				valueUnwrap: /^[A-z]+\((.*)\)$/i,
				wrappedValueAlreadyExtracted: /[0-9.]+ [0-9.]+ [0-9.]+( [0-9.]+)?/,
				/* Split a multi-value property into an array of subvalues, e.g. "rgba(4, 3, 2, 1) 4px 3px 2px 1px" ==> [ "rgba(4, 3, 2, 1)", "4px", "3px", "2px", "1px" ]. */
				valueSplit: /([A-z]+\(.+\))|(([A-z0-9#-.]+?)(?=\s|$))/ig
			},
			/************
			 Lists
			 ************/

			Lists: {
				colors: ["fill", "stroke", "stopColor", "color", "backgroundColor", "borderColor", "borderTopColor", "borderRightColor", "borderBottomColor", "borderLeftColor", "outlineColor"],
				transformsBase: ["translateX", "translateY", "scale", "scaleX", "scaleY", "skewX", "skewY", "rotateZ"],
				transforms3D: ["transformPerspective", "translateZ", "scaleZ", "rotateX", "rotateY"],
				units: [
					"%", // relative
					"em", "ex", "ch", "rem", // font relative
					"vw", "vh", "vmin", "vmax", // viewport relative
					"cm", "mm", "Q", "in", "pc", "pt", "px", // absolute lengths
					"deg", "grad", "rad", "turn", // angles
					"s", "ms" // time
				],
				colorNames: {
					"aliceblue": "240,248,255",
					"antiquewhite": "250,235,215",
					"aquamarine": "127,255,212",
					"aqua": "0,255,255",
					"azure": "240,255,255",
					"beige": "245,245,220",
					"bisque": "255,228,196",
					"black": "0,0,0",
					"blanchedalmond": "255,235,205",
					"blueviolet": "138,43,226",
					"blue": "0,0,255",
					"brown": "165,42,42",
					"burlywood": "222,184,135",
					"cadetblue": "95,158,160",
					"chartreuse": "127,255,0",
					"chocolate": "210,105,30",
					"coral": "255,127,80",
					"cornflowerblue": "100,149,237",
					"cornsilk": "255,248,220",
					"crimson": "220,20,60",
					"cyan": "0,255,255",
					"darkblue": "0,0,139",
					"darkcyan": "0,139,139",
					"darkgoldenrod": "184,134,11",
					"darkgray": "169,169,169",
					"darkgrey": "169,169,169",
					"darkgreen": "0,100,0",
					"darkkhaki": "189,183,107",
					"darkmagenta": "139,0,139",
					"darkolivegreen": "85,107,47",
					"darkorange": "255,140,0",
					"darkorchid": "153,50,204",
					"darkred": "139,0,0",
					"darksalmon": "233,150,122",
					"darkseagreen": "143,188,143",
					"darkslateblue": "72,61,139",
					"darkslategray": "47,79,79",
					"darkturquoise": "0,206,209",
					"darkviolet": "148,0,211",
					"deeppink": "255,20,147",
					"deepskyblue": "0,191,255",
					"dimgray": "105,105,105",
					"dimgrey": "105,105,105",
					"dodgerblue": "30,144,255",
					"firebrick": "178,34,34",
					"floralwhite": "255,250,240",
					"forestgreen": "34,139,34",
					"fuchsia": "255,0,255",
					"gainsboro": "220,220,220",
					"ghostwhite": "248,248,255",
					"gold": "255,215,0",
					"goldenrod": "218,165,32",
					"gray": "128,128,128",
					"grey": "128,128,128",
					"greenyellow": "173,255,47",
					"green": "0,128,0",
					"honeydew": "240,255,240",
					"hotpink": "255,105,180",
					"indianred": "205,92,92",
					"indigo": "75,0,130",
					"ivory": "255,255,240",
					"khaki": "240,230,140",
					"lavenderblush": "255,240,245",
					"lavender": "230,230,250",
					"lawngreen": "124,252,0",
					"lemonchiffon": "255,250,205",
					"lightblue": "173,216,230",
					"lightcoral": "240,128,128",
					"lightcyan": "224,255,255",
					"lightgoldenrodyellow": "250,250,210",
					"lightgray": "211,211,211",
					"lightgrey": "211,211,211",
					"lightgreen": "144,238,144",
					"lightpink": "255,182,193",
					"lightsalmon": "255,160,122",
					"lightseagreen": "32,178,170",
					"lightskyblue": "135,206,250",
					"lightslategray": "119,136,153",
					"lightsteelblue": "176,196,222",
					"lightyellow": "255,255,224",
					"limegreen": "50,205,50",
					"lime": "0,255,0",
					"linen": "250,240,230",
					"magenta": "255,0,255",
					"maroon": "128,0,0",
					"mediumaquamarine": "102,205,170",
					"mediumblue": "0,0,205",
					"mediumorchid": "186,85,211",
					"mediumpurple": "147,112,219",
					"mediumseagreen": "60,179,113",
					"mediumslateblue": "123,104,238",
					"mediumspringgreen": "0,250,154",
					"mediumturquoise": "72,209,204",
					"mediumvioletred": "199,21,133",
					"midnightblue": "25,25,112",
					"mintcream": "245,255,250",
					"mistyrose": "255,228,225",
					"moccasin": "255,228,181",
					"navajowhite": "255,222,173",
					"navy": "0,0,128",
					"oldlace": "253,245,230",
					"olivedrab": "107,142,35",
					"olive": "128,128,0",
					"orangered": "255,69,0",
					"orange": "255,165,0",
					"orchid": "218,112,214",
					"palegoldenrod": "238,232,170",
					"palegreen": "152,251,152",
					"paleturquoise": "175,238,238",
					"palevioletred": "219,112,147",
					"papayawhip": "255,239,213",
					"peachpuff": "255,218,185",
					"peru": "205,133,63",
					"pink": "255,192,203",
					"plum": "221,160,221",
					"powderblue": "176,224,230",
					"purple": "128,0,128",
					"red": "255,0,0",
					"rosybrown": "188,143,143",
					"royalblue": "65,105,225",
					"saddlebrown": "139,69,19",
					"salmon": "250,128,114",
					"sandybrown": "244,164,96",
					"seagreen": "46,139,87",
					"seashell": "255,245,238",
					"sienna": "160,82,45",
					"silver": "192,192,192",
					"skyblue": "135,206,235",
					"slateblue": "106,90,205",
					"slategray": "112,128,144",
					"snow": "255,250,250",
					"springgreen": "0,255,127",
					"steelblue": "70,130,180",
					"tan": "210,180,140",
					"teal": "0,128,128",
					"thistle": "216,191,216",
					"tomato": "255,99,71",
					"turquoise": "64,224,208",
					"violet": "238,130,238",
					"wheat": "245,222,179",
					"whitesmoke": "245,245,245",
					"white": "255,255,255",
					"yellowgreen": "154,205,50",
					"yellow": "255,255,0"
				}
			},
			/************
			 Hooks
			 ************/

			/* Hooks allow a subproperty (e.g. "boxShadowBlur") of a compound-value CSS property
			 (e.g. "boxShadow: X Y Blur Spread Color") to be animated as if it were a discrete property. */
			/* Note: Beyond enabling fine-grained property animation, hooking is necessary since Velocity only
			 tweens properties with single numeric values; unlike CSS transitions, Velocity does not interpolate compound-values. */
			Hooks: {
				/********************
				 Registration
				 ********************/

				/* Templates are a concise way of indicating which subproperties must be individually registered for each compound-value CSS property. */
				/* Each template consists of the compound-value's base name, its constituent subproperty names, and those subproperties' default values. */
				templates: {
					"textShadow": ["Color X Y Blur", "black 0px 0px 0px"],
					"boxShadow": ["Color X Y Blur Spread", "black 0px 0px 0px 0px"],
					"clip": ["Top Right Bottom Left", "0px 0px 0px 0px"],
					"backgroundPosition": ["X Y", "0% 0%"],
					"transformOrigin": ["X Y Z", "50% 50% 0px"],
					"perspectiveOrigin": ["X Y", "50% 50%"]
				},
				/* A "registered" hook is one that has been converted from its template form into a live,
				 tweenable property. It contains data to associate it with its root property. */
				registered: {
					/* Note: A registered hook looks like this ==> textShadowBlur: [ "textShadow", 3 ],
					 which consists of the subproperty's name, the associated root property's name,
					 and the subproperty's position in the root's value. */
				},
				/* Convert the templates into individual hooks then append them to the registered object above. */
				register: function() {
					/* Color hooks registration: Colors are defaulted to white -- as opposed to black -- since colors that are
					 currently set to "transparent" default to their respective template below when color-animated,
					 and white is typically a closer match to transparent than black is. An exception is made for text ("color"),
					 which is almost always set closer to black than white. */
					for (var i = 0; i < CSS.Lists.colors.length; i++) {
						var rgbComponents = (CSS.Lists.colors[i] === "color") ? "0 0 0 1" : "255 255 255 1";
						CSS.Hooks.templates[CSS.Lists.colors[i]] = ["Red Green Blue Alpha", rgbComponents];
					}

					var rootProperty,
							hookTemplate,
							hookNames;

					/* In IE, color values inside compound-value properties are positioned at the end the value instead of at the beginning.
					 Thus, we re-arrange the templates accordingly. */
					if (IE) {
						for (rootProperty in CSS.Hooks.templates) {
							if (!CSS.Hooks.templates.hasOwnProperty(rootProperty)) {
								continue;
							}
							hookTemplate = CSS.Hooks.templates[rootProperty];
							hookNames = hookTemplate[0].split(" ");

							var defaultValues = hookTemplate[1].match(CSS.RegEx.valueSplit);

							if (hookNames[0] === "Color") {
								/* Reposition both the hook's name and its default value to the end of their respective strings. */
								hookNames.push(hookNames.shift());
								defaultValues.push(defaultValues.shift());

								/* Replace the existing template for the hook's root property. */
								CSS.Hooks.templates[rootProperty] = [hookNames.join(" "), defaultValues.join(" ")];
							}
						}
					}

					/* Hook registration. */
					for (rootProperty in CSS.Hooks.templates) {
						if (!CSS.Hooks.templates.hasOwnProperty(rootProperty)) {
							continue;
						}
						hookTemplate = CSS.Hooks.templates[rootProperty];
						hookNames = hookTemplate[0].split(" ");

						for (var j in hookNames) {
							if (!hookNames.hasOwnProperty(j)) {
								continue;
							}
							var fullHookName = rootProperty + hookNames[j],
									hookPosition = j;

							/* For each hook, register its full name (e.g. textShadowBlur) with its root property (e.g. textShadow)
							 and the hook's position in its template's default value string. */
							CSS.Hooks.registered[fullHookName] = [rootProperty, hookPosition];
						}
					}
				},
				/*****************************
				 Injection and Extraction
				 *****************************/

				/* Look up the root property associated with the hook (e.g. return "textShadow" for "textShadowBlur"). */
				/* Since a hook cannot be set directly (the browser won't recognize it), style updating for hooks is routed through the hook's root property. */
				getRoot: function(property) {
					var hookData = CSS.Hooks.registered[property];

					if (hookData) {
						return hookData[0];
					} else {
						/* If there was no hook match, return the property name untouched. */
						return property;
					}
				},
				getUnit: function(str, start) {
					var unit = (str.substr(start || 0, 5).match(/^[a-z%]+/) || [])[0] || "";

					if (unit && _inArray(CSS.Lists.units, unit)) {
						return unit;
					}
					return "";
				},
				fixColors: function(str) {
					return str.replace(/(rgba?\(\s*)?(\b[a-z]+\b)/g, function($0, $1, $2) {
						if (CSS.Lists.colorNames.hasOwnProperty($2)) {
							return ($1 ? $1 : "rgba(") + CSS.Lists.colorNames[$2] + ($1 ? "" : ",1)");
						}
						return $1 + $2;
					});
				},
				/* Convert any rootPropertyValue, null or otherwise, into a space-delimited list of hook values so that
				 the targeted hook can be injected or extracted at its standard position. */
				cleanRootPropertyValue: function(rootProperty, rootPropertyValue) {
					/* If the rootPropertyValue is wrapped with "rgb()", "clip()", etc., remove the wrapping to normalize the value before manipulation. */
					if (CSS.RegEx.valueUnwrap.test(rootPropertyValue)) {
						rootPropertyValue = rootPropertyValue.match(CSS.RegEx.valueUnwrap)[1];
					}

					/* If rootPropertyValue is a CSS null-value (from which there's inherently no hook value to extract),
					 default to the root's default value as defined in CSS.Hooks.templates. */
					/* Note: CSS null-values include "none", "auto", and "transparent". They must be converted into their
					 zero-values (e.g. textShadow: "none" ==> textShadow: "0px 0px 0px black") for hook manipulation to proceed. */
					if (CSS.Values.isCSSNullValue(rootPropertyValue)) {
						rootPropertyValue = CSS.Hooks.templates[rootProperty][1];
					}

					return rootPropertyValue;
				},
				/* Extracted the hook's value from its root property's value. This is used to get the starting value of an animating hook. */
				extractValue: function(fullHookName, rootPropertyValue) {
					var hookData = CSS.Hooks.registered[fullHookName];

					if (hookData) {
						var hookRoot = hookData[0],
								hookPosition = hookData[1];

						rootPropertyValue = CSS.Hooks.cleanRootPropertyValue(hookRoot, rootPropertyValue);

						/* Split rootPropertyValue into its constituent hook values then grab the desired hook at its standard position. */
						return rootPropertyValue.toString().match(CSS.RegEx.valueSplit)[hookPosition];
					} else {
						/* If the provided fullHookName isn't a registered hook, return the rootPropertyValue that was passed in. */
						return rootPropertyValue;
					}
				},
				/* Inject the hook's value into its root property's value. This is used to piece back together the root property
				 once Velocity has updated one of its individually hooked values through tweening. */
				injectValue: function(fullHookName, hookValue, rootPropertyValue) {
					var hookData = CSS.Hooks.registered[fullHookName];

					if (hookData) {
						var hookRoot = hookData[0],
								hookPosition = hookData[1],
								rootPropertyValueParts,
								rootPropertyValueUpdated;

						rootPropertyValue = CSS.Hooks.cleanRootPropertyValue(hookRoot, rootPropertyValue);

						/* Split rootPropertyValue into its individual hook values, replace the targeted value with hookValue,
						 then reconstruct the rootPropertyValue string. */
						rootPropertyValueParts = rootPropertyValue.toString().match(CSS.RegEx.valueSplit);
						rootPropertyValueParts[hookPosition] = hookValue;
						rootPropertyValueUpdated = rootPropertyValueParts.join(" ");

						return rootPropertyValueUpdated;
					} else {
						/* If the provided fullHookName isn't a registered hook, return the rootPropertyValue that was passed in. */
						return rootPropertyValue;
					}
				}
			},
			/*******************
			 Normalizations
			 *******************/

			/* Normalizations standardize CSS property manipulation by pollyfilling browser-specific implementations (e.g. opacity)
			 and reformatting special properties (e.g. clip, rgba) to look like standard ones. */
			Normalizations: {
				/* Normalizations are passed a normalization target (either the property's name, its extracted value, or its injected value),
				 the targeted element (which may need to be queried), and the targeted property value. */
				registered: {
					clip: function(type, element, propertyValue) {
						switch (type) {
							case "name":
								return "clip";
								/* Clip needs to be unwrapped and stripped of its commas during extraction. */
							case "extract":
								var extracted;

								/* If Velocity also extracted this value, skip extraction. */
								if (CSS.RegEx.wrappedValueAlreadyExtracted.test(propertyValue)) {
									extracted = propertyValue;
								} else {
									/* Remove the "rect()" wrapper. */
									extracted = propertyValue.toString().match(CSS.RegEx.valueUnwrap);

									/* Strip off commas. */
									extracted = extracted ? extracted[1].replace(/,(\s+)?/g, " ") : propertyValue;
								}

								return extracted;
								/* Clip needs to be re-wrapped during injection. */
							case "inject":
								return "rect(" + propertyValue + ")";
						}
					},
					blur: function(type, element, propertyValue) {
						switch (type) {
							case "name":
								return Velocity.State.isFirefox ? "filter" : "-webkit-filter";
							case "extract":
								var extracted = parseFloat(propertyValue);

								/* If extracted is NaN, meaning the value isn't already extracted. */
								if (!(extracted || extracted === 0)) {
									var blurComponent = propertyValue.toString().match(/blur\(([0-9]+[A-z]+)\)/i);

									/* If the filter string had a blur component, return just the blur value and unit type. */
									if (blurComponent) {
										extracted = blurComponent[1];
										/* If the component doesn't exist, default blur to 0. */
									} else {
										extracted = 0;
									}
								}

								return extracted;
								/* Blur needs to be re-wrapped during injection. */
							case "inject":
								/* For the blur effect to be fully de-applied, it needs to be set to "none" instead of 0. */
								if (!parseFloat(propertyValue)) {
									return "none";
								} else {
									return "blur(" + propertyValue + ")";
								}
						}
					},
					/* <=IE8 do not support the standard opacity property. They use filter:alpha(opacity=INT) instead. */
					opacity: function(type, element, propertyValue) {
						if (IE <= 8) {
							switch (type) {
								case "name":
									return "filter";
								case "extract":
									/* <=IE8 return a "filter" value of "alpha(opacity=\d{1,3})".
									 Extract the value and convert it to a decimal value to match the standard CSS opacity property's formatting. */
									var extracted = propertyValue.toString().match(/alpha\(opacity=(.*)\)/i);

									if (extracted) {
										/* Convert to decimal value. */
										propertyValue = extracted[1] / 100;
									} else {
										/* When extracting opacity, default to 1 since a null value means opacity hasn't been set. */
										propertyValue = 1;
									}

									return propertyValue;
								case "inject":
									/* Opacified elements are required to have their zoom property set to a non-zero value. */
									element.style.zoom = 1;

									/* Setting the filter property on elements with certain font property combinations can result in a
									 highly unappealing ultra-bolding effect. There's no way to remedy this throughout a tween, but dropping the
									 value altogether (when opacity hits 1) at leasts ensures that the glitch is gone post-tweening. */
									if (parseFloat(propertyValue) >= 1) {
										return "";
									} else {
										/* As per the filter property's spec, convert the decimal value to a whole number and wrap the value. */
										return "alpha(opacity=" + parseInt(parseFloat(propertyValue) * 100, 10) + ")";
									}
							}
							/* With all other browsers, normalization is not required; return the same values that were passed in. */
						} else {
							switch (type) {
								case "name":
									return "opacity";
								case "extract":
									return propertyValue;
								case "inject":
									return propertyValue;
							}
						}
					}
				},
				/*****************************
				 Batched Registrations
				 *****************************/

				/* Note: Batched normalizations extend the CSS.Normalizations.registered object. */
				register: function() {

					/*****************
					 Transforms
					 *****************/

					/* Transforms are the subproperties contained by the CSS "transform" property. Transforms must undergo normalization
					 so that they can be referenced in a properties map by their individual names. */
					/* Note: When transforms are "set", they are actually assigned to a per-element transformCache. When all transform
					 setting is complete complete, CSS.flushTransformCache() must be manually called to flush the values to the DOM.
					 Transform setting is batched in this way to improve performance: the transform style only needs to be updated
					 once when multiple transform subproperties are being animated simultaneously. */
					/* Note: IE9 and Android Gingerbread have support for 2D -- but not 3D -- transforms. Since animating unsupported
					 transform properties results in the browser ignoring the *entire* transform string, we prevent these 3D values
					 from being normalized for these browsers so that tweening skips these properties altogether
					 (since it will ignore them as being unsupported by the browser.) */
					if ((!IE || IE > 9) && !Velocity.State.isGingerbread) {
						/* Note: Since the standalone CSS "perspective" property and the CSS transform "perspective" subproperty
						 share the same name, the latter is given a unique token within Velocity: "transformPerspective". */
						CSS.Lists.transformsBase = CSS.Lists.transformsBase.concat(CSS.Lists.transforms3D);
					}

					for (var i = 0; i < CSS.Lists.transformsBase.length; i++) {
						/* Wrap the dynamically generated normalization function in a new scope so that transformName's value is
						 paired with its respective function. (Otherwise, all functions would take the final for loop's transformName.) */
						(function() {
							var transformName = CSS.Lists.transformsBase[i];

							CSS.Normalizations.registered[transformName] = function(type, element, propertyValue) {
								switch (type) {
									/* The normalized property name is the parent "transform" property -- the property that is actually set in CSS. */
									case "name":
										return "transform";
										/* Transform values are cached onto a per-element transformCache object. */
									case "extract":
										/* If this transform has yet to be assigned a value, return its null value. */
										if (Data(element) === undefined || Data(element).transformCache[transformName] === undefined) {
											/* Scale CSS.Lists.transformsBase default to 1 whereas all other transform properties default to 0. */
											return /^scale/i.test(transformName) ? 1 : 0;
											/* When transform values are set, they are wrapped in parentheses as per the CSS spec.
											 Thus, when extracting their values (for tween calculations), we strip off the parentheses. */
										}
										return Data(element).transformCache[transformName].replace(/[()]/g, "");
									case "inject":
										var invalid = false;

										/* If an individual transform property contains an unsupported unit type, the browser ignores the *entire* transform property.
										 Thus, protect users from themselves by skipping setting for transform values supplied with invalid unit types. */
										/* Switch on the base transform type; ignore the axis by removing the last letter from the transform's name. */
										switch (transformName.substr(0, transformName.length - 1)) {
											/* Whitelist unit types for each transform. */
											case "translate":
												invalid = !/(%|px|em|rem|vw|vh|\d)$/i.test(propertyValue);
												break;
												/* Since an axis-free "scale" property is supported as well, a little hack is used here to detect it by chopping off its last letter. */
											case "scal":
											case "scale":
												/* Chrome on Android has a bug in which scaled elements blur if their initial scale
												 value is below 1 (which can happen with forcefeeding). Thus, we detect a yet-unset scale property
												 and ensure that its first value is always 1. More info: http://stackoverflow.com/questions/10417890/css3-animations-with-transform-causes-blurred-elements-on-webkit/10417962#10417962 */
												if (Velocity.State.isAndroid && Data(element).transformCache[transformName] === undefined && propertyValue < 1) {
													propertyValue = 1;
												}

												invalid = !/(\d)$/i.test(propertyValue);
												break;
											case "skew":
												invalid = !/(deg|\d)$/i.test(propertyValue);
												break;
											case "rotate":
												invalid = !/(deg|\d)$/i.test(propertyValue);
												break;
										}

										if (!invalid) {
											/* As per the CSS spec, wrap the value in parentheses. */
											Data(element).transformCache[transformName] = "(" + propertyValue + ")";
										}

										/* Although the value is set on the transformCache object, return the newly-updated value for the calling code to process as normal. */
										return Data(element).transformCache[transformName];
								}
							};
						})();
					}

					/*************
					 Colors
					 *************/

					/* Since Velocity only animates a single numeric value per property, color animation is achieved by hooking the individual RGBA components of CSS color properties.
					 Accordingly, color values must be normalized (e.g. "#ff0000", "red", and "rgb(255, 0, 0)" ==> "255 0 0 1") so that their components can be injected/extracted by CSS.Hooks logic. */
					for (var j = 0; j < CSS.Lists.colors.length; j++) {
						/* Wrap the dynamically generated normalization function in a new scope so that colorName's value is paired with its respective function.
						 (Otherwise, all functions would take the final for loop's colorName.) */
						(function() {
							var colorName = CSS.Lists.colors[j];

							/* Note: In IE<=8, which support rgb but not rgba, color properties are reverted to rgb by stripping off the alpha component. */
							CSS.Normalizations.registered[colorName] = function(type, element, propertyValue) {
								switch (type) {
									case "name":
										return colorName;
										/* Convert all color values into the rgb format. (Old IE can return hex values and color names instead of rgb/rgba.) */
									case "extract":
										var extracted;

										/* If the color is already in its hookable form (e.g. "255 255 255 1") due to having been previously extracted, skip extraction. */
										if (CSS.RegEx.wrappedValueAlreadyExtracted.test(propertyValue)) {
											extracted = propertyValue;
										} else {
											var converted,
													colorNames = {
														black: "rgb(0, 0, 0)",
														blue: "rgb(0, 0, 255)",
														gray: "rgb(128, 128, 128)",
														green: "rgb(0, 128, 0)",
														red: "rgb(255, 0, 0)",
														white: "rgb(255, 255, 255)"
													};

											/* Convert color names to rgb. */
											if (/^[A-z]+$/i.test(propertyValue)) {
												if (colorNames[propertyValue] !== undefined) {
													converted = colorNames[propertyValue];
												} else {
													/* If an unmatched color name is provided, default to black. */
													converted = colorNames.black;
												}
												/* Convert hex values to rgb. */
											} else if (CSS.RegEx.isHex.test(propertyValue)) {
												converted = "rgb(" + CSS.Values.hexToRgb(propertyValue).join(" ") + ")";
												/* If the provided color doesn't match any of the accepted color formats, default to black. */
											} else if (!(/^rgba?\(/i.test(propertyValue))) {
												converted = colorNames.black;
											}

											/* Remove the surrounding "rgb/rgba()" string then replace commas with spaces and strip
											 repeated spaces (in case the value included spaces to begin with). */
											extracted = (converted || propertyValue).toString().match(CSS.RegEx.valueUnwrap)[1].replace(/,(\s+)?/g, " ");
										}

										/* So long as this isn't <=IE8, add a fourth (alpha) component if it's missing and default it to 1 (visible). */
										if ((!IE || IE > 8) && extracted.split(" ").length === 3) {
											extracted += " 1";
										}

										return extracted;
									case "inject":
										/* If we have a pattern then it might already have the right values */
										if (/^rgb/.test(propertyValue)) {
											return propertyValue;
										}

										/* If this is IE<=8 and an alpha component exists, strip it off. */
										if (IE <= 8) {
											if (propertyValue.split(" ").length === 4) {
												propertyValue = propertyValue.split(/\s+/).slice(0, 3).join(" ");
											}
											/* Otherwise, add a fourth (alpha) component if it's missing and default it to 1 (visible). */
										} else if (propertyValue.split(" ").length === 3) {
											propertyValue += " 1";
										}

										/* Re-insert the browser-appropriate wrapper("rgb/rgba()"), insert commas, and strip off decimal units
										 on all values but the fourth (R, G, and B only accept whole numbers). */
										return (IE <= 8 ? "rgb" : "rgba") + "(" + propertyValue.replace(/\s+/g, ",").replace(/\.(\d)+(?=,)/g, "") + ")";
								}
							};
						})();
					}

					/**************
					 Dimensions
					 **************/
					function augmentDimension(name, element, wantInner) {
						var isBorderBox = CSS.getPropertyValue(element, "boxSizing").toString().toLowerCase() === "border-box";

						if (isBorderBox === (wantInner || false)) {
							/* in box-sizing mode, the CSS width / height accessors already give the outerWidth / outerHeight. */
							var i,
									value,
									augment = 0,
									sides = name === "width" ? ["Left", "Right"] : ["Top", "Bottom"],
									fields = ["padding" + sides[0], "padding" + sides[1], "border" + sides[0] + "Width", "border" + sides[1] + "Width"];

							for (i = 0; i < fields.length; i++) {
								value = parseFloat(CSS.getPropertyValue(element, fields[i]));
								if (!isNaN(value)) {
									augment += value;
								}
							}
							return wantInner ? -augment : augment;
						}
						return 0;
					}
					function getDimension(name, wantInner) {
						return function(type, element, propertyValue) {
							switch (type) {
								case "name":
									return name;
								case "extract":
									return parseFloat(propertyValue) + augmentDimension(name, element, wantInner);
								case "inject":
									return (parseFloat(propertyValue) - augmentDimension(name, element, wantInner)) + "px";
							}
						};
					}
					CSS.Normalizations.registered.innerWidth = getDimension("width", true);
					CSS.Normalizations.registered.innerHeight = getDimension("height", true);
					CSS.Normalizations.registered.outerWidth = getDimension("width");
					CSS.Normalizations.registered.outerHeight = getDimension("height");
				}
			},
			/************************
			 CSS Property Names
			 ************************/

			Names: {
				/* Camelcase a property name into its JavaScript notation (e.g. "background-color" ==> "backgroundColor").
				 Camelcasing is used to normalize property names between and across calls. */
				camelCase: function(property) {
					return property.replace(/-(\w)/g, function(match, subMatch) {
						return subMatch.toUpperCase();
					});
				},
				/* For SVG elements, some properties (namely, dimensional ones) are GET/SET via the element's HTML attributes (instead of via CSS styles). */
				SVGAttribute: function(property) {
					var SVGAttributes = "width|height|x|y|cx|cy|r|rx|ry|x1|x2|y1|y2";

					/* Certain browsers require an SVG transform to be applied as an attribute. (Otherwise, application via CSS is preferable due to 3D support.) */
					if (IE || (Velocity.State.isAndroid && !Velocity.State.isChrome)) {
						SVGAttributes += "|transform";
					}

					return new RegExp("^(" + SVGAttributes + ")$", "i").test(property);
				},
				/* Determine whether a property should be set with a vendor prefix. */
				/* If a prefixed version of the property exists, return it. Otherwise, return the original property name.
				 If the property is not at all supported by the browser, return a false flag. */
				prefixCheck: function(property) {
					/* If this property has already been checked, return the cached value. */
					if (Velocity.State.prefixMatches[property]) {
						return [Velocity.State.prefixMatches[property], true];
					} else {
						var vendors = ["", "Webkit", "Moz", "ms", "O"];

						for (var i = 0, vendorsLength = vendors.length; i < vendorsLength; i++) {
							var propertyPrefixed;

							if (i === 0) {
								propertyPrefixed = property;
							} else {
								/* Capitalize the first letter of the property to conform to JavaScript vendor prefix notation (e.g. webkitFilter). */
								propertyPrefixed = vendors[i] + property.replace(/^\w/, function(match) {
									return match.toUpperCase();
								});
							}

							/* Check if the browser supports this property as prefixed. */
							if (Type.isString(Velocity.State.prefixElement.style[propertyPrefixed])) {
								/* Cache the match. */
								Velocity.State.prefixMatches[property] = propertyPrefixed;

								return [propertyPrefixed, true];
							}
						}

						/* If the browser doesn't support this property in any form, include a false flag so that the caller can decide how to proceed. */
						return [property, false];
					}
				}
			},
			/************************
			 CSS Property Values
			 ************************/

			Values: {
				/* Hex to RGB conversion. Copyright Tim Down: http://stackoverflow.com/questions/5623838/rgb-to-hex-and-hex-to-rgb */
				hexToRgb: function(hex) {
					var shortformRegex = /^#?([a-f\d])([a-f\d])([a-f\d])$/i,
							longformRegex = /^#?([a-f\d]{2})([a-f\d]{2})([a-f\d]{2})$/i,
							rgbParts;

					hex = hex.replace(shortformRegex, function(m, r, g, b) {
						return r + r + g + g + b + b;
					});

					rgbParts = longformRegex.exec(hex);

					return rgbParts ? [parseInt(rgbParts[1], 16), parseInt(rgbParts[2], 16), parseInt(rgbParts[3], 16)] : [0, 0, 0];
				},
				isCSSNullValue: function(value) {
					/* The browser defaults CSS values that have not been set to either 0 or one of several possible null-value strings.
					 Thus, we check for both falsiness and these special strings. */
					/* Null-value checking is performed to default the special strings to 0 (for the sake of tweening) or their hook
					 templates as defined as CSS.Hooks (for the sake of hook injection/extraction). */
					/* Note: Chrome returns "rgba(0, 0, 0, 0)" for an undefined color whereas IE returns "transparent". */
					return (!value || /^(none|auto|transparent|(rgba\(0, ?0, ?0, ?0\)))$/i.test(value));
				},
				/* Retrieve a property's default unit type. Used for assigning a unit type when one is not supplied by the user. */
				getUnitType: function(property) {
					if (/^(rotate|skew)/i.test(property)) {
						return "deg";
					} else if (/(^(scale|scaleX|scaleY|scaleZ|alpha|flexGrow|flexHeight|zIndex|fontWeight)$)|((opacity|red|green|blue|alpha)$)/i.test(property)) {
						/* The above properties are unitless. */
						return "";
					} else {
						/* Default to px for all other properties. */
						return "px";
					}
				},
				/* HTML elements default to an associated display type when they're not set to display:none. */
				/* Note: This function is used for correctly setting the non-"none" display value in certain Velocity redirects, such as fadeIn/Out. */
				getDisplayType: function(element) {
					var tagName = element && element.tagName.toString().toLowerCase();

					if (/^(b|big|i|small|tt|abbr|acronym|cite|code|dfn|em|kbd|strong|samp|var|a|bdo|br|img|map|object|q|script|span|sub|sup|button|input|label|select|textarea)$/i.test(tagName)) {
						return "inline";
					} else if (/^(li)$/i.test(tagName)) {
						return "list-item";
					} else if (/^(tr)$/i.test(tagName)) {
						return "table-row";
					} else if (/^(table)$/i.test(tagName)) {
						return "table";
					} else if (/^(tbody)$/i.test(tagName)) {
						return "table-row-group";
						/* Default to "block" when no match is found. */
					} else {
						return "block";
					}
				},
				/* The class add/remove functions are used to temporarily apply a "velocity-animating" class to elements while they're animating. */
				addClass: function(element, className) {
					if (element) {
						if (element.classList) {
							element.classList.add(className);
						} else if (Type.isString(element.className)) {
							// Element.className is around 15% faster then set/getAttribute
							element.className += (element.className.length ? " " : "") + className;
						} else {
							// Work around for IE strict mode animating SVG - and anything else that doesn't behave correctly - the same way jQuery does it
							var currentClass = element.getAttribute(IE <= 7 ? "className" : "class") || "";

							element.setAttribute("class", currentClass + (currentClass ? " " : "") + className);
						}
					}
				},
				removeClass: function(element, className) {
					if (element) {
						if (element.classList) {
							element.classList.remove(className);
						} else if (Type.isString(element.className)) {
							// Element.className is around 15% faster then set/getAttribute
							// TODO: Need some jsperf tests on performance - can we get rid of the regex and maybe use split / array manipulation?
							element.className = element.className.toString().replace(new RegExp("(^|\\s)" + className.split(" ").join("|") + "(\\s|$)", "gi"), " ");
						} else {
							// Work around for IE strict mode animating SVG - and anything else that doesn't behave correctly - the same way jQuery does it
							var currentClass = element.getAttribute(IE <= 7 ? "className" : "class") || "";

							element.setAttribute("class", currentClass.replace(new RegExp("(^|\s)" + className.split(" ").join("|") + "(\s|$)", "gi"), " "));
						}
					}
				}
			},
			/****************************
			 Style Getting & Setting
			 ****************************/

			/* The singular getPropertyValue, which routes the logic for all normalizations, hooks, and standard CSS properties. */
			getPropertyValue: function(element, property, rootPropertyValue, forceStyleLookup) {
				/* Get an element's computed property value. */
				/* Note: Retrieving the value of a CSS property cannot simply be performed by checking an element's
				 style attribute (which only reflects user-defined values). Instead, the browser must be queried for a property's
				 *computed* value. You can read more about getComputedStyle here: https://developer.mozilla.org/en/docs/Web/API/window.getComputedStyle */
				function computePropertyValue(element, property) {
					/* When box-sizing isn't set to border-box, height and width style values are incorrectly computed when an
					 element's scrollbars are visible (which expands the element's dimensions). Thus, we defer to the more accurate
					 offsetHeight/Width property, which includes the total dimensions for interior, border, padding, and scrollbar.
					 We subtract border and padding to get the sum of interior + scrollbar. */
					var computedValue = 0;

					/* IE<=8 doesn't support window.getComputedStyle, thus we defer to jQuery, which has an extensive array
					 of hacks to accurately retrieve IE8 property values. Re-implementing that logic here is not worth bloating the
					 codebase for a dying browser. The performance repercussions of using jQuery here are minimal since
					 Velocity is optimized to rarely (and sometimes never) query the DOM. Further, the $.css() codepath isn't that slow. */
					if (IE <= 8) {
						computedValue = $.css(element, property); /* GET */
						/* All other browsers support getComputedStyle. The returned live object reference is cached onto its
						 associated element so that it does not need to be refetched upon every GET. */
					} else {
						/* Browsers do not return height and width values for elements that are set to display:"none". Thus, we temporarily
						 toggle display to the element type's default value. */
						var toggleDisplay = false;

						if (/^(width|height)$/.test(property) && CSS.getPropertyValue(element, "display") === 0) {
							toggleDisplay = true;
							CSS.setPropertyValue(element, "display", CSS.Values.getDisplayType(element));
						}

						var revertDisplay = function() {
							if (toggleDisplay) {
								CSS.setPropertyValue(element, "display", "none");
							}
						};

						if (!forceStyleLookup) {
							if (property === "height" && CSS.getPropertyValue(element, "boxSizing").toString().toLowerCase() !== "border-box") {
								var contentBoxHeight = element.offsetHeight - (parseFloat(CSS.getPropertyValue(element, "borderTopWidth")) || 0) - (parseFloat(CSS.getPropertyValue(element, "borderBottomWidth")) || 0) - (parseFloat(CSS.getPropertyValue(element, "paddingTop")) || 0) - (parseFloat(CSS.getPropertyValue(element, "paddingBottom")) || 0);
								revertDisplay();

								return contentBoxHeight;
							} else if (property === "width" && CSS.getPropertyValue(element, "boxSizing").toString().toLowerCase() !== "border-box") {
								var contentBoxWidth = element.offsetWidth - (parseFloat(CSS.getPropertyValue(element, "borderLeftWidth")) || 0) - (parseFloat(CSS.getPropertyValue(element, "borderRightWidth")) || 0) - (parseFloat(CSS.getPropertyValue(element, "paddingLeft")) || 0) - (parseFloat(CSS.getPropertyValue(element, "paddingRight")) || 0);
								revertDisplay();

								return contentBoxWidth;
							}
						}

						var computedStyle;

						/* For elements that Velocity hasn't been called on directly (e.g. when Velocity queries the DOM on behalf
						 of a parent of an element its animating), perform a direct getComputedStyle lookup since the object isn't cached. */
						if (Data(element) === undefined) {
							computedStyle = window.getComputedStyle(element, null); /* GET */
							/* If the computedStyle object has yet to be cached, do so now. */
						} else if (!Data(element).computedStyle) {
							computedStyle = Data(element).computedStyle = window.getComputedStyle(element, null); /* GET */
							/* If computedStyle is cached, use it. */
						} else {
							computedStyle = Data(element).computedStyle;
						}

						/* IE and Firefox do not return a value for the generic borderColor -- they only return individual values for each border side's color.
						 Also, in all browsers, when border colors aren't all the same, a compound value is returned that Velocity isn't setup to parse.
						 So, as a polyfill for querying individual border side colors, we just return the top border's color and animate all borders from that value. */
						if (property === "borderColor") {
							property = "borderTopColor";
						}

						/* IE9 has a bug in which the "filter" property must be accessed from computedStyle using the getPropertyValue method
						 instead of a direct property lookup. The getPropertyValue method is slower than a direct lookup, which is why we avoid it by default. */
						if (IE === 9 && property === "filter") {
							computedValue = computedStyle.getPropertyValue(property); /* GET */
						} else {
							computedValue = computedStyle[property];
						}

						/* Fall back to the property's style value (if defined) when computedValue returns nothing,
						 which can happen when the element hasn't been painted. */
						if (computedValue === "" || computedValue === null) {
							computedValue = element.style[property];
						}

						revertDisplay();
					}

					/* For top, right, bottom, and left (TRBL) values that are set to "auto" on elements of "fixed" or "absolute" position,
					 defer to jQuery for converting "auto" to a numeric value. (For elements with a "static" or "relative" position, "auto" has the same
					 effect as being set to 0, so no conversion is necessary.) */
					/* An example of why numeric conversion is necessary: When an element with "position:absolute" has an untouched "left"
					 property, which reverts to "auto", left's value is 0 relative to its parent element, but is often non-zero relative
					 to its *containing* (not parent) element, which is the nearest "position:relative" ancestor or the viewport (and always the viewport in the case of "position:fixed"). */
					if (computedValue === "auto" && /^(top|right|bottom|left)$/i.test(property)) {
						var position = computePropertyValue(element, "position"); /* GET */

						/* For absolute positioning, jQuery's $.position() only returns values for top and left;
						 right and bottom will have their "auto" value reverted to 0. */
						/* Note: A jQuery object must be created here since jQuery doesn't have a low-level alias for $.position().
						 Not a big deal since we're currently in a GET batch anyway. */
						if (position === "fixed" || (position === "absolute" && /top|left/i.test(property))) {
							/* Note: jQuery strips the pixel unit from its returned values; we re-add it here to conform with computePropertyValue's behavior. */
							computedValue = $(element).position()[property] + "px"; /* GET */
						}
					}

					return computedValue;
				}

				var propertyValue;

				/* If this is a hooked property (e.g. "clipLeft" instead of the root property of "clip"),
				 extract the hook's value from a normalized rootPropertyValue using CSS.Hooks.extractValue(). */
				if (CSS.Hooks.registered[property]) {
					var hook = property,
							hookRoot = CSS.Hooks.getRoot(hook);

					/* If a cached rootPropertyValue wasn't passed in (which Velocity always attempts to do in order to avoid requerying the DOM),
					 query the DOM for the root property's value. */
					if (rootPropertyValue === undefined) {
						/* Since the browser is now being directly queried, use the official post-prefixing property name for this lookup. */
						rootPropertyValue = CSS.getPropertyValue(element, CSS.Names.prefixCheck(hookRoot)[0]); /* GET */
					}

					/* If this root has a normalization registered, peform the associated normalization extraction. */
					if (CSS.Normalizations.registered[hookRoot]) {
						rootPropertyValue = CSS.Normalizations.registered[hookRoot]("extract", element, rootPropertyValue);
					}

					/* Extract the hook's value. */
					propertyValue = CSS.Hooks.extractValue(hook, rootPropertyValue);

					/* If this is a normalized property (e.g. "opacity" becomes "filter" in <=IE8) or "translateX" becomes "transform"),
					 normalize the property's name and value, and handle the special case of transforms. */
					/* Note: Normalizing a property is mutually exclusive from hooking a property since hook-extracted values are strictly
					 numerical and therefore do not require normalization extraction. */
				} else if (CSS.Normalizations.registered[property]) {
					var normalizedPropertyName,
							normalizedPropertyValue;

					normalizedPropertyName = CSS.Normalizations.registered[property]("name", element);

					/* Transform values are calculated via normalization extraction (see below), which checks against the element's transformCache.
					 At no point do transform GETs ever actually query the DOM; initial stylesheet values are never processed.
					 This is because parsing 3D transform matrices is not always accurate and would bloat our codebase;
					 thus, normalization extraction defaults initial transform values to their zero-values (e.g. 1 for scaleX and 0 for translateX). */
					if (normalizedPropertyName !== "transform") {
						normalizedPropertyValue = computePropertyValue(element, CSS.Names.prefixCheck(normalizedPropertyName)[0]); /* GET */

						/* If the value is a CSS null-value and this property has a hook template, use that zero-value template so that hooks can be extracted from it. */
						if (CSS.Values.isCSSNullValue(normalizedPropertyValue) && CSS.Hooks.templates[property]) {
							normalizedPropertyValue = CSS.Hooks.templates[property][1];
						}
					}

					propertyValue = CSS.Normalizations.registered[property]("extract", element, normalizedPropertyValue);
				}

				/* If a (numeric) value wasn't produced via hook extraction or normalization, query the DOM. */
				if (!/^[\d-]/.test(propertyValue)) {
					/* For SVG elements, dimensional properties (which SVGAttribute() detects) are tweened via
					 their HTML attribute values instead of their CSS style values. */
					var data = Data(element);

					if (data && data.isSVG && CSS.Names.SVGAttribute(property)) {
						/* Since the height/width attribute values must be set manually, they don't reflect computed values.
						 Thus, we use use getBBox() to ensure we always get values for elements with undefined height/width attributes. */
						if (/^(height|width)$/i.test(property)) {
							/* Firefox throws an error if .getBBox() is called on an SVG that isn't attached to the DOM. */
							try {
								propertyValue = element.getBBox()[property];
							} catch (error) {
								propertyValue = 0;
							}
							/* Otherwise, access the attribute value directly. */
						} else {
							propertyValue = element.getAttribute(property);
						}
					} else {
						propertyValue = computePropertyValue(element, CSS.Names.prefixCheck(property)[0]); /* GET */
					}
				}

				/* Since property lookups are for animation purposes (which entails computing the numeric delta between start and end values),
				 convert CSS null-values to an integer of value 0. */
				if (CSS.Values.isCSSNullValue(propertyValue)) {
					propertyValue = 0;
				}

				if (Velocity.debug >= 2) {
					console.log("Get " + property + ": " + propertyValue);
				}

				return propertyValue;
			},
			/* The singular setPropertyValue, which routes the logic for all normalizations, hooks, and standard CSS properties. */
			setPropertyValue: function(element, property, propertyValue, rootPropertyValue, scrollData) {
				var propertyName = property;

				/* In order to be subjected to call options and element queueing, scroll animation is routed through Velocity as if it were a standard CSS property. */
				if (property === "scroll") {
					/* If a container option is present, scroll the container instead of the browser window. */
					if (scrollData.container) {
						scrollData.container["scroll" + scrollData.direction] = propertyValue;
						/* Otherwise, Velocity defaults to scrolling the browser window. */
					} else {
						if (scrollData.direction === "Left") {
							window.scrollTo(propertyValue, scrollData.alternateValue);
						} else {
							window.scrollTo(scrollData.alternateValue, propertyValue);
						}
					}
				} else {
					/* Transforms (translateX, rotateZ, etc.) are applied to a per-element transformCache object, which is manually flushed via flushTransformCache().
					 Thus, for now, we merely cache transforms being SET. */
					if (CSS.Normalizations.registered[property] && CSS.Normalizations.registered[property]("name", element) === "transform") {
						/* Perform a normalization injection. */
						/* Note: The normalization logic handles the transformCache updating. */
						CSS.Normalizations.registered[property]("inject", element, propertyValue);

						propertyName = "transform";
						propertyValue = Data(element).transformCache[property];
					} else {
						/* Inject hooks. */
						if (CSS.Hooks.registered[property]) {
							var hookName = property,
									hookRoot = CSS.Hooks.getRoot(property);

							/* If a cached rootPropertyValue was not provided, query the DOM for the hookRoot's current value. */
							rootPropertyValue = rootPropertyValue || CSS.getPropertyValue(element, hookRoot); /* GET */

							propertyValue = CSS.Hooks.injectValue(hookName, propertyValue, rootPropertyValue);
							property = hookRoot;
						}

						/* Normalize names and values. */
						if (CSS.Normalizations.registered[property]) {
							propertyValue = CSS.Normalizations.registered[property]("inject", element, propertyValue);
							property = CSS.Normalizations.registered[property]("name", element);
						}

						/* Assign the appropriate vendor prefix before performing an official style update. */
						propertyName = CSS.Names.prefixCheck(property)[0];

						/* A try/catch is used for IE<=8, which throws an error when "invalid" CSS values are set, e.g. a negative width.
						 Try/catch is avoided for other browsers since it incurs a performance overhead. */
						if (IE <= 8) {
							try {
								element.style[propertyName] = propertyValue;
							} catch (error) {
								if (Velocity.debug) {
									console.log("Browser does not support [" + propertyValue + "] for [" + propertyName + "]");
								}
							}
							/* SVG elements have their dimensional properties (width, height, x, y, cx, etc.) applied directly as attributes instead of as styles. */
							/* Note: IE8 does not support SVG elements, so it's okay that we skip it for SVG animation. */
						} else {
							var data = Data(element);

							if (data && data.isSVG && CSS.Names.SVGAttribute(property)) {
								/* Note: For SVG attributes, vendor-prefixed property names are never used. */
								/* Note: Not all CSS properties can be animated via attributes, but the browser won't throw an error for unsupported properties. */
								element.setAttribute(property, propertyValue);
							} else {
								element.style[propertyName] = propertyValue;
							}
						}

						if (Velocity.debug >= 2) {
							console.log("Set " + property + " (" + propertyName + "): " + propertyValue);
						}
					}
				}

				/* Return the normalized property name and value in case the caller wants to know how these values were modified before being applied to the DOM. */
				return [propertyName, propertyValue];
			},
			/* To increase performance by batching transform updates into a single SET, transforms are not directly applied to an element until flushTransformCache() is called. */
			/* Note: Velocity applies transform properties in the same order that they are chronogically introduced to the element's CSS styles. */
			flushTransformCache: function(element) {
				var transformString = "",
						data = Data(element);

				/* Certain browsers require that SVG transforms be applied as an attribute. However, the SVG transform attribute takes a modified version of CSS's transform string
				 (units are dropped and, except for skewX/Y, subproperties are merged into their master property -- e.g. scaleX and scaleY are merged into scale(X Y). */
				if ((IE || (Velocity.State.isAndroid && !Velocity.State.isChrome)) && data && data.isSVG) {
					/* Since transform values are stored in their parentheses-wrapped form, we use a helper function to strip out their numeric values.
					 Further, SVG transform properties only take unitless (representing pixels) values, so it's okay that parseFloat() strips the unit suffixed to the float value. */
					var getTransformFloat = function(transformProperty) {
						return parseFloat(CSS.getPropertyValue(element, transformProperty));
					};

					/* Create an object to organize all the transforms that we'll apply to the SVG element. To keep the logic simple,
					 we process *all* transform properties -- even those that may not be explicitly applied (since they default to their zero-values anyway). */
					var SVGTransforms = {
						translate: [getTransformFloat("translateX"), getTransformFloat("translateY")],
						skewX: [getTransformFloat("skewX")], skewY: [getTransformFloat("skewY")],
						/* If the scale property is set (non-1), use that value for the scaleX and scaleY values
						 (this behavior mimics the result of animating all these properties at once on HTML elements). */
						scale: getTransformFloat("scale") !== 1 ? [getTransformFloat("scale"), getTransformFloat("scale")] : [getTransformFloat("scaleX"), getTransformFloat("scaleY")],
						/* Note: SVG's rotate transform takes three values: rotation degrees followed by the X and Y values
						 defining the rotation's origin point. We ignore the origin values (default them to 0). */
						rotate: [getTransformFloat("rotateZ"), 0, 0]
					};

					/* Iterate through the transform properties in the user-defined property map order.
					 (This mimics the behavior of non-SVG transform animation.) */
					$.each(Data(element).transformCache, function(transformName) {
						/* Except for with skewX/Y, revert the axis-specific transform subproperties to their axis-free master
						 properties so that they match up with SVG's accepted transform properties. */
						if (/^translate/i.test(transformName)) {
							transformName = "translate";
						} else if (/^scale/i.test(transformName)) {
							transformName = "scale";
						} else if (/^rotate/i.test(transformName)) {
							transformName = "rotate";
						}

						/* Check that we haven't yet deleted the property from the SVGTransforms container. */
						if (SVGTransforms[transformName]) {
							/* Append the transform property in the SVG-supported transform format. As per the spec, surround the space-delimited values in parentheses. */
							transformString += transformName + "(" + SVGTransforms[transformName].join(" ") + ")" + " ";

							/* After processing an SVG transform property, delete it from the SVGTransforms container so we don't
							 re-insert the same master property if we encounter another one of its axis-specific properties. */
							delete SVGTransforms[transformName];
						}
					});
				} else {
					var transformValue,
							perspective;

					/* Transform properties are stored as members of the transformCache object. Concatenate all the members into a string. */
					$.each(Data(element).transformCache, function(transformName) {
						transformValue = Data(element).transformCache[transformName];

						/* Transform's perspective subproperty must be set first in order to take effect. Store it temporarily. */
						if (transformName === "transformPerspective") {
							perspective = transformValue;
							return true;
						}

						/* IE9 only supports one rotation type, rotateZ, which it refers to as "rotate". */
						if (IE === 9 && transformName === "rotateZ") {
							transformName = "rotate";
						}

						transformString += transformName + transformValue + " ";
					});

					/* If present, set the perspective subproperty first. */
					if (perspective) {
						transformString = "perspective" + perspective + " " + transformString;
					}
				}

				CSS.setPropertyValue(element, "transform", transformString);
			}
		};

		/* Register hooks and normalizations. */
		CSS.Hooks.register();
		CSS.Normalizations.register();

		/* Allow hook setting in the same fashion as jQuery's $.css(). */
		Velocity.hook = function(elements, arg2, arg3) {
			var value;

			elements = sanitizeElements(elements);

			$.each(elements, function(i, element) {
				/* Initialize Velocity's per-element data cache if this element hasn't previously been animated. */
				if (Data(element) === undefined) {
					Velocity.init(element);
				}

				/* Get property value. If an element set was passed in, only return the value for the first element. */
				if (arg3 === undefined) {
					if (value === undefined) {
						value = CSS.getPropertyValue(element, arg2);
					}
					/* Set property value. */
				} else {
					/* sPV returns an array of the normalized propertyName/propertyValue pair used to update the DOM. */
					var adjustedSet = CSS.setPropertyValue(element, arg2, arg3);

					/* Transform properties don't automatically set. They have to be flushed to the DOM. */
					if (adjustedSet[0] === "transform") {
						Velocity.CSS.flushTransformCache(element);
					}

					value = adjustedSet;
				}
			});

			return value;
		};

		/*****************
		 Animation
		 *****************/

		var animate = function() {
			var opts;

			/******************
			 Call Chain
			 ******************/

			/* Logic for determining what to return to the call stack when exiting out of Velocity. */
			function getChain() {
				/* If we are using the utility function, attempt to return this call's promise. If no promise library was detected,
				 default to null instead of returning the targeted elements so that utility function's return value is standardized. */
				if (isUtility) {
					return promiseData.promise || null;
					/* Otherwise, if we're using $.fn, return the jQuery-/Zepto-wrapped element set. */
				} else {
					return elementsWrapped;
				}
			}

			/*************************
			 Arguments Assignment
			 *************************/

			/* To allow for expressive CoffeeScript code, Velocity supports an alternative syntax in which "elements" (or "e"), "properties" (or "p"), and "options" (or "o")
			 objects are defined on a container object that's passed in as Velocity's sole argument. */
			/* Note: Some browsers automatically populate arguments with a "properties" object. We detect it by checking for its default "names" property. */
			var syntacticSugar = (arguments[0] && (arguments[0].p || (($.isPlainObject(arguments[0].properties) && !arguments[0].properties.names) || Type.isString(arguments[0].properties)))),
					/* Whether Velocity was called via the utility function (as opposed to on a jQuery/Zepto object). */
					isUtility,
					/* When Velocity is called via the utility function ($.Velocity()/Velocity()), elements are explicitly
					 passed in as the first parameter. Thus, argument positioning varies. We normalize them here. */
					elementsWrapped,
					argumentIndex;

			var elements,
					propertiesMap,
					options;

			/* Detect jQuery/Zepto elements being animated via the $.fn method. */
			if (Type.isWrapped(this)) {
				isUtility = false;

				argumentIndex = 0;
				elements = this;
				elementsWrapped = this;
				/* Otherwise, raw elements are being animated via the utility function. */
			} else {
				isUtility = true;

				argumentIndex = 1;
				elements = syntacticSugar ? (arguments[0].elements || arguments[0].e) : arguments[0];
			}

			/***************
			 Promises
			 ***************/

			var promiseData = {
				promise: null,
				resolver: null,
				rejecter: null
			};

			/* If this call was made via the utility function (which is the default method of invocation when jQuery/Zepto are not being used), and if
			 promise support was detected, create a promise object for this call and store references to its resolver and rejecter methods. The resolve
			 method is used when a call completes naturally or is prematurely stopped by the user. In both cases, completeCall() handles the associated
			 call cleanup and promise resolving logic. The reject method is used when an invalid set of arguments is passed into a Velocity call. */
			/* Note: Velocity employs a call-based queueing architecture, which means that stopping an animating element actually stops the full call that
			 triggered it -- not that one element exclusively. Similarly, there is one promise per call, and all elements targeted by a Velocity call are
			 grouped together for the purposes of resolving and rejecting a promise. */
			if (isUtility && Velocity.Promise) {
				promiseData.promise = new Velocity.Promise(function(resolve, reject) {
					promiseData.resolver = resolve;
					promiseData.rejecter = reject;
				});
			}

			if (syntacticSugar) {
				propertiesMap = arguments[0].properties || arguments[0].p;
				options = arguments[0].options || arguments[0].o;
			} else {
				propertiesMap = arguments[argumentIndex];
				options = arguments[argumentIndex + 1];
			}

			elements = sanitizeElements(elements);

			if (!elements) {
				if (promiseData.promise) {
					if (!propertiesMap || !options || options.promiseRejectEmpty !== false) {
						promiseData.rejecter();
					} else {
						promiseData.resolver();
					}
				}
				return;
			}

			/* The length of the element set (in the form of a nodeList or an array of elements) is defaulted to 1 in case a
			 single raw DOM element is passed in (which doesn't contain a length property). */
			var elementsLength = elements.length,
					elementsIndex = 0;

			/***************************
			 Argument Overloading
			 ***************************/

			/* Support is included for jQuery's argument overloading: $.animate(propertyMap [, duration] [, easing] [, complete]).
			 Overloading is detected by checking for the absence of an object being passed into options. */
			/* Note: The stop/finish/pause/resume actions do not accept animation options, and are therefore excluded from this check. */
			if (!/^(stop|finish|finishAll|pause|resume)$/i.test(propertiesMap) && !$.isPlainObject(options)) {
				/* The utility function shifts all arguments one position to the right, so we adjust for that offset. */
				var startingArgumentPosition = argumentIndex + 1;

				options = {};

				/* Iterate through all options arguments */
				for (var i = startingArgumentPosition; i < arguments.length; i++) {
					/* Treat a number as a duration. Parse it out. */
					/* Note: The following RegEx will return true if passed an array with a number as its first item.
					 Thus, arrays are skipped from this check. */
					if (!Type.isArray(arguments[i]) && (/^(fast|normal|slow)$/i.test(arguments[i]) || /^\d/.test(arguments[i]))) {
						options.duration = arguments[i];
						/* Treat strings and arrays as easings. */
					} else if (Type.isString(arguments[i]) || Type.isArray(arguments[i])) {
						options.easing = arguments[i];
						/* Treat a function as a complete callback. */
					} else if (Type.isFunction(arguments[i])) {
						options.complete = arguments[i];
					}
				}
			}

			/*********************
			 Action Detection
			 *********************/

			/* Velocity's behavior is categorized into "actions": Elements can either be specially scrolled into view,
			 or they can be started, stopped, paused, resumed, or reversed . If a literal or referenced properties map is passed in as Velocity's
			 first argument, the associated action is "start". Alternatively, "scroll", "reverse", "pause", "resume" or "stop" can be passed in 
			 instead of a properties map. */
			var action;

			switch (propertiesMap) {
				case "scroll":
					action = "scroll";
					break;

				case "reverse":
					action = "reverse";
					break;

				case "pause":

					/*******************
					 Action: Pause
					 *******************/

					var currentTime = (new Date()).getTime();

					/* Handle delay timers */
					$.each(elements, function(i, element) {
						pauseDelayOnElement(element, currentTime);
					});

					/* Pause and Resume are call-wide (not on a per element basis). Thus, calling pause or resume on a 
					 single element will cause any calls that containt tweens for that element to be paused/resumed
					 as well. */

					/* Iterate through all calls and pause any that contain any of our elements */
					$.each(Velocity.State.calls, function(i, activeCall) {

						var found = false;
						/* Inactive calls are set to false by the logic inside completeCall(). Skip them. */
						if (activeCall) {
							/* Iterate through the active call's targeted elements. */
							$.each(activeCall[1], function(k, activeElement) {
								var queueName = (options === undefined) ? "" : options;

								if (queueName !== true && (activeCall[2].queue !== queueName) && !(options === undefined && activeCall[2].queue === false)) {
									return true;
								}

								/* Iterate through the calls targeted by the stop command. */
								$.each(elements, function(l, element) {
									/* Check that this call was applied to the target element. */
									if (element === activeElement) {

										/* Set call to paused */
										activeCall[5] = {
											resume: false
										};

										/* Once we match an element, we can bounce out to the next call entirely */
										found = true;
										return false;
									}
								});

								/* Proceed to check next call if we have already matched */
								if (found) {
									return false;
								}
							});
						}

					});

					/* Since pause creates no new tweens, exit out of Velocity. */
					return getChain();

				case "resume":

					/*******************
					 Action: Resume
					 *******************/

					/* Handle delay timers */
					$.each(elements, function(i, element) {
						resumeDelayOnElement(element, currentTime);
					});

					/* Pause and Resume are call-wide (not on a per elemnt basis). Thus, calling pause or resume on a 
					 single element will cause any calls that containt tweens for that element to be paused/resumed
					 as well. */

					/* Iterate through all calls and pause any that contain any of our elements */
					$.each(Velocity.State.calls, function(i, activeCall) {
						var found = false;
						/* Inactive calls are set to false by the logic inside completeCall(). Skip them. */
						if (activeCall) {
							/* Iterate through the active call's targeted elements. */
							$.each(activeCall[1], function(k, activeElement) {
								var queueName = (options === undefined) ? "" : options;

								if (queueName !== true && (activeCall[2].queue !== queueName) && !(options === undefined && activeCall[2].queue === false)) {
									return true;
								}

								/* Skip any calls that have never been paused */
								if (!activeCall[5]) {
									return true;
								}

								/* Iterate through the calls targeted by the stop command. */
								$.each(elements, function(l, element) {
									/* Check that this call was applied to the target element. */
									if (element === activeElement) {

										/* Flag a pause object to be resumed, which will occur during the next tick. In
										 addition, the pause object will at that time be deleted */
										activeCall[5].resume = true;

										/* Once we match an element, we can bounce out to the next call entirely */
										found = true;
										return false;
									}
								});

								/* Proceed to check next call if we have already matched */
								if (found) {
									return false;
								}
							});
						}

					});

					/* Since resume creates no new tweens, exit out of Velocity. */
					return getChain();

				case "finish":
				case "finishAll":
				case "stop":
					/*******************
					 Action: Stop
					 *******************/

					/* Clear the currently-active delay on each targeted element. */
					$.each(elements, function(i, element) {
						if (Data(element) && Data(element).delayTimer) {
							/* Stop the timer from triggering its cached next() function. */
							clearTimeout(Data(element).delayTimer.setTimeout);

							/* Manually call the next() function so that the subsequent queue items can progress. */
							if (Data(element).delayTimer.next) {
								Data(element).delayTimer.next();
							}

							delete Data(element).delayTimer;
						}

						/* If we want to finish everything in the queue, we have to iterate through it
						 and call each function. This will make them active calls below, which will
						 cause them to be applied via the duration setting. */
						if (propertiesMap === "finishAll" && (options === true || Type.isString(options))) {
							/* Iterate through the items in the element's queue. */
							$.each($.queue(element, Type.isString(options) ? options : ""), function(_, item) {
								/* The queue array can contain an "inprogress" string, which we skip. */
								if (Type.isFunction(item)) {
									item();
								}
							});

							/* Clearing the $.queue() array is achieved by resetting it to []. */
							$.queue(element, Type.isString(options) ? options : "", []);
						}
					});

					var callsToStop = [];

					/* When the stop action is triggered, the elements' currently active call is immediately stopped. The active call might have
					 been applied to multiple elements, in which case all of the call's elements will be stopped. When an element
					 is stopped, the next item in its animation queue is immediately triggered. */
					/* An additional argument may be passed in to clear an element's remaining queued calls. Either true (which defaults to the "fx" queue)
					 or a custom queue string can be passed in. */
					/* Note: The stop command runs prior to Velocity's Queueing phase since its behavior is intended to take effect *immediately*,
					 regardless of the element's current queue state. */

					/* Iterate through every active call. */
					$.each(Velocity.State.calls, function(i, activeCall) {
						/* Inactive calls are set to false by the logic inside completeCall(). Skip them. */
						if (activeCall) {
							/* Iterate through the active call's targeted elements. */
							$.each(activeCall[1], function(k, activeElement) {
								/* If true was passed in as a secondary argument, clear absolutely all calls on this element. Otherwise, only
								 clear calls associated with the relevant queue. */
								/* Call stopping logic works as follows:
								 - options === true --> stop current default queue calls (and queue:false calls), including remaining queued ones.
								 - options === undefined --> stop current queue:"" call and all queue:false calls.
								 - options === false --> stop only queue:false calls.
								 - options === "custom" --> stop current queue:"custom" call, including remaining queued ones (there is no functionality to only clear the currently-running queue:"custom" call). */
								var queueName = (options === undefined) ? "" : options;

								if (queueName !== true && (activeCall[2].queue !== queueName) && !(options === undefined && activeCall[2].queue === false)) {
									return true;
								}

								/* Iterate through the calls targeted by the stop command. */
								$.each(elements, function(l, element) {
									/* Check that this call was applied to the target element. */
									if (element === activeElement) {
										/* Optionally clear the remaining queued calls. If we're doing "finishAll" this won't find anything,
										 due to the queue-clearing above. */
										if (options === true || Type.isString(options)) {
											/* Iterate through the items in the element's queue. */
											$.each($.queue(element, Type.isString(options) ? options : ""), function(_, item) {
												/* The queue array can contain an "inprogress" string, which we skip. */
												if (Type.isFunction(item)) {
													/* Pass the item's callback a flag indicating that we want to abort from the queue call.
													 (Specifically, the queue will resolve the call's associated promise then abort.)  */
													item(null, true);
												}
											});

											/* Clearing the $.queue() array is achieved by resetting it to []. */
											$.queue(element, Type.isString(options) ? options : "", []);
										}

										if (propertiesMap === "stop") {
											/* Since "reverse" uses cached start values (the previous call's endValues), these values must be
											 changed to reflect the final value that the elements were actually tweened to. */
											/* Note: If only queue:false animations are currently running on an element, it won't have a tweensContainer
											 object. Also, queue:false animations can't be reversed. */
											var data = Data(element);
											if (data && data.tweensContainer && queueName !== false) {
												$.each(data.tweensContainer, function(m, activeTween) {
													activeTween.endValue = activeTween.currentValue;
												});
											}

											callsToStop.push(i);
										} else if (propertiesMap === "finish" || propertiesMap === "finishAll") {
											/* To get active tweens to finish immediately, we forcefully shorten their durations to 1ms so that
											 they finish upon the next rAf tick then proceed with normal call completion logic. */
											activeCall[2].duration = 1;
										}
									}
								});
							});
						}
					});

					/* Prematurely call completeCall() on each matched active call. Pass an additional flag for "stop" to indicate
					 that the complete callback and display:none setting should be skipped since we're completing prematurely. */
					if (propertiesMap === "stop") {
						$.each(callsToStop, function(i, j) {
							completeCall(j, true);
						});

						if (promiseData.promise) {
							/* Immediately resolve the promise associated with this stop call since stop runs synchronously. */
							promiseData.resolver(elements);
						}
					}

					/* Since we're stopping, and not proceeding with queueing, exit out of Velocity. */
					return getChain();

				default:
					/* Treat a non-empty plain object as a literal properties map. */
					if ($.isPlainObject(propertiesMap) && !Type.isEmptyObject(propertiesMap)) {
						action = "start";

						/****************
						 Redirects
						 ****************/

						/* Check if a string matches a registered redirect (see Redirects above). */
					} else if (Type.isString(propertiesMap) && Velocity.Redirects[propertiesMap]) {
						opts = $.extend({}, options);

						var durationOriginal = opts.duration,
								delayOriginal = opts.delay || 0;

						/* If the backwards option was passed in, reverse the element set so that elements animate from the last to the first. */
						if (opts.backwards === true) {
							elements = $.extend(true, [], elements).reverse();
						}

						/* Individually trigger the redirect for each element in the set to prevent users from having to handle iteration logic in their redirect. */
						$.each(elements, function(elementIndex, element) {
							/* If the stagger option was passed in, successively delay each element by the stagger value (in ms). Retain the original delay value. */
							if (parseFloat(opts.stagger)) {
								opts.delay = delayOriginal + (parseFloat(opts.stagger) * elementIndex);
							} else if (Type.isFunction(opts.stagger)) {
								opts.delay = delayOriginal + opts.stagger.call(element, elementIndex, elementsLength);
							}

							/* If the drag option was passed in, successively increase/decrease (depending on the presense of opts.backwards)
							 the duration of each element's animation, using floors to prevent producing very short durations. */
							if (opts.drag) {
								/* Default the duration of UI pack effects (callouts and transitions) to 1000ms instead of the usual default duration of 400ms. */
								opts.duration = parseFloat(durationOriginal) || (/^(callout|transition)/.test(propertiesMap) ? 1000 : DURATION_DEFAULT);

								/* For each element, take the greater duration of: A) animation completion percentage relative to the original duration,
								 B) 75% of the original duration, or C) a 200ms fallback (in case duration is already set to a low value).
								 The end result is a baseline of 75% of the redirect's duration that increases/decreases as the end of the element set is approached. */
								opts.duration = Math.max(opts.duration * (opts.backwards ? 1 - elementIndex / elementsLength : (elementIndex + 1) / elementsLength), opts.duration * 0.75, 200);
							}

							/* Pass in the call's opts object so that the redirect can optionally extend it. It defaults to an empty object instead of null to
							 reduce the opts checking logic required inside the redirect. */
							Velocity.Redirects[propertiesMap].call(element, element, opts || {}, elementIndex, elementsLength, elements, promiseData.promise ? promiseData : undefined);
						});

						/* Since the animation logic resides within the redirect's own code, abort the remainder of this call.
						 (The performance overhead up to this point is virtually non-existant.) */
						/* Note: The jQuery call chain is kept intact by returning the complete element set. */
						return getChain();
					} else {
						var abortError = "Velocity: First argument (" + propertiesMap + ") was not a property map, a known action, or a registered redirect. Aborting.";

						if (promiseData.promise) {
							promiseData.rejecter(new Error(abortError));
						} else if (window.console) {
							console.log(abortError);
						}

						return getChain();
					}
			}

			/**************************
			 Call-Wide Variables
			 **************************/

			/* A container for CSS unit conversion ratios (e.g. %, rem, and em ==> px) that is used to cache ratios across all elements
			 being animated in a single Velocity call. Calculating unit ratios necessitates DOM querying and updating, and is therefore
			 avoided (via caching) wherever possible. This container is call-wide instead of page-wide to avoid the risk of using stale
			 conversion metrics across Velocity animations that are not immediately consecutively chained. */
			var callUnitConversionData = {
				lastParent: null,
				lastPosition: null,
				lastFontSize: null,
				lastPercentToPxWidth: null,
				lastPercentToPxHeight: null,
				lastEmToPx: null,
				remToPx: null,
				vwToPx: null,
				vhToPx: null
			};

			/* A container for all the ensuing tween data and metadata associated with this call. This container gets pushed to the page-wide
			 Velocity.State.calls array that is processed during animation ticking. */
			var call = [];

			/************************
			 Element Processing
			 ************************/

			/* Element processing consists of three parts -- data processing that cannot go stale and data processing that *can* go stale (i.e. third-party style modifications):
			 1) Pre-Queueing: Element-wide variables, including the element's data storage, are instantiated. Call options are prepared. If triggered, the Stop action is executed.
			 2) Queueing: The logic that runs once this call has reached its point of execution in the element's $.queue() stack. Most logic is placed here to avoid risking it becoming stale.
			 3) Pushing: Consolidation of the tween data followed by its push onto the global in-progress calls container.
			 `elementArrayIndex` allows passing index of the element in the original array to value functions.
			 If `elementsIndex` were used instead the index would be determined by the elements' per-element queue.
			 */
			function processElement(element, elementArrayIndex) {

				/*************************
				 Part I: Pre-Queueing
				 *************************/

				/***************************
				 Element-Wide Variables
				 ***************************/

				var /* The runtime opts object is the extension of the current call's options and Velocity's page-wide option defaults. */
						opts = $.extend({}, Velocity.defaults, options),
						/* A container for the processed data associated with each property in the propertyMap.
						 (Each property in the map produces its own "tween".) */
						tweensContainer = {},
						elementUnitConversionData;

				/******************
				 Element Init
				 ******************/

				if (Data(element) === undefined) {
					Velocity.init(element);
				}

				/******************
				 Option: Delay
				 ******************/

				/* Since queue:false doesn't respect the item's existing queue, we avoid injecting its delay here (it's set later on). */
				/* Note: Velocity rolls its own delay function since jQuery doesn't have a utility alias for $.fn.delay()
				 (and thus requires jQuery element creation, which we avoid since its overhead includes DOM querying). */
				if (parseFloat(opts.delay) && opts.queue !== false) {
					$.queue(element, opts.queue, function(next, clearQueue) {
						if (clearQueue === true) {
							/* Do not continue with animation queueing. */
							return true;
						}

						/* This is a flag used to indicate to the upcoming completeCall() function that this queue entry was initiated by Velocity. See completeCall() for further details. */
						Velocity.velocityQueueEntryFlag = true;

						/* The ensuing queue item (which is assigned to the "next" argument that $.queue() automatically passes in) will be triggered after a setTimeout delay.
						 The setTimeout is stored so that it can be subjected to clearTimeout() if this animation is prematurely stopped via Velocity's "stop" command, and
						 delayBegin/delayTime is used to ensure we can "pause" and "resume" a tween that is still mid-delay. */

						/* Temporarily store delayed elements to facilite access for global pause/resume */
						var callIndex = Velocity.State.delayedElements.count++;
						Velocity.State.delayedElements[callIndex] = element;

						var delayComplete = (function(index) {
							return function() {
								/* Clear the temporary element */
								Velocity.State.delayedElements[index] = false;

								/* Finally, issue the call */
								next();
							};
						})(callIndex);


						Data(element).delayBegin = (new Date()).getTime();
						Data(element).delay = parseFloat(opts.delay);
						Data(element).delayTimer = {
							setTimeout: setTimeout(next, parseFloat(opts.delay)),
							next: delayComplete
						};
					});
				}

				/*********************
				 Option: Duration
				 *********************/

				/* Support for jQuery's named durations. */
				switch (opts.duration.toString().toLowerCase()) {
					case "fast":
						opts.duration = 200;
						break;

					case "normal":
						opts.duration = DURATION_DEFAULT;
						break;

					case "slow":
						opts.duration = 600;
						break;

					default:
						/* Remove the potential "ms" suffix and default to 1 if the user is attempting to set a duration of 0 (in order to produce an immediate style change). */
						opts.duration = parseFloat(opts.duration) || 1;
				}

				/************************
				 Global Option: Mock
				 ************************/

				if (Velocity.mock !== false) {
					/* In mock mode, all animations are forced to 1ms so that they occur immediately upon the next rAF tick.
					 Alternatively, a multiplier can be passed in to time remap all delays and durations. */
					if (Velocity.mock === true) {
						opts.duration = opts.delay = 1;
					} else {
						opts.duration *= parseFloat(Velocity.mock) || 1;
						opts.delay *= parseFloat(Velocity.mock) || 1;
					}
				}

				/*******************
				 Option: Easing
				 *******************/

				opts.easing = getEasing(opts.easing, opts.duration);

				/**********************
				 Option: Callbacks
				 **********************/

				/* Callbacks must functions. Otherwise, default to null. */
				if (opts.begin && !Type.isFunction(opts.begin)) {
					opts.begin = null;
				}

				if (opts.progress && !Type.isFunction(opts.progress)) {
					opts.progress = null;
				}

				if (opts.complete && !Type.isFunction(opts.complete)) {
					opts.complete = null;
				}

				/*********************************
				 Option: Display & Visibility
				 *********************************/

				/* Refer to Velocity's documentation (VelocityJS.org/#displayAndVisibility) for a description of the display and visibility options' behavior. */
				/* Note: We strictly check for undefined instead of falsiness because display accepts an empty string value. */
				if (opts.display !== undefined && opts.display !== null) {
					opts.display = opts.display.toString().toLowerCase();

					/* Users can pass in a special "auto" value to instruct Velocity to set the element to its default display value. */
					if (opts.display === "auto") {
						opts.display = Velocity.CSS.Values.getDisplayType(element);
					}
				}

				if (opts.visibility !== undefined && opts.visibility !== null) {
					opts.visibility = opts.visibility.toString().toLowerCase();
				}

				/**********************
				 Option: mobileHA
				 **********************/

				/* When set to true, and if this is a mobile device, mobileHA automatically enables hardware acceleration (via a null transform hack)
				 on animating elements. HA is removed from the element at the completion of its animation. */
				/* Note: Android Gingerbread doesn't support HA. If a null transform hack (mobileHA) is in fact set, it will prevent other tranform subproperties from taking effect. */
				/* Note: You can read more about the use of mobileHA in Velocity's documentation: VelocityJS.org/#mobileHA. */
				opts.mobileHA = (opts.mobileHA && Velocity.State.isMobile && !Velocity.State.isGingerbread);

				/***********************
				 Part II: Queueing
				 ***********************/

				/* When a set of elements is targeted by a Velocity call, the set is broken up and each element has the current Velocity call individually queued onto it.
				 In this way, each element's existing queue is respected; some elements may already be animating and accordingly should not have this current Velocity call triggered immediately. */
				/* In each queue, tween data is processed for each animating property then pushed onto the call-wide calls array. When the last element in the set has had its tweens processed,
				 the call array is pushed to Velocity.State.calls for live processing by the requestAnimationFrame tick. */
				function buildQueue(next) {
					var data, lastTweensContainer;

					/*******************
					 Option: Begin
					 *******************/

					/* The begin callback is fired once per call -- not once per elemenet -- and is passed the full raw DOM element set as both its context and its first argument. */
					if (opts.begin && elementsIndex === 0) {
						/* We throw callbacks in a setTimeout so that thrown errors don't halt the execution of Velocity itself. */
						try {
							opts.begin.call(elements, elements);
						} catch (error) {
							setTimeout(function() {
								throw error;
							}, 1);
						}
					}

					/*****************************************
					 Tween Data Construction (for Scroll)
					 *****************************************/

					/* Note: In order to be subjected to chaining and animation options, scroll's tweening is routed through Velocity as if it were a standard CSS property animation. */
					if (action === "scroll") {
						/* The scroll action uniquely takes an optional "offset" option -- specified in pixels -- that offsets the targeted scroll position. */
						var scrollDirection = (/^x$/i.test(opts.axis) ? "Left" : "Top"),
								scrollOffset = parseFloat(opts.offset) || 0,
								scrollPositionCurrent,
								scrollPositionCurrentAlternate,
								scrollPositionEnd;

						/* Scroll also uniquely takes an optional "container" option, which indicates the parent element that should be scrolled --
						 as opposed to the browser window itself. This is useful for scrolling toward an element that's inside an overflowing parent element. */
						if (opts.container) {
							/* Ensure that either a jQuery object or a raw DOM element was passed in. */
							if (Type.isWrapped(opts.container) || Type.isNode(opts.container)) {
								/* Extract the raw DOM element from the jQuery wrapper. */
								opts.container = opts.container[0] || opts.container;
								/* Note: Unlike other properties in Velocity, the browser's scroll position is never cached since it so frequently changes
								 (due to the user's natural interaction with the page). */
								scrollPositionCurrent = opts.container["scroll" + scrollDirection]; /* GET */

								/* $.position() values are relative to the container's currently viewable area (without taking into account the container's true dimensions
								 -- say, for example, if the container was not overflowing). Thus, the scroll end value is the sum of the child element's position *and*
								 the scroll container's current scroll position. */
								scrollPositionEnd = (scrollPositionCurrent + $(element).position()[scrollDirection.toLowerCase()]) + scrollOffset; /* GET */
								/* If a value other than a jQuery object or a raw DOM element was passed in, default to null so that this option is ignored. */
							} else {
								opts.container = null;
							}
						} else {
							/* If the window itself is being scrolled -- not a containing element -- perform a live scroll position lookup using
							 the appropriate cached property names (which differ based on browser type). */
							scrollPositionCurrent = Velocity.State.scrollAnchor[Velocity.State["scrollProperty" + scrollDirection]]; /* GET */
							/* When scrolling the browser window, cache the alternate axis's current value since window.scrollTo() doesn't let us change only one value at a time. */
							scrollPositionCurrentAlternate = Velocity.State.scrollAnchor[Velocity.State["scrollProperty" + (scrollDirection === "Left" ? "Top" : "Left")]]; /* GET */

							/* Unlike $.position(), $.offset() values are relative to the browser window's true dimensions -- not merely its currently viewable area --
							 and therefore end values do not need to be compounded onto current values. */
							scrollPositionEnd = $(element).offset()[scrollDirection.toLowerCase()] + scrollOffset; /* GET */
						}

						/* Since there's only one format that scroll's associated tweensContainer can take, we create it manually. */
						tweensContainer = {
							scroll: {
								rootPropertyValue: false,
								startValue: scrollPositionCurrent,
								currentValue: scrollPositionCurrent,
								endValue: scrollPositionEnd,
								unitType: "",
								easing: opts.easing,
								scrollData: {
									container: opts.container,
									direction: scrollDirection,
									alternateValue: scrollPositionCurrentAlternate
								}
							},
							element: element
						};

						if (Velocity.debug) {
							console.log("tweensContainer (scroll): ", tweensContainer.scroll, element);
						}

						/******************************************
						 Tween Data Construction (for Reverse)
						 ******************************************/

						/* Reverse acts like a "start" action in that a property map is animated toward. The only difference is
						 that the property map used for reverse is the inverse of the map used in the previous call. Thus, we manipulate
						 the previous call to construct our new map: use the previous map's end values as our new map's start values. Copy over all other data. */
						/* Note: Reverse can be directly called via the "reverse" parameter, or it can be indirectly triggered via the loop option. (Loops are composed of multiple reverses.) */
						/* Note: Reverse calls do not need to be consecutively chained onto a currently-animating element in order to operate on cached values;
						 there is no harm to reverse being called on a potentially stale data cache since reverse's behavior is simply defined
						 as reverting to the element's values as they were prior to the previous *Velocity* call. */
					} else if (action === "reverse") {
						data = Data(element);

						/* Abort if there is no prior animation data to reverse to. */
						if (!data) {
							return;
						}

						if (!data.tweensContainer) {
							/* Dequeue the element so that this queue entry releases itself immediately, allowing subsequent queue entries to run. */
							$.dequeue(element, opts.queue);

							return;
						} else {
							/*********************
							 Options Parsing
							 *********************/

							/* If the element was hidden via the display option in the previous call,
							 revert display to "auto" prior to reversal so that the element is visible again. */
							if (data.opts.display === "none") {
								data.opts.display = "auto";
							}

							if (data.opts.visibility === "hidden") {
								data.opts.visibility = "visible";
							}

							/* If the loop option was set in the previous call, disable it so that "reverse" calls aren't recursively generated.
							 Further, remove the previous call's callback options; typically, users do not want these to be refired. */
							data.opts.loop = false;
							data.opts.begin = null;
							data.opts.complete = null;

							/* Since we're extending an opts object that has already been extended with the defaults options object,
							 we remove non-explicitly-defined properties that are auto-assigned values. */
							if (!options.easing) {
								delete opts.easing;
							}

							if (!options.duration) {
								delete opts.duration;
							}

							/* The opts object used for reversal is an extension of the options object optionally passed into this
							 reverse call plus the options used in the previous Velocity call. */
							opts = $.extend({}, data.opts, opts);

							/*************************************
							 Tweens Container Reconstruction
							 *************************************/

							/* Create a deepy copy (indicated via the true flag) of the previous call's tweensContainer. */
							lastTweensContainer = $.extend(true, {}, data ? data.tweensContainer : null);

							/* Manipulate the previous tweensContainer by replacing its end values and currentValues with its start values. */
							for (var lastTween in lastTweensContainer) {
								/* In addition to tween data, tweensContainers contain an element property that we ignore here. */
								if (lastTweensContainer.hasOwnProperty(lastTween) && lastTween !== "element") {
									var lastStartValue = lastTweensContainer[lastTween].startValue;

									lastTweensContainer[lastTween].startValue = lastTweensContainer[lastTween].currentValue = lastTweensContainer[lastTween].endValue;
									lastTweensContainer[lastTween].endValue = lastStartValue;

									/* Easing is the only option that embeds into the individual tween data (since it can be defined on a per-property basis).
									 Accordingly, every property's easing value must be updated when an options object is passed in with a reverse call.
									 The side effect of this extensibility is that all per-property easing values are forcefully reset to the new value. */
									if (!Type.isEmptyObject(options)) {
										lastTweensContainer[lastTween].easing = opts.easing;
									}

									if (Velocity.debug) {
										console.log("reverse tweensContainer (" + lastTween + "): " + JSON.stringify(lastTweensContainer[lastTween]), element);
									}
								}
							}

							tweensContainer = lastTweensContainer;
						}

						/*****************************************
						 Tween Data Construction (for Start)
						 *****************************************/

					} else if (action === "start") {

						/*************************
						 Value Transferring
						 *************************/

						/* If this queue entry follows a previous Velocity-initiated queue entry *and* if this entry was created
						 while the element was in the process of being animated by Velocity, then this current call is safe to use
						 the end values from the prior call as its start values. Velocity attempts to perform this value transfer
						 process whenever possible in order to avoid requerying the DOM. */
						/* If values aren't transferred from a prior call and start values were not forcefed by the user (more on this below),
						 then the DOM is queried for the element's current values as a last resort. */
						/* Note: Conversely, animation reversal (and looping) *always* perform inter-call value transfers; they never requery the DOM. */

						data = Data(element);

						/* The per-element isAnimating flag is used to indicate whether it's safe (i.e. the data isn't stale)
						 to transfer over end values to use as start values. If it's set to true and there is a previous
						 Velocity call to pull values from, do so. */
						if (data && data.tweensContainer && data.isAnimating === true) {
							lastTweensContainer = data.tweensContainer;
						}

						/***************************
						 Tween Data Calculation
						 ***************************/

						/* This function parses property data and defaults endValue, easing, and startValue as appropriate. */
						/* Property map values can either take the form of 1) a single value representing the end value,
						 or 2) an array in the form of [ endValue, [, easing] [, startValue] ].
						 The optional third parameter is a forcefed startValue to be used instead of querying the DOM for
						 the element's current value. Read Velocity's docmentation to learn more about forcefeeding: VelocityJS.org/#forcefeeding */
						var parsePropertyValue = function(valueData, skipResolvingEasing) {
							var endValue, easing, startValue;

							/* If we have a function as the main argument then resolve it first, in case it returns an array that needs to be split */
							if (Type.isFunction(valueData)) {
								valueData = valueData.call(element, elementArrayIndex, elementsLength);
							}

							/* Handle the array format, which can be structured as one of three potential overloads:
							 A) [ endValue, easing, startValue ], B) [ endValue, easing ], or C) [ endValue, startValue ] */
							if (Type.isArray(valueData)) {
								/* endValue is always the first item in the array. Don't bother validating endValue's value now
								 since the ensuing property cycling logic does that. */
								endValue = valueData[0];

								/* Two-item array format: If the second item is a number, function, or hex string, treat it as a
								 start value since easings can only be non-hex strings or arrays. */
								if ((!Type.isArray(valueData[1]) && /^[\d-]/.test(valueData[1])) || Type.isFunction(valueData[1]) || CSS.RegEx.isHex.test(valueData[1])) {
									startValue = valueData[1];
									/* Two or three-item array: If the second item is a non-hex string easing name or an array, treat it as an easing. */
								} else if ((Type.isString(valueData[1]) && !CSS.RegEx.isHex.test(valueData[1]) && Velocity.Easings[valueData[1]]) || Type.isArray(valueData[1])) {
									easing = skipResolvingEasing ? valueData[1] : getEasing(valueData[1], opts.duration);

									/* Don't bother validating startValue's value now since the ensuing property cycling logic inherently does that. */
									startValue = valueData[2];
								} else {
									startValue = valueData[1] || valueData[2];
								}
								/* Handle the single-value format. */
							} else {
								endValue = valueData;
							}

							/* Default to the call's easing if a per-property easing type was not defined. */
							if (!skipResolvingEasing) {
								easing = easing || opts.easing;
							}

							/* If functions were passed in as values, pass the function the current element as its context,
							 plus the element's index and the element set's size as arguments. Then, assign the returned value. */
							if (Type.isFunction(endValue)) {
								endValue = endValue.call(element, elementArrayIndex, elementsLength);
							}

							if (Type.isFunction(startValue)) {
								startValue = startValue.call(element, elementArrayIndex, elementsLength);
							}

							/* Allow startValue to be left as undefined to indicate to the ensuing code that its value was not forcefed. */
							return [endValue || 0, easing, startValue];
						};

						var fixPropertyValue = function(property, valueData) {
							/* In case this property is a hook, there are circumstances where we will intend to work on the hook's root property and not the hooked subproperty. */
							var rootProperty = CSS.Hooks.getRoot(property),
									rootPropertyValue = false,
									/* Parse out endValue, easing, and startValue from the property's data. */
									endValue = valueData[0],
									easing = valueData[1],
									startValue = valueData[2],
									pattern;

							/**************************
							 Start Value Sourcing
							 **************************/

							/* Other than for the dummy tween property, properties that are not supported by the browser (and do not have an associated normalization) will
							 inherently produce no style changes when set, so they are skipped in order to decrease animation tick overhead.
							 Property support is determined via prefixCheck(), which returns a false flag when no supported is detected. */
							/* Note: Since SVG elements have some of their properties directly applied as HTML attributes,
							 there is no way to check for their explicit browser support, and so we skip skip this check for them. */
							if ((!data || !data.isSVG) && rootProperty !== "tween" && CSS.Names.prefixCheck(rootProperty)[1] === false && CSS.Normalizations.registered[rootProperty] === undefined) {
								if (Velocity.debug) {
									console.log("Skipping [" + rootProperty + "] due to a lack of browser support.");
								}
								return;
							}

							/* If the display option is being set to a non-"none" (e.g. "block") and opacity (filter on IE<=8) is being
							 animated to an endValue of non-zero, the user's intention is to fade in from invisible, thus we forcefeed opacity
							 a startValue of 0 if its startValue hasn't already been sourced by value transferring or prior forcefeeding. */
							if (((opts.display !== undefined && opts.display !== null && opts.display !== "none") || (opts.visibility !== undefined && opts.visibility !== "hidden")) && /opacity|filter/.test(property) && !startValue && endValue !== 0) {
								startValue = 0;
							}

							/* If values have been transferred from the previous Velocity call, extract the endValue and rootPropertyValue
							 for all of the current call's properties that were *also* animated in the previous call. */
							/* Note: Value transferring can optionally be disabled by the user via the _cacheValues option. */
							if (opts._cacheValues && lastTweensContainer && lastTweensContainer[property]) {
								if (startValue === undefined) {
									startValue = lastTweensContainer[property].endValue + lastTweensContainer[property].unitType;
								}

								/* The previous call's rootPropertyValue is extracted from the element's data cache since that's the
								 instance of rootPropertyValue that gets freshly updated by the tweening process, whereas the rootPropertyValue
								 attached to the incoming lastTweensContainer is equal to the root property's value prior to any tweening. */
								rootPropertyValue = data.rootPropertyValueCache[rootProperty];
								/* If values were not transferred from a previous Velocity call, query the DOM as needed. */
							} else {
								/* Handle hooked properties. */
								if (CSS.Hooks.registered[property]) {
									if (startValue === undefined) {
										rootPropertyValue = CSS.getPropertyValue(element, rootProperty); /* GET */
										/* Note: The following getPropertyValue() call does not actually trigger a DOM query;
										 getPropertyValue() will extract the hook from rootPropertyValue. */
										startValue = CSS.getPropertyValue(element, property, rootPropertyValue);
										/* If startValue is already defined via forcefeeding, do not query the DOM for the root property's value;
										 just grab rootProperty's zero-value template from CSS.Hooks. This overwrites the element's actual
										 root property value (if one is set), but this is acceptable since the primary reason users forcefeed is
										 to avoid DOM queries, and thus we likewise avoid querying the DOM for the root property's value. */
									} else {
										/* Grab this hook's zero-value template, e.g. "0px 0px 0px black". */
										rootPropertyValue = CSS.Hooks.templates[rootProperty][1];
									}
									/* Handle non-hooked properties that haven't already been defined via forcefeeding. */
								} else if (startValue === undefined) {
									startValue = CSS.getPropertyValue(element, property); /* GET */
								}
							}

							/**************************
							 Value Data Extraction
							 **************************/

							var separatedValue,
									endValueUnitType,
									startValueUnitType,
									operator = false;

							/* Separates a property value into its numeric value and its unit type. */
							var separateValue = function(property, value) {
								var unitType,
										numericValue;

								numericValue = (value || "0")
										.toString()
										.toLowerCase()
										/* Match the unit type at the end of the value. */
										.replace(/[%A-z]+$/, function(match) {
											/* Grab the unit type. */
											unitType = match;

											/* Strip the unit type off of value. */
											return "";
										});

								/* If no unit type was supplied, assign one that is appropriate for this property (e.g. "deg" for rotateZ or "px" for width). */
								if (!unitType) {
									unitType = CSS.Values.getUnitType(property);
								}

								return [numericValue, unitType];
							};

							if (startValue !== endValue && Type.isString(startValue) && Type.isString(endValue)) {
								pattern = "";
								var iStart = 0, // index in startValue
										iEnd = 0, // index in endValue
										aStart = [], // array of startValue numbers
										aEnd = [], // array of endValue numbers
										inCalc = 0, // Keep track of being inside a "calc()" so we don't duplicate it
										inRGB = 0, // Keep track of being inside an RGB as we can't use fractional values
										inRGBA = 0; // Keep track of being inside an RGBA as we must pass fractional for the alpha channel

								startValue = CSS.Hooks.fixColors(startValue);
								endValue = CSS.Hooks.fixColors(endValue);
								while (iStart < startValue.length && iEnd < endValue.length) {
									var cStart = startValue[iStart],
											cEnd = endValue[iEnd];

									if (/[\d\.-]/.test(cStart) && /[\d\.-]/.test(cEnd)) {
										var tStart = cStart, // temporary character buffer
												tEnd = cEnd, // temporary character buffer
												dotStart = ".", // Make sure we can only ever match a single dot in a decimal
												dotEnd = "."; // Make sure we can only ever match a single dot in a decimal

										while (++iStart < startValue.length) {
											cStart = startValue[iStart];
											if (cStart === dotStart) {
												dotStart = ".."; // Can never match two characters
											} else if (!/\d/.test(cStart)) {
												break;
											}
											tStart += cStart;
										}
										while (++iEnd < endValue.length) {
											cEnd = endValue[iEnd];
											if (cEnd === dotEnd) {
												dotEnd = ".."; // Can never match two characters
											} else if (!/\d/.test(cEnd)) {
												break;
											}
											tEnd += cEnd;
										}
										var uStart = CSS.Hooks.getUnit(startValue, iStart), // temporary unit type
												uEnd = CSS.Hooks.getUnit(endValue, iEnd); // temporary unit type

										iStart += uStart.length;
										iEnd += uEnd.length;
										if (uStart === uEnd) {
											// Same units
											if (tStart === tEnd) {
												// Same numbers, so just copy over
												pattern += tStart + uStart;
											} else {
												// Different numbers, so store them
												pattern += "{" + aStart.length + (inRGB ? "!" : "") + "}" + uStart;
												aStart.push(parseFloat(tStart));
												aEnd.push(parseFloat(tEnd));
											}
										} else {
											// Different units, so put into a "calc(from + to)" and animate each side to/from zero
											var nStart = parseFloat(tStart),
													nEnd = parseFloat(tEnd);

											pattern += (inCalc < 5 ? "calc" : "") + "("
													+ (nStart ? "{" + aStart.length + (inRGB ? "!" : "") + "}" : "0") + uStart
													+ " + "
													+ (nEnd ? "{" + (aStart.length + (nStart ? 1 : 0)) + (inRGB ? "!" : "") + "}" : "0") + uEnd
													+ ")";
											if (nStart) {
												aStart.push(nStart);
												aEnd.push(0);
											}
											if (nEnd) {
												aStart.push(0);
												aEnd.push(nEnd);
											}
										}
									} else if (cStart === cEnd) {
										pattern += cStart;
										iStart++;
										iEnd++;
										// Keep track of being inside a calc()
										if (inCalc === 0 && cStart === "c"
												|| inCalc === 1 && cStart === "a"
												|| inCalc === 2 && cStart === "l"
												|| inCalc === 3 && cStart === "c"
												|| inCalc >= 4 && cStart === "("
												) {
											inCalc++;
										} else if ((inCalc && inCalc < 5)
												|| inCalc >= 4 && cStart === ")" && --inCalc < 5) {
											inCalc = 0;
										}
										// Keep track of being inside an rgb() / rgba()
										if (inRGB === 0 && cStart === "r"
												|| inRGB === 1 && cStart === "g"
												|| inRGB === 2 && cStart === "b"
												|| inRGB === 3 && cStart === "a"
												|| inRGB >= 3 && cStart === "("
												) {
											if (inRGB === 3 && cStart === "a") {
												inRGBA = 1;
											}
											inRGB++;
										} else if (inRGBA && cStart === ",") {
											if (++inRGBA > 3) {
												inRGB = inRGBA = 0;
											}
										} else if ((inRGBA && inRGB < (inRGBA ? 5 : 4))
												|| inRGB >= (inRGBA ? 4 : 3) && cStart === ")" && --inRGB < (inRGBA ? 5 : 4)) {
											inRGB = inRGBA = 0;
										}
									} else {
										inCalc = 0;
										// TODO: changing units, fixing colours
										break;
									}
								}
								if (iStart !== startValue.length || iEnd !== endValue.length) {
									if (Velocity.debug) {
										console.error("Trying to pattern match mis-matched strings [\"" + endValue + "\", \"" + startValue + "\"]");
									}
									pattern = undefined;
								}
								if (pattern) {
									if (aStart.length) {
										if (Velocity.debug) {
											console.log("Pattern found \"" + pattern + "\" -> ", aStart, aEnd, "[" + startValue + "," + endValue + "]");
										}
										startValue = aStart;
										endValue = aEnd;
										endValueUnitType = startValueUnitType = "";
									} else {
										pattern = undefined;
									}
								}
							}

							if (!pattern) {
								/* Separate startValue. */
								separatedValue = separateValue(property, startValue);
								startValue = separatedValue[0];
								startValueUnitType = separatedValue[1];

								/* Separate endValue, and extract a value operator (e.g. "+=", "-=") if one exists. */
								separatedValue = separateValue(property, endValue);
								endValue = separatedValue[0].replace(/^([+-\/*])=/, function(match, subMatch) {
									operator = subMatch;

									/* Strip the operator off of the value. */
									return "";
								});
								endValueUnitType = separatedValue[1];

								/* Parse float values from endValue and startValue. Default to 0 if NaN is returned. */
								startValue = parseFloat(startValue) || 0;
								endValue = parseFloat(endValue) || 0;

								/***************************************
								 Property-Specific Value Conversion
								 ***************************************/

								/* Custom support for properties that don't actually accept the % unit type, but where pollyfilling is trivial and relatively foolproof. */
								if (endValueUnitType === "%") {
									/* A %-value fontSize/lineHeight is relative to the parent's fontSize (as opposed to the parent's dimensions),
									 which is identical to the em unit's behavior, so we piggyback off of that. */
									if (/^(fontSize|lineHeight)$/.test(property)) {
										/* Convert % into an em decimal value. */
										endValue = endValue / 100;
										endValueUnitType = "em";
										/* For scaleX and scaleY, convert the value into its decimal format and strip off the unit type. */
									} else if (/^scale/.test(property)) {
										endValue = endValue / 100;
										endValueUnitType = "";
										/* For RGB components, take the defined percentage of 255 and strip off the unit type. */
									} else if (/(Red|Green|Blue)$/i.test(property)) {
										endValue = (endValue / 100) * 255;
										endValueUnitType = "";
									}
								}
							}

							/***************************
							 Unit Ratio Calculation
							 ***************************/

							/* When queried, the browser returns (most) CSS property values in pixels. Therefore, if an endValue with a unit type of
							 %, em, or rem is animated toward, startValue must be converted from pixels into the same unit type as endValue in order
							 for value manipulation logic (increment/decrement) to proceed. Further, if the startValue was forcefed or transferred
							 from a previous call, startValue may also not be in pixels. Unit conversion logic therefore consists of two steps:
							 1) Calculating the ratio of %/em/rem/vh/vw relative to pixels
							 2) Converting startValue into the same unit of measurement as endValue based on these ratios. */
							/* Unit conversion ratios are calculated by inserting a sibling node next to the target node, copying over its position property,
							 setting values with the target unit type then comparing the returned pixel value. */
							/* Note: Even if only one of these unit types is being animated, all unit ratios are calculated at once since the overhead
							 of batching the SETs and GETs together upfront outweights the potential overhead
							 of layout thrashing caused by re-querying for uncalculated ratios for subsequently-processed properties. */
							/* Todo: Shift this logic into the calls' first tick instance so that it's synced with RAF. */
							var calculateUnitRatios = function() {

								/************************
								 Same Ratio Checks
								 ************************/

								/* The properties below are used to determine whether the element differs sufficiently from this call's
								 previously iterated element to also differ in its unit conversion ratios. If the properties match up with those
								 of the prior element, the prior element's conversion ratios are used. Like most optimizations in Velocity,
								 this is done to minimize DOM querying. */
								var sameRatioIndicators = {
									myParent: element.parentNode || document.body, /* GET */
									position: CSS.getPropertyValue(element, "position"), /* GET */
									fontSize: CSS.getPropertyValue(element, "fontSize") /* GET */
								},
										/* Determine if the same % ratio can be used. % is based on the element's position value and its parent's width and height dimensions. */
										samePercentRatio = ((sameRatioIndicators.position === callUnitConversionData.lastPosition) && (sameRatioIndicators.myParent === callUnitConversionData.lastParent)),
										/* Determine if the same em ratio can be used. em is relative to the element's fontSize. */
										sameEmRatio = (sameRatioIndicators.fontSize === callUnitConversionData.lastFontSize);

								/* Store these ratio indicators call-wide for the next element to compare against. */
								callUnitConversionData.lastParent = sameRatioIndicators.myParent;
								callUnitConversionData.lastPosition = sameRatioIndicators.position;
								callUnitConversionData.lastFontSize = sameRatioIndicators.fontSize;

								/***************************
								 Element-Specific Units
								 ***************************/

								/* Note: IE8 rounds to the nearest pixel when returning CSS values, thus we perform conversions using a measurement
								 of 100 (instead of 1) to give our ratios a precision of at least 2 decimal values. */
								var measurement = 100,
										unitRatios = {};

								if (!sameEmRatio || !samePercentRatio) {
									var dummy = data && data.isSVG ? document.createElementNS("http://www.w3.org/2000/svg", "rect") : document.createElement("div");

									Velocity.init(dummy);
									sameRatioIndicators.myParent.appendChild(dummy);

									/* To accurately and consistently calculate conversion ratios, the element's cascaded overflow and box-sizing are stripped.
									 Similarly, since width/height can be artificially constrained by their min-/max- equivalents, these are controlled for as well. */
									/* Note: Overflow must be also be controlled for per-axis since the overflow property overwrites its per-axis values. */
									$.each(["overflow", "overflowX", "overflowY"], function(i, property) {
										Velocity.CSS.setPropertyValue(dummy, property, "hidden");
									});
									Velocity.CSS.setPropertyValue(dummy, "position", sameRatioIndicators.position);
									Velocity.CSS.setPropertyValue(dummy, "fontSize", sameRatioIndicators.fontSize);
									Velocity.CSS.setPropertyValue(dummy, "boxSizing", "content-box");

									/* width and height act as our proxy properties for measuring the horizontal and vertical % ratios. */
									$.each(["minWidth", "maxWidth", "width", "minHeight", "maxHeight", "height"], function(i, property) {
										Velocity.CSS.setPropertyValue(dummy, property, measurement + "%");
									});
									/* paddingLeft arbitrarily acts as our proxy property for the em ratio. */
									Velocity.CSS.setPropertyValue(dummy, "paddingLeft", measurement + "em");

									/* Divide the returned value by the measurement to get the ratio between 1% and 1px. Default to 1 since working with 0 can produce Infinite. */
									unitRatios.percentToPxWidth = callUnitConversionData.lastPercentToPxWidth = (parseFloat(CSS.getPropertyValue(dummy, "width", null, true)) || 1) / measurement; /* GET */
									unitRatios.percentToPxHeight = callUnitConversionData.lastPercentToPxHeight = (parseFloat(CSS.getPropertyValue(dummy, "height", null, true)) || 1) / measurement; /* GET */
									unitRatios.emToPx = callUnitConversionData.lastEmToPx = (parseFloat(CSS.getPropertyValue(dummy, "paddingLeft")) || 1) / measurement; /* GET */

									sameRatioIndicators.myParent.removeChild(dummy);
								} else {
									unitRatios.emToPx = callUnitConversionData.lastEmToPx;
									unitRatios.percentToPxWidth = callUnitConversionData.lastPercentToPxWidth;
									unitRatios.percentToPxHeight = callUnitConversionData.lastPercentToPxHeight;
								}

								/***************************
								 Element-Agnostic Units
								 ***************************/

								/* Whereas % and em ratios are determined on a per-element basis, the rem unit only needs to be checked
								 once per call since it's exclusively dependant upon document.body's fontSize. If this is the first time
								 that calculateUnitRatios() is being run during this call, remToPx will still be set to its default value of null,
								 so we calculate it now. */
								if (callUnitConversionData.remToPx === null) {
									/* Default to browsers' default fontSize of 16px in the case of 0. */
									callUnitConversionData.remToPx = parseFloat(CSS.getPropertyValue(document.body, "fontSize")) || 16; /* GET */
								}

								/* Similarly, viewport units are %-relative to the window's inner dimensions. */
								if (callUnitConversionData.vwToPx === null) {
									callUnitConversionData.vwToPx = parseFloat(window.innerWidth) / 100; /* GET */
									callUnitConversionData.vhToPx = parseFloat(window.innerHeight) / 100; /* GET */
								}

								unitRatios.remToPx = callUnitConversionData.remToPx;
								unitRatios.vwToPx = callUnitConversionData.vwToPx;
								unitRatios.vhToPx = callUnitConversionData.vhToPx;

								if (Velocity.debug >= 1) {
									console.log("Unit ratios: " + JSON.stringify(unitRatios), element);
								}
								return unitRatios;
							};

							/********************
							 Unit Conversion
							 ********************/

							/* The * and / operators, which are not passed in with an associated unit, inherently use startValue's unit. Skip value and unit conversion. */
							if (/[\/*]/.test(operator)) {
								endValueUnitType = startValueUnitType;
								/* If startValue and endValue differ in unit type, convert startValue into the same unit type as endValue so that if endValueUnitType
								 is a relative unit (%, em, rem), the values set during tweening will continue to be accurately relative even if the metrics they depend
								 on are dynamically changing during the course of the animation. Conversely, if we always normalized into px and used px for setting values, the px ratio
								 would become stale if the original unit being animated toward was relative and the underlying metrics change during the animation. */
								/* Since 0 is 0 in any unit type, no conversion is necessary when startValue is 0 -- we just start at 0 with endValueUnitType. */
							} else if ((startValueUnitType !== endValueUnitType) && startValue !== 0) {
								/* Unit conversion is also skipped when endValue is 0, but *startValueUnitType* must be used for tween values to remain accurate. */
								/* Note: Skipping unit conversion here means that if endValueUnitType was originally a relative unit, the animation won't relatively
								 match the underlying metrics if they change, but this is acceptable since we're animating toward invisibility instead of toward visibility,
								 which remains past the point of the animation's completion. */
								if (endValue === 0) {
									endValueUnitType = startValueUnitType;
								} else {
									/* By this point, we cannot avoid unit conversion (it's undesirable since it causes layout thrashing).
									 If we haven't already, we trigger calculateUnitRatios(), which runs once per element per call. */
									elementUnitConversionData = elementUnitConversionData || calculateUnitRatios();

									/* The following RegEx matches CSS properties that have their % values measured relative to the x-axis. */
									/* Note: W3C spec mandates that all of margin and padding's properties (even top and bottom) are %-relative to the *width* of the parent element. */
									var axis = (/margin|padding|left|right|width|text|word|letter/i.test(property) || /X$/.test(property) || property === "x") ? "x" : "y";

									/* In order to avoid generating n^2 bespoke conversion functions, unit conversion is a two-step process:
									 1) Convert startValue into pixels. 2) Convert this new pixel value into endValue's unit type. */
									switch (startValueUnitType) {
										case "%":
											/* Note: translateX and translateY are the only properties that are %-relative to an element's own dimensions -- not its parent's dimensions.
											 Velocity does not include a special conversion process to account for this behavior. Therefore, animating translateX/Y from a % value
											 to a non-% value will produce an incorrect start value. Fortunately, this sort of cross-unit conversion is rarely done by users in practice. */
											startValue *= (axis === "x" ? elementUnitConversionData.percentToPxWidth : elementUnitConversionData.percentToPxHeight);
											break;

										case "px":
											/* px acts as our midpoint in the unit conversion process; do nothing. */
											break;

										default:
											startValue *= elementUnitConversionData[startValueUnitType + "ToPx"];
									}

									/* Invert the px ratios to convert into to the target unit. */
									switch (endValueUnitType) {
										case "%":
											startValue *= 1 / (axis === "x" ? elementUnitConversionData.percentToPxWidth : elementUnitConversionData.percentToPxHeight);
											break;

										case "px":
											/* startValue is already in px, do nothing; we're done. */
											break;

										default:
											startValue *= 1 / elementUnitConversionData[endValueUnitType + "ToPx"];
									}
								}
							}

							/*********************
							 Relative Values
							 *********************/

							/* Operator logic must be performed last since it requires unit-normalized start and end values. */
							/* Note: Relative *percent values* do not behave how most people think; while one would expect "+=50%"
							 to increase the property 1.5x its current value, it in fact increases the percent units in absolute terms:
							 50 points is added on top of the current % value. */
							switch (operator) {
								case "+":
									endValue = startValue + endValue;
									break;

								case "-":
									endValue = startValue - endValue;
									break;

								case "*":
									endValue = startValue * endValue;
									break;

								case "/":
									endValue = startValue / endValue;
									break;
							}

							/**************************
							 tweensContainer Push
							 **************************/

							/* Construct the per-property tween object, and push it to the element's tweensContainer. */
							tweensContainer[property] = {
								rootPropertyValue: rootPropertyValue,
								startValue: startValue,
								currentValue: startValue,
								endValue: endValue,
								unitType: endValueUnitType,
								easing: easing
							};
							if (pattern) {
								tweensContainer[property].pattern = pattern;
							}

							if (Velocity.debug) {
								console.log("tweensContainer (" + property + "): " + JSON.stringify(tweensContainer[property]), element);
							}
						};

						/* Create a tween out of each property, and append its associated data to tweensContainer. */
						for (var property in propertiesMap) {

							if (!propertiesMap.hasOwnProperty(property)) {
								continue;
							}
							/* The original property name's format must be used for the parsePropertyValue() lookup,
							 but we then use its camelCase styling to normalize it for manipulation. */
							var propertyName = CSS.Names.camelCase(property),
									valueData = parsePropertyValue(propertiesMap[property]);

							/* Find shorthand color properties that have been passed a hex string. */
							/* Would be quicker to use CSS.Lists.colors.includes() if possible */
							if (_inArray(CSS.Lists.colors, propertyName)) {
								/* Parse the value data for each shorthand. */
								var endValue = valueData[0],
										easing = valueData[1],
										startValue = valueData[2];

								if (CSS.RegEx.isHex.test(endValue)) {
									/* Convert the hex strings into their RGB component arrays. */
									var colorComponents = ["Red", "Green", "Blue"],
											endValueRGB = CSS.Values.hexToRgb(endValue),
											startValueRGB = startValue ? CSS.Values.hexToRgb(startValue) : undefined;

									/* Inject the RGB component tweens into propertiesMap. */
									for (var i = 0; i < colorComponents.length; i++) {
										var dataArray = [endValueRGB[i]];

										if (easing) {
											dataArray.push(easing);
										}

										if (startValueRGB !== undefined) {
											dataArray.push(startValueRGB[i]);
										}

										fixPropertyValue(propertyName + colorComponents[i], dataArray);
									}
									/* If we have replaced a shortcut color value then don't update the standard property name */
									continue;
								}
							}
							fixPropertyValue(propertyName, valueData);
						}

						/* Along with its property data, store a reference to the element itself onto tweensContainer. */
						tweensContainer.element = element;
					}

					/*****************
					 Call Push
					 *****************/

					/* Note: tweensContainer can be empty if all of the properties in this call's property map were skipped due to not
					 being supported by the browser. The element property is used for checking that the tweensContainer has been appended to. */
					if (tweensContainer.element) {
						/* Apply the "velocity-animating" indicator class. */
						CSS.Values.addClass(element, "velocity-animating");

						/* The call array houses the tweensContainers for each element being animated in the current call. */
						call.push(tweensContainer);

						data = Data(element);

						if (data) {
							/* Store the tweensContainer and options if we're working on the default effects queue, so that they can be used by the reverse command. */
							if (opts.queue === "") {

								data.tweensContainer = tweensContainer;
								data.opts = opts;
							}

							/* Switch on the element's animating flag. */
							data.isAnimating = true;
						}

						/* Once the final element in this call's element set has been processed, push the call array onto
						 Velocity.State.calls for the animation tick to immediately begin processing. */
						if (elementsIndex === elementsLength - 1) {
							/* Add the current call plus its associated metadata (the element set and the call's options) onto the global call container.
							 Anything on this call container is subjected to tick() processing. */
							Velocity.State.calls.push([call, elements, opts, null, promiseData.resolver, null, 0]);

							/* If the animation tick isn't running, start it. (Velocity shuts it off when there are no active calls to process.) */
							if (Velocity.State.isTicking === false) {
								Velocity.State.isTicking = true;

								/* Start the tick loop. */
								tick();
							}
						} else {
							elementsIndex++;
						}
					}
				}

				/* When the queue option is set to false, the call skips the element's queue and fires immediately. */
				if (opts.queue === false) {
					/* Since this buildQueue call doesn't respect the element's existing queue (which is where a delay option would have been appended),
					 we manually inject the delay property here with an explicit setTimeout. */
					if (opts.delay) {

						/* Temporarily store delayed elements to facilitate access for global pause/resume */
						var callIndex = Velocity.State.delayedElements.count++;
						Velocity.State.delayedElements[callIndex] = element;

						var delayComplete = (function(index) {
							return function() {
								/* Clear the temporary element */
								Velocity.State.delayedElements[index] = false;

								/* Finally, issue the call */
								buildQueue();
							};
						})(callIndex);

						Data(element).delayBegin = (new Date()).getTime();
						Data(element).delay = parseFloat(opts.delay);
						Data(element).delayTimer = {
							setTimeout: setTimeout(buildQueue, parseFloat(opts.delay)),
							next: delayComplete
						};
					} else {
						buildQueue();
					}
					/* Otherwise, the call undergoes element queueing as normal. */
					/* Note: To interoperate with jQuery, Velocity uses jQuery's own $.queue() stack for queuing logic. */
				} else {
					$.queue(element, opts.queue, function(next, clearQueue) {
						/* If the clearQueue flag was passed in by the stop command, resolve this call's promise. (Promises can only be resolved once,
						 so it's fine if this is repeatedly triggered for each element in the associated call.) */
						if (clearQueue === true) {
							if (promiseData.promise) {
								promiseData.resolver(elements);
							}

							/* Do not continue with animation queueing. */
							return true;
						}

						/* This flag indicates to the upcoming completeCall() function that this queue entry was initiated by Velocity.
						 See completeCall() for further details. */
						Velocity.velocityQueueEntryFlag = true;

						buildQueue(next);
					});
				}

				/*********************
				 Auto-Dequeuing
				 *********************/

				/* As per jQuery's $.queue() behavior, to fire the first non-custom-queue entry on an element, the element
				 must be dequeued if its queue stack consists *solely* of the current call. (This can be determined by checking
				 for the "inprogress" item that jQuery prepends to active queue stack arrays.) Regardless, whenever the element's
				 queue is further appended with additional items -- including $.delay()'s or even $.animate() calls, the queue's
				 first entry is automatically fired. This behavior contrasts that of custom queues, which never auto-fire. */
				/* Note: When an element set is being subjected to a non-parallel Velocity call, the animation will not begin until
				 each one of the elements in the set has reached the end of its individually pre-existing queue chain. */
				/* Note: Unfortunately, most people don't fully grasp jQuery's powerful, yet quirky, $.queue() function.
				 Lean more here: http://stackoverflow.com/questions/1058158/can-somebody-explain-jquery-queue-to-me */
				if ((opts.queue === "" || opts.queue === "fx") && $.queue(element)[0] !== "inprogress") {
					$.dequeue(element);
				}
			}

			/**************************
			 Element Set Iteration
			 **************************/

			/* If the "nodeType" property exists on the elements variable, we're animating a single element.
			 Place it in an array so that $.each() can iterate over it. */
			$.each(elements, function(i, element) {
				/* Ensure each element in a set has a nodeType (is a real element) to avoid throwing errors. */
				if (Type.isNode(element)) {
					processElement(element, i);
				}
			});

			/******************
			 Option: Loop
			 ******************/

			/* The loop option accepts an integer indicating how many times the element should loop between the values in the
			 current call's properties map and the element's property values prior to this call. */
			/* Note: The loop option's logic is performed here -- after element processing -- because the current call needs
			 to undergo its queue insertion prior to the loop option generating its series of constituent "reverse" calls,
			 which chain after the current call. Two reverse calls (two "alternations") constitute one loop. */
			opts = $.extend({}, Velocity.defaults, options);
			opts.loop = parseInt(opts.loop, 10);
			var reverseCallsCount = (opts.loop * 2) - 1;

			if (opts.loop) {
				/* Double the loop count to convert it into its appropriate number of "reverse" calls.
				 Subtract 1 from the resulting value since the current call is included in the total alternation count. */
				for (var x = 0; x < reverseCallsCount; x++) {
					/* Since the logic for the reverse action occurs inside Queueing and therefore this call's options object
					 isn't parsed until then as well, the current call's delay option must be explicitly passed into the reverse
					 call so that the delay logic that occurs inside *Pre-Queueing* can process it. */
					var reverseOptions = {
						delay: opts.delay,
						progress: opts.progress
					};

					/* If a complete callback was passed into this call, transfer it to the loop redirect's final "reverse" call
					 so that it's triggered when the entire redirect is complete (and not when the very first animation is complete). */
					if (x === reverseCallsCount - 1) {
						reverseOptions.display = opts.display;
						reverseOptions.visibility = opts.visibility;
						reverseOptions.complete = opts.complete;
					}

					animate(elements, "reverse", reverseOptions);
				}
			}

			/***************
			 Chaining
			 ***************/

			/* Return the elements back to the call chain, with wrapped elements taking precedence in case Velocity was called via the $.fn. extension. */
			return getChain();
		};

		/* Turn Velocity into the animation function, extended with the pre-existing Velocity object. */
		Velocity = $.extend(animate, Velocity);
		/* For legacy support, also expose the literal animate method. */
		Velocity.animate = animate;

		/**************
		 Timing
		 **************/

		/* Ticker function. */
		var ticker = window.requestAnimationFrame || rAFShim;

		/* Inactive browser tabs pause rAF, which results in all active animations immediately sprinting to their completion states when the tab refocuses.
		 To get around this, we dynamically switch rAF to setTimeout (which the browser *doesn't* pause) when the tab loses focus. We skip this for mobile
		 devices to avoid wasting battery power on inactive tabs. */
		/* Note: Tab focus detection doesn't work on older versions of IE, but that's okay since they don't support rAF to begin with. */
		if (!Velocity.State.isMobile && document.hidden !== undefined) {
			var updateTicker = function() {
				/* Reassign the rAF function (which the global tick() function uses) based on the tab's focus state. */
				if (document.hidden) {
					ticker = function(callback) {
						/* The tick function needs a truthy first argument in order to pass its internal timestamp check. */
						return setTimeout(function() {
							callback(true);
						}, 16);
					};

					/* The rAF loop has been paused by the browser, so we manually restart the tick. */
					tick();
				} else {
					ticker = window.requestAnimationFrame || rAFShim;
				}
			};

			/* Page could be sitting in the background at this time (i.e. opened as new tab) so making sure we use correct ticker from the start */
			updateTicker();

			/* And then run check again every time visibility changes */
			document.addEventListener("visibilitychange", updateTicker);
		}

		/************
		 Tick
		 ************/

		/* Note: All calls to Velocity are pushed to the Velocity.State.calls array, which is fully iterated through upon each tick. */
		function tick(timestamp) {
			/* An empty timestamp argument indicates that this is the first tick occurence since ticking was turned on.
			 We leverage this metadata to fully ignore the first tick pass since RAF's initial pass is fired whenever
			 the browser's next tick sync time occurs, which results in the first elements subjected to Velocity
			 calls being animated out of sync with any elements animated immediately thereafter. In short, we ignore
			 the first RAF tick pass so that elements being immediately consecutively animated -- instead of simultaneously animated
			 by the same Velocity call -- are properly batched into the same initial RAF tick and consequently remain in sync thereafter. */
			if (timestamp) {
				/* We normally use RAF's high resolution timestamp but as it can be significantly offset when the browser is
				 under high stress we give the option for choppiness over allowing the browser to drop huge chunks of frames.
				 We use performance.now() and shim it if it doesn't exist for when the tab is hidden. */
				var timeCurrent = Velocity.timestamp && timestamp !== true ? timestamp : performance.now();

				/********************
				 Call Iteration
				 ********************/

				var callsLength = Velocity.State.calls.length;

				/* To speed up iterating over this array, it is compacted (falsey items -- calls that have completed -- are removed)
				 when its length has ballooned to a point that can impact tick performance. This only becomes necessary when animation
				 has been continuous with many elements over a long period of time; whenever all active calls are completed, completeCall() clears Velocity.State.calls. */
				if (callsLength > 10000) {
					Velocity.State.calls = compactSparseArray(Velocity.State.calls);
					callsLength = Velocity.State.calls.length;
				}

				/* Iterate through each active call. */
				for (var i = 0; i < callsLength; i++) {
					/* When a Velocity call is completed, its Velocity.State.calls entry is set to false. Continue on to the next call. */
					if (!Velocity.State.calls[i]) {
						continue;
					}

					/************************
					 Call-Wide Variables
					 ************************/

					var callContainer = Velocity.State.calls[i],
							call = callContainer[0],
							opts = callContainer[2],
							timeStart = callContainer[3],
							firstTick = !timeStart,
							tweenDummyValue = null,
							pauseObject = callContainer[5],
							millisecondsEllapsed = callContainer[6];



					/* If timeStart is undefined, then this is the first time that this call has been processed by tick().
					 We assign timeStart now so that its value is as close to the real animation start time as possible.
					 (Conversely, had timeStart been defined when this call was added to Velocity.State.calls, the delay
					 between that time and now would cause the first few frames of the tween to be skipped since
					 percentComplete is calculated relative to timeStart.) */
					/* Further, subtract 16ms (the approximate resolution of RAF) from the current time value so that the
					 first tick iteration isn't wasted by animating at 0% tween completion, which would produce the
					 same style value as the element's current value. */
					if (!timeStart) {
						timeStart = Velocity.State.calls[i][3] = timeCurrent - 16;
					}

					/* If a pause object is present, skip processing unless it has been set to resume */
					if (pauseObject) {
						if (pauseObject.resume === true) {
							/* Update the time start to accomodate the paused completion amount */
							timeStart = callContainer[3] = Math.round(timeCurrent - millisecondsEllapsed - 16);

							/* Remove pause object after processing */
							callContainer[5] = null;
						} else {
							continue;
						}
					}

					millisecondsEllapsed = callContainer[6] = timeCurrent - timeStart;

					/* The tween's completion percentage is relative to the tween's start time, not the tween's start value
					 (which would result in unpredictable tween durations since JavaScript's timers are not particularly accurate).
					 Accordingly, we ensure that percentComplete does not exceed 1. */
					var percentComplete = Math.min((millisecondsEllapsed) / opts.duration, 1);

					/**********************
					 Element Iteration
					 **********************/

					/* For every call, iterate through each of the elements in its set. */
					for (var j = 0, callLength = call.length; j < callLength; j++) {
						var tweensContainer = call[j],
								element = tweensContainer.element;

						/* Check to see if this element has been deleted midway through the animation by checking for the
						 continued existence of its data cache. If it's gone, or the element is currently paused, skip animating this element. */
						if (!Data(element)) {
							continue;
						}

						var transformPropertyExists = false;

						/**********************************
						 Display & Visibility Toggling
						 **********************************/

						/* If the display option is set to non-"none", set it upfront so that the element can become visible before tweening begins.
						 (Otherwise, display's "none" value is set in completeCall() once the animation has completed.) */
						if (opts.display !== undefined && opts.display !== null && opts.display !== "none") {
							if (opts.display === "flex") {
								var flexValues = ["-webkit-box", "-moz-box", "-ms-flexbox", "-webkit-flex"];

								$.each(flexValues, function(i, flexValue) {
									CSS.setPropertyValue(element, "display", flexValue);
								});
							}

							CSS.setPropertyValue(element, "display", opts.display);
						}

						/* Same goes with the visibility option, but its "none" equivalent is "hidden". */
						if (opts.visibility !== undefined && opts.visibility !== "hidden") {
							CSS.setPropertyValue(element, "visibility", opts.visibility);
						}

						/************************
						 Property Iteration
						 ************************/

						/* For every element, iterate through each property. */
						for (var property in tweensContainer) {
							/* Note: In addition to property tween data, tweensContainer contains a reference to its associated element. */
							if (tweensContainer.hasOwnProperty(property) && property !== "element") {
								var tween = tweensContainer[property],
										currentValue,
										/* Easing can either be a pre-genereated function or a string that references a pre-registered easing
										 on the Velocity.Easings object. In either case, return the appropriate easing *function*. */
										easing = Type.isString(tween.easing) ? Velocity.Easings[tween.easing] : tween.easing;

								/******************************
								 Current Value Calculation
								 ******************************/

								if (Type.isString(tween.pattern)) {
									var patternReplace = percentComplete === 1 ?
											function($0, index, round) {
												var result = tween.endValue[index];

												return round ? Math.round(result) : result;
											} :
											function($0, index, round) {
												var startValue = tween.startValue[index],
														tweenDelta = tween.endValue[index] - startValue,
														result = startValue + (tweenDelta * easing(percentComplete, opts, tweenDelta));

												return round ? Math.round(result) : result;
											};

									currentValue = tween.pattern.replace(/{(\d+)(!)?}/g, patternReplace);
								} else if (percentComplete === 1) {
									/* If this is the last tick pass (if we've reached 100% completion for this tween),
									 ensure that currentValue is explicitly set to its target endValue so that it's not subjected to any rounding. */
									currentValue = tween.endValue;
								} else {
									/* Otherwise, calculate currentValue based on the current delta from startValue. */
									var tweenDelta = tween.endValue - tween.startValue;

									currentValue = tween.startValue + (tweenDelta * easing(percentComplete, opts, tweenDelta));
									/* If no value change is occurring, don't proceed with DOM updating. */
								}
								if (!firstTick && (currentValue === tween.currentValue)) {
									continue;
								}

								tween.currentValue = currentValue;

								/* If we're tweening a fake 'tween' property in order to log transition values, update the one-per-call variable so that
								 it can be passed into the progress callback. */
								if (property === "tween") {
									tweenDummyValue = currentValue;
								} else {
									/******************
									 Hooks: Part I
									 ******************/
									var hookRoot;

									/* For hooked properties, the newly-updated rootPropertyValueCache is cached onto the element so that it can be used
									 for subsequent hooks in this call that are associated with the same root property. If we didn't cache the updated
									 rootPropertyValue, each subsequent update to the root property in this tick pass would reset the previous hook's
									 updates to rootPropertyValue prior to injection. A nice performance byproduct of rootPropertyValue caching is that
									 subsequently chained animations using the same hookRoot but a different hook can use this cached rootPropertyValue. */
									if (CSS.Hooks.registered[property]) {
										hookRoot = CSS.Hooks.getRoot(property);

										var rootPropertyValueCache = Data(element).rootPropertyValueCache[hookRoot];

										if (rootPropertyValueCache) {
											tween.rootPropertyValue = rootPropertyValueCache;
										}
									}

									/*****************
									 DOM Update
									 *****************/

									/* setPropertyValue() returns an array of the property name and property value post any normalization that may have been performed. */
									/* Note: To solve an IE<=8 positioning bug, the unit type is dropped when setting a property value of 0. */
									var adjustedSetData = CSS.setPropertyValue(element, /* SET */
											property,
											tween.currentValue + (IE < 9 && parseFloat(currentValue) === 0 ? "" : tween.unitType),
											tween.rootPropertyValue,
											tween.scrollData);

									/*******************
									 Hooks: Part II
									 *******************/

									/* Now that we have the hook's updated rootPropertyValue (the post-processed value provided by adjustedSetData), cache it onto the element. */
									if (CSS.Hooks.registered[property]) {
										/* Since adjustedSetData contains normalized data ready for DOM updating, the rootPropertyValue needs to be re-extracted from its normalized form. ?? */
										if (CSS.Normalizations.registered[hookRoot]) {
											Data(element).rootPropertyValueCache[hookRoot] = CSS.Normalizations.registered[hookRoot]("extract", null, adjustedSetData[1]);
										} else {
											Data(element).rootPropertyValueCache[hookRoot] = adjustedSetData[1];
										}
									}

									/***************
									 Transforms
									 ***************/

									/* Flag whether a transform property is being animated so that flushTransformCache() can be triggered once this tick pass is complete. */
									if (adjustedSetData[0] === "transform") {
										transformPropertyExists = true;
									}

								}
							}
						}

						/****************
						 mobileHA
						 ****************/

						/* If mobileHA is enabled, set the translate3d transform to null to force hardware acceleration.
						 It's safe to override this property since Velocity doesn't actually support its animation (hooks are used in its place). */
						if (opts.mobileHA) {
							/* Don't set the null transform hack if we've already done so. */
							if (Data(element).transformCache.translate3d === undefined) {
								/* All entries on the transformCache object are later concatenated into a single transform string via flushTransformCache(). */
								Data(element).transformCache.translate3d = "(0px, 0px, 0px)";

								transformPropertyExists = true;
							}
						}

						if (transformPropertyExists) {
							CSS.flushTransformCache(element);
						}
					}

					/* The non-"none" display value is only applied to an element once -- when its associated call is first ticked through.
					 Accordingly, it's set to false so that it isn't re-processed by this call in the next tick. */
					if (opts.display !== undefined && opts.display !== "none") {
						Velocity.State.calls[i][2].display = false;
					}
					if (opts.visibility !== undefined && opts.visibility !== "hidden") {
						Velocity.State.calls[i][2].visibility = false;
					}

					/* Pass the elements and the timing data (percentComplete, msRemaining, timeStart, tweenDummyValue) into the progress callback. */
					if (opts.progress) {
						opts.progress.call(callContainer[1],
								callContainer[1],
								percentComplete,
								Math.max(0, (timeStart + opts.duration) - timeCurrent),
								timeStart,
								tweenDummyValue);
					}

					/* If this call has finished tweening, pass its index to completeCall() to handle call cleanup. */
					if (percentComplete === 1) {
						completeCall(i);
					}
				}
			}

			/* Note: completeCall() sets the isTicking flag to false when the last call on Velocity.State.calls has completed. */
			if (Velocity.State.isTicking) {
				ticker(tick);
			}
		}

		/**********************
		 Call Completion
		 **********************/

		/* Note: Unlike tick(), which processes all active calls at once, call completion is handled on a per-call basis. */
		function completeCall(callIndex, isStopped) {
			/* Ensure the call exists. */
			if (!Velocity.State.calls[callIndex]) {
				return false;
			}

			/* Pull the metadata from the call. */
			var call = Velocity.State.calls[callIndex][0],
					elements = Velocity.State.calls[callIndex][1],
					opts = Velocity.State.calls[callIndex][2],
					resolver = Velocity.State.calls[callIndex][4];

			var remainingCallsExist = false;

			/*************************
			 Element Finalization
			 *************************/

			for (var i = 0, callLength = call.length; i < callLength; i++) {
				var element = call[i].element;

				/* If the user set display to "none" (intending to hide the element), set it now that the animation has completed. */
				/* Note: display:none isn't set when calls are manually stopped (via Velocity("stop"). */
				/* Note: Display gets ignored with "reverse" calls and infinite loops, since this behavior would be undesirable. */
				if (!isStopped && !opts.loop) {
					if (opts.display === "none") {
						CSS.setPropertyValue(element, "display", opts.display);
					}

					if (opts.visibility === "hidden") {
						CSS.setPropertyValue(element, "visibility", opts.visibility);
					}
				}

				/* If the element's queue is empty (if only the "inprogress" item is left at position 0) or if its queue is about to run
				 a non-Velocity-initiated entry, turn off the isAnimating flag. A non-Velocity-initiatied queue entry's logic might alter
				 an element's CSS values and thereby cause Velocity's cached value data to go stale. To detect if a queue entry was initiated by Velocity,
				 we check for the existence of our special Velocity.queueEntryFlag declaration, which minifiers won't rename since the flag
				 is assigned to jQuery's global $ object and thus exists out of Velocity's own scope. */
				var data = Data(element);

				if (opts.loop !== true && ($.queue(element)[1] === undefined || !/\.velocityQueueEntryFlag/i.test($.queue(element)[1]))) {
					/* The element may have been deleted. Ensure that its data cache still exists before acting on it. */
					if (data) {
						data.isAnimating = false;
						/* Clear the element's rootPropertyValueCache, which will become stale. */
						data.rootPropertyValueCache = {};

						var transformHAPropertyExists = false;
						/* If any 3D transform subproperty is at its default value (regardless of unit type), remove it. */
						$.each(CSS.Lists.transforms3D, function(i, transformName) {
							var defaultValue = /^scale/.test(transformName) ? 1 : 0,
									currentValue = data.transformCache[transformName];

							if (data.transformCache[transformName] !== undefined && new RegExp("^\\(" + defaultValue + "[^.]").test(currentValue)) {
								transformHAPropertyExists = true;

								delete data.transformCache[transformName];
							}
						});

						/* Mobile devices have hardware acceleration removed at the end of the animation in order to avoid hogging the GPU's memory. */
						if (opts.mobileHA) {
							transformHAPropertyExists = true;
							delete data.transformCache.translate3d;
						}

						/* Flush the subproperty removals to the DOM. */
						if (transformHAPropertyExists) {
							CSS.flushTransformCache(element);
						}

						/* Remove the "velocity-animating" indicator class. */
						CSS.Values.removeClass(element, "velocity-animating");
					}
				}

				/*********************
				 Option: Complete
				 *********************/

				/* Complete is fired once per call (not once per element) and is passed the full raw DOM element set as both its context and its first argument. */
				/* Note: Callbacks aren't fired when calls are manually stopped (via Velocity("stop"). */
				if (!isStopped && opts.complete && !opts.loop && (i === callLength - 1)) {
					/* We throw callbacks in a setTimeout so that thrown errors don't halt the execution of Velocity itself. */
					try {
						opts.complete.call(elements, elements);
					} catch (error) {
						setTimeout(function() {
							throw error;
						}, 1);
					}
				}

				/**********************
				 Promise Resolving
				 **********************/

				/* Note: Infinite loops don't return promises. */
				if (resolver && opts.loop !== true) {
					resolver(elements);
				}

				/****************************
				 Option: Loop (Infinite)
				 ****************************/

				if (data && opts.loop === true && !isStopped) {
					/* If a rotateX/Y/Z property is being animated by 360 deg with loop:true, swap tween start/end values to enable
					 continuous iterative rotation looping. (Otherise, the element would just rotate back and forth.) */
					$.each(data.tweensContainer, function(propertyName, tweenContainer) {
						if (/^rotate/.test(propertyName) && ((parseFloat(tweenContainer.startValue) - parseFloat(tweenContainer.endValue)) % 360 === 0)) {
							var oldStartValue = tweenContainer.startValue;

							tweenContainer.startValue = tweenContainer.endValue;
							tweenContainer.endValue = oldStartValue;
						}

						if (/^backgroundPosition/.test(propertyName) && parseFloat(tweenContainer.endValue) === 100 && tweenContainer.unitType === "%") {
							tweenContainer.endValue = 0;
							tweenContainer.startValue = 100;
						}
					});

					Velocity(element, "reverse", {loop: true, delay: opts.delay});
				}

				/***************
				 Dequeueing
				 ***************/

				/* Fire the next call in the queue so long as this call's queue wasn't set to false (to trigger a parallel animation),
				 which would have already caused the next call to fire. Note: Even if the end of the animation queue has been reached,
				 $.dequeue() must still be called in order to completely clear jQuery's animation queue. */
				if (opts.queue !== false) {
					$.dequeue(element, opts.queue);
				}
			}

			/************************
			 Calls Array Cleanup
			 ************************/

			/* Since this call is complete, set it to false so that the rAF tick skips it. This array is later compacted via compactSparseArray().
			 (For performance reasons, the call is set to false instead of being deleted from the array: http://www.html5rocks.com/en/tutorials/speed/v8/) */
			Velocity.State.calls[callIndex] = false;

			/* Iterate through the calls array to determine if this was the final in-progress animation.
			 If so, set a flag to end ticking and clear the calls array. */
			for (var j = 0, callsLength = Velocity.State.calls.length; j < callsLength; j++) {
				if (Velocity.State.calls[j] !== false) {
					remainingCallsExist = true;

					break;
				}
			}

			if (remainingCallsExist === false) {
				/* tick() will detect this flag upon its next iteration and subsequently turn itself off. */
				Velocity.State.isTicking = false;

				/* Clear the calls array so that its length is reset. */
				delete Velocity.State.calls;
				Velocity.State.calls = [];
			}
		}

		/******************
		 Frameworks
		 ******************/

		/* Both jQuery and Zepto allow their $.fn object to be extended to allow wrapped elements to be subjected to plugin calls.
		 If either framework is loaded, register a "velocity" extension pointing to Velocity's core animate() method.  Velocity
		 also registers itself onto a global container (window.jQuery || window.Zepto || window) so that certain features are
		 accessible beyond just a per-element scope. This master object contains an .animate() method, which is later assigned to $.fn
		 (if jQuery or Zepto are present). Accordingly, Velocity can both act on wrapped DOM elements and stand alone for targeting raw DOM elements. */
		global.Velocity = Velocity;

		if (global !== window) {
			/* Assign the element function to Velocity's core animate() method. */
			global.fn.velocity = animate;
			/* Assign the object function's defaults to Velocity's global defaults object. */
			global.fn.velocity.defaults = Velocity.defaults;
		}

		/***********************
		 Packaged Redirects
		 ***********************/

		/* slideUp, slideDown */
		$.each(["Down", "Up"], function(i, direction) {
			Velocity.Redirects["slide" + direction] = function(element, options, elementsIndex, elementsSize, elements, promiseData) {
				var opts = $.extend({}, options),
						begin = opts.begin,
						complete = opts.complete,
						inlineValues = {},
						computedValues = {height: "", marginTop: "", marginBottom: "", paddingTop: "", paddingBottom: ""};

				if (opts.display === undefined) {
					/* Show the element before slideDown begins and hide the element after slideUp completes. */
					/* Note: Inline elements cannot have dimensions animated, so they're reverted to inline-block. */
					opts.display = (direction === "Down" ? (Velocity.CSS.Values.getDisplayType(element) === "inline" ? "inline-block" : "block") : "none");
				}

				opts.begin = function() {
					/* If the user passed in a begin callback, fire it now. */
					if (elementsIndex === 0 && begin) {
						begin.call(elements, elements);
					}

					/* Cache the elements' original vertical dimensional property values so that we can animate back to them. */
					for (var property in computedValues) {
						if (!computedValues.hasOwnProperty(property)) {
							continue;
						}
						inlineValues[property] = element.style[property];

						/* For slideDown, use forcefeeding to animate all vertical properties from 0. For slideUp,
						 use forcefeeding to start from computed values and animate down to 0. */
						var propertyValue = CSS.getPropertyValue(element, property);
						computedValues[property] = (direction === "Down") ? [propertyValue, 0] : [0, propertyValue];
					}

					/* Force vertical overflow content to clip so that sliding works as expected. */
					inlineValues.overflow = element.style.overflow;
					element.style.overflow = "hidden";
				};

				opts.complete = function() {
					/* Reset element to its pre-slide inline values once its slide animation is complete. */
					for (var property in inlineValues) {
						if (inlineValues.hasOwnProperty(property)) {
							element.style[property] = inlineValues[property];
						}
					}

					/* If the user passed in a complete callback, fire it now. */
					if (elementsIndex === elementsSize - 1) {
						if (complete) {
							complete.call(elements, elements);
						}
						if (promiseData) {
							promiseData.resolver(elements);
						}
					}
				};

				Velocity(element, computedValues, opts);
			};
		});

		/* fadeIn, fadeOut */
		$.each(["In", "Out"], function(i, direction) {
			Velocity.Redirects["fade" + direction] = function(element, options, elementsIndex, elementsSize, elements, promiseData) {
				var opts = $.extend({}, options),
						complete = opts.complete,
						propertiesMap = {opacity: (direction === "In") ? 1 : 0};

				/* Since redirects are triggered individually for each element in the animated set, avoid repeatedly triggering
				 callbacks by firing them only when the final element has been reached. */
				if (elementsIndex !== 0) {
					opts.begin = null;
				}
				if (elementsIndex !== elementsSize - 1) {
					opts.complete = null;
				} else {
					opts.complete = function() {
						if (complete) {
							complete.call(elements, elements);
						}
						if (promiseData) {
							promiseData.resolver(elements);
						}
					};
				}

				/* If a display was passed in, use it. Otherwise, default to "none" for fadeOut or the element-specific default for fadeIn. */
				/* Note: We allow users to pass in "null" to skip display setting altogether. */
				if (opts.display === undefined) {
					opts.display = (direction === "In" ? "auto" : "none");
				}

				Velocity(this, propertiesMap, opts);
			};
		});

		return Velocity;
	}((window.jQuery || window.Zepto || window), window, (window ? window.document : undefined));
}));

/******************
 Known Issues
 ******************/

/* The CSS spec mandates that the translateX/Y/Z transforms are %-relative to the element itself -- not its parent.
 Velocity, however, doesn't make this distinction. Thus, converting to or from the % unit with these subproperties
 will produce an inaccurate conversion value. The same issue exists with the cx/cy attributes of SVG circles and ellipses. */

},{}],55:[function(require,module,exports){
/**********************
 Velocity UI Pack
 **********************/

/* VelocityJS.org UI Pack (5.2.0). (C) 2014 Julian Shapiro. MIT @license: en.wikipedia.org/wiki/MIT_License. Portions copyright Daniel Eden, Christian Pucci. */

(function(factory) {
	"use strict";
	/* CommonJS module. */
	if (typeof require === "function" && typeof exports === "object") {
		module.exports = factory();
		/* AMD module. */
	} else if (typeof define === "function" && define.amd) {
		define(["velocity"], factory);
		/* Browser globals. */
	} else {
		factory();
	}
}(function() {
	"use strict";
	return function(global, window, document, undefined) {

		/*************
		 Checks
		 *************/
		var Velocity = global.Velocity;

		if (!Velocity || !Velocity.Utilities) {
			if (window.console) {
				console.log("Velocity UI Pack: Velocity must be loaded first. Aborting.");
			}
			return;
		}
		var $ = Velocity.Utilities;

		var velocityVersion = Velocity.version,
				requiredVersion = {major: 1, minor: 1, patch: 0};

		function greaterSemver(primary, secondary) {
			var versionInts = [];

			if (!primary || !secondary) {
				return false;
			}

			$.each([primary, secondary], function(i, versionObject) {
				var versionIntsComponents = [];

				$.each(versionObject, function(component, value) {
					while (value.toString().length < 5) {
						value = "0" + value;
					}
					versionIntsComponents.push(value);
				});

				versionInts.push(versionIntsComponents.join(""));
			});

			return (parseFloat(versionInts[0]) > parseFloat(versionInts[1]));
		}

		if (greaterSemver(requiredVersion, velocityVersion)) {
			var abortError = "Velocity UI Pack: You need to update Velocity (velocity.js) to a newer version. Visit http://github.com/julianshapiro/velocity.";
			alert(abortError);
			throw new Error(abortError);
		}

		/************************
		 Effect Registration
		 ************************/

		/* Note: RegisterUI is a legacy name. */
		Velocity.RegisterEffect = Velocity.RegisterUI = function(effectName, properties) {
			/* Animate the expansion/contraction of the elements' parent's height for In/Out effects. */
			function animateParentHeight(elements, direction, totalDuration, stagger) {
				var totalHeightDelta = 0,
						parentNode;

				/* Sum the total height (including padding and margin) of all targeted elements. */
				$.each(elements.nodeType ? [elements] : elements, function(i, element) {
					if (stagger) {
						/* Increase the totalDuration by the successive delay amounts produced by the stagger option. */
						totalDuration += i * stagger;
					}

					parentNode = element.parentNode;

					var propertiesToSum = ["height", "paddingTop", "paddingBottom", "marginTop", "marginBottom"];

					/* If box-sizing is border-box, the height already includes padding and margin */
					if (Velocity.CSS.getPropertyValue(element, "boxSizing").toString().toLowerCase() === "border-box") {
						propertiesToSum = ["height"];
					}

					$.each(propertiesToSum, function(i, property) {
						totalHeightDelta += parseFloat(Velocity.CSS.getPropertyValue(element, property));
					});
				});

				/* Animate the parent element's height adjustment (with a varying duration multiplier for aesthetic benefits). */
				Velocity.animate(
						parentNode,
						{height: (direction === "In" ? "+" : "-") + "=" + totalHeightDelta},
						{queue: false, easing: "ease-in-out", duration: totalDuration * (direction === "In" ? 0.6 : 1)}
				);
			}

			/* Register a custom redirect for each effect. */
			Velocity.Redirects[effectName] = function(element, redirectOptions, elementsIndex, elementsSize, elements, promiseData, loop) {
				var finalElement = (elementsIndex === elementsSize - 1),
						totalDuration = 0;

				loop = loop || properties.loop;
				if (typeof properties.defaultDuration === "function") {
					properties.defaultDuration = properties.defaultDuration.call(elements, elements);
				} else {
					properties.defaultDuration = parseFloat(properties.defaultDuration);
				}

				/* Get the total duration used, so we can share it out with everything that doesn't have a duration */
				for (var callIndex = 0; callIndex < properties.calls.length; callIndex++) {
					durationPercentage = properties.calls[callIndex][1];
					if (typeof durationPercentage === "number") {
						totalDuration += durationPercentage;
					}
				}
				var shareDuration = totalDuration >= 1 ? 0 : properties.calls.length ? (1 - totalDuration) / properties.calls.length : 1;

				/* Iterate through each effect's call array. */
				for (callIndex = 0; callIndex < properties.calls.length; callIndex++) {
					var call = properties.calls[callIndex],
							propertyMap = call[0],
							redirectDuration = 1000,
							durationPercentage = call[1],
							callOptions = call[2] || {},
							opts = {};

					if (redirectOptions.duration !== undefined) {
						redirectDuration = redirectOptions.duration;
					} else if (properties.defaultDuration !== undefined) {
						redirectDuration = properties.defaultDuration;
					}

					/* Assign the whitelisted per-call options. */
					opts.duration = redirectDuration * (typeof durationPercentage === "number" ? durationPercentage : shareDuration);
					opts.queue = redirectOptions.queue || "";
					opts.easing = callOptions.easing || "ease";
					opts.delay = parseFloat(callOptions.delay) || 0;
					opts.loop = !properties.loop && callOptions.loop;
					opts._cacheValues = callOptions._cacheValues || true;

					/* Special processing for the first effect call. */
					if (callIndex === 0) {
						/* If a delay was passed into the redirect, combine it with the first call's delay. */
						opts.delay += (parseFloat(redirectOptions.delay) || 0);

						if (elementsIndex === 0) {
							opts.begin = function() {
								/* Only trigger a begin callback on the first effect call with the first element in the set. */
								if (redirectOptions.begin) {
									redirectOptions.begin.call(elements, elements);
								}

								var direction = effectName.match(/(In|Out)$/);

								/* Make "in" transitioning elements invisible immediately so that there's no FOUC between now
								 and the first RAF tick. */
								if ((direction && direction[0] === "In") && propertyMap.opacity !== undefined) {
									$.each(elements.nodeType ? [elements] : elements, function(i, element) {
										Velocity.CSS.setPropertyValue(element, "opacity", 0);
									});
								}

								/* Only trigger animateParentHeight() if we're using an In/Out transition. */
								if (redirectOptions.animateParentHeight && direction) {
									animateParentHeight(elements, direction[0], redirectDuration + opts.delay, redirectOptions.stagger);
								}
							};
						}

						/* If the user isn't overriding the display option, default to "auto" for "In"-suffixed transitions. */
						if (redirectOptions.display !== null) {
							if (redirectOptions.display !== undefined && redirectOptions.display !== "none") {
								opts.display = redirectOptions.display;
							} else if (/In$/.test(effectName)) {
								/* Inline elements cannot be subjected to transforms, so we switch them to inline-block. */
								var defaultDisplay = Velocity.CSS.Values.getDisplayType(element);
								opts.display = (defaultDisplay === "inline") ? "inline-block" : defaultDisplay;
							}
						}

						if (redirectOptions.visibility && redirectOptions.visibility !== "hidden") {
							opts.visibility = redirectOptions.visibility;
						}
					}

					/* Special processing for the last effect call. */
					if (callIndex === properties.calls.length - 1) {
						/* Append promise resolving onto the user's redirect callback. */
						var injectFinalCallbacks = function() {
							if ((redirectOptions.display === undefined || redirectOptions.display === "none") && /Out$/.test(effectName)) {
								$.each(elements.nodeType ? [elements] : elements, function(i, element) {
									Velocity.CSS.setPropertyValue(element, "display", "none");
								});
							}
							if (redirectOptions.complete) {
								redirectOptions.complete.call(elements, elements);
							}
							if (promiseData) {
								promiseData.resolver(elements || element);
							}
						};

						opts.complete = function() {
							if (loop) {
								Velocity.Redirects[effectName](element, redirectOptions, elementsIndex, elementsSize, elements, promiseData, loop === true ? true : Math.max(0, loop - 1));
							}
							if (properties.reset) {
								for (var resetProperty in properties.reset) {
									if (!properties.reset.hasOwnProperty(resetProperty)) {
										continue;
									}
									var resetValue = properties.reset[resetProperty];

									/* Format each non-array value in the reset property map to [ value, value ] so that changes apply
									 immediately and DOM querying is avoided (via forcefeeding). */
									/* Note: Don't forcefeed hooks, otherwise their hook roots will be defaulted to their null values. */
									if (Velocity.CSS.Hooks.registered[resetProperty] === undefined && (typeof resetValue === "string" || typeof resetValue === "number")) {
										properties.reset[resetProperty] = [properties.reset[resetProperty], properties.reset[resetProperty]];
									}
								}

								/* So that the reset values are applied instantly upon the next rAF tick, use a zero duration and parallel queueing. */
								var resetOptions = {duration: 0, queue: false};

								/* Since the reset option uses up the complete callback, we trigger the user's complete callback at the end of ours. */
								if (finalElement) {
									resetOptions.complete = injectFinalCallbacks;
								}

								Velocity.animate(element, properties.reset, resetOptions);
								/* Only trigger the user's complete callback on the last effect call with the last element in the set. */
							} else if (finalElement) {
								injectFinalCallbacks();
							}
						};

						if (redirectOptions.visibility === "hidden") {
							opts.visibility = redirectOptions.visibility;
						}
					}

					Velocity.animate(element, propertyMap, opts);
				}
			};

			/* Return the Velocity object so that RegisterUI calls can be chained. */
			return Velocity;
		};

		/*********************
		 Packaged Effects
		 *********************/

		/* Externalize the packagedEffects data so that they can optionally be modified and re-registered. */
		/* Support: <=IE8: Callouts will have no effect, and transitions will simply fade in/out. IE9/Android 2.3: Most effects are fully supported, the rest fade in/out. All other browsers: full support. */
		Velocity.RegisterEffect.packagedEffects =
				{
					/* Animate.css */
					"callout.bounce": {
						defaultDuration: 550,
						calls: [
							[{translateY: -30}, 0.25],
							[{translateY: 0}, 0.125],
							[{translateY: -15}, 0.125],
							[{translateY: 0}, 0.25]
						]
					},
					/* Animate.css */
					"callout.shake": {
						defaultDuration: 800,
						calls: [
							[{translateX: -11}],
							[{translateX: 11}],
							[{translateX: -11}],
							[{translateX: 11}],
							[{translateX: -11}],
							[{translateX: 11}],
							[{translateX: -11}],
							[{translateX: 0}]
						]
					},
					/* Animate.css */
					"callout.flash": {
						defaultDuration: 1100,
						calls: [
							[{opacity: [0, "easeInOutQuad", 1]}],
							[{opacity: [1, "easeInOutQuad"]}],
							[{opacity: [0, "easeInOutQuad"]}],
							[{opacity: [1, "easeInOutQuad"]}]
						]
					},
					/* Animate.css */
					"callout.pulse": {
						defaultDuration: 825,
						calls: [
							[{scaleX: 1.1, scaleY: 1.1}, 0.50, {easing: "easeInExpo"}],
							[{scaleX: 1, scaleY: 1}, 0.50]
						]
					},
					/* Animate.css */
					"callout.swing": {
						defaultDuration: 950,
						calls: [
							[{rotateZ: 15}],
							[{rotateZ: -10}],
							[{rotateZ: 5}],
							[{rotateZ: -5}],
							[{rotateZ: 0}]
						]
					},
					/* Animate.css */
					"callout.tada": {
						defaultDuration: 1000,
						calls: [
							[{scaleX: 0.9, scaleY: 0.9, rotateZ: -3}, 0.10],
							[{scaleX: 1.1, scaleY: 1.1, rotateZ: 3}, 0.10],
							[{scaleX: 1.1, scaleY: 1.1, rotateZ: -3}, 0.10],
							["reverse", 0.125],
							["reverse", 0.125],
							["reverse", 0.125],
							["reverse", 0.125],
							["reverse", 0.125],
							[{scaleX: 1, scaleY: 1, rotateZ: 0}, 0.20]
						]
					},
					"transition.fadeIn": {
						defaultDuration: 500,
						calls: [
							[{opacity: [1, 0]}]
						]
					},
					"transition.fadeOut": {
						defaultDuration: 500,
						calls: [
							[{opacity: [0, 1]}]
						]
					},
					/* Support: Loses rotation in IE9/Android 2.3 (fades only). */
					"transition.flipXIn": {
						defaultDuration: 700,
						calls: [
							[{opacity: [1, 0], transformPerspective: [800, 800], rotateY: [0, -55]}]
						],
						reset: {transformPerspective: 0}
					},
					/* Support: Loses rotation in IE9/Android 2.3 (fades only). */
					"transition.flipXOut": {
						defaultDuration: 700,
						calls: [
							[{opacity: [0, 1], transformPerspective: [800, 800], rotateY: 55}]
						],
						reset: {transformPerspective: 0, rotateY: 0}
					},
					/* Support: Loses rotation in IE9/Android 2.3 (fades only). */
					"transition.flipYIn": {
						defaultDuration: 800,
						calls: [
							[{opacity: [1, 0], transformPerspective: [800, 800], rotateX: [0, -45]}]
						],
						reset: {transformPerspective: 0}
					},
					/* Support: Loses rotation in IE9/Android 2.3 (fades only). */
					"transition.flipYOut": {
						defaultDuration: 800,
						calls: [
							[{opacity: [0, 1], transformPerspective: [800, 800], rotateX: 25}]
						],
						reset: {transformPerspective: 0, rotateX: 0}
					},
					/* Animate.css */
					/* Support: Loses rotation in IE9/Android 2.3 (fades only). */
					"transition.flipBounceXIn": {
						defaultDuration: 900,
						calls: [
							[{opacity: [0.725, 0], transformPerspective: [400, 400], rotateY: [-10, 90]}, 0.50],
							[{opacity: 0.80, rotateY: 10}, 0.25],
							[{opacity: 1, rotateY: 0}, 0.25]
						],
						reset: {transformPerspective: 0}
					},
					/* Animate.css */
					/* Support: Loses rotation in IE9/Android 2.3 (fades only). */
					"transition.flipBounceXOut": {
						defaultDuration: 800,
						calls: [
							[{opacity: [0.9, 1], transformPerspective: [400, 400], rotateY: -10}],
							[{opacity: 0, rotateY: 90}]
						],
						reset: {transformPerspective: 0, rotateY: 0}
					},
					/* Animate.css */
					/* Support: Loses rotation in IE9/Android 2.3 (fades only). */
					"transition.flipBounceYIn": {
						defaultDuration: 850,
						calls: [
							[{opacity: [0.725, 0], transformPerspective: [400, 400], rotateX: [-10, 90]}, 0.50],
							[{opacity: 0.80, rotateX: 10}, 0.25],
							[{opacity: 1, rotateX: 0}, 0.25]
						],
						reset: {transformPerspective: 0}
					},
					/* Animate.css */
					/* Support: Loses rotation in IE9/Android 2.3 (fades only). */
					"transition.flipBounceYOut": {
						defaultDuration: 800,
						calls: [
							[{opacity: [0.9, 1], transformPerspective: [400, 400], rotateX: -15}],
							[{opacity: 0, rotateX: 90}]
						],
						reset: {transformPerspective: 0, rotateX: 0}
					},
					/* Magic.css */
					"transition.swoopIn": {
						defaultDuration: 850,
						calls: [
							[{opacity: [1, 0], transformOriginX: ["100%", "50%"], transformOriginY: ["100%", "100%"], scaleX: [1, 0], scaleY: [1, 0], translateX: [0, -700], translateZ: 0}]
						],
						reset: {transformOriginX: "50%", transformOriginY: "50%"}
					},
					/* Magic.css */
					"transition.swoopOut": {
						defaultDuration: 850,
						calls: [
							[{opacity: [0, 1], transformOriginX: ["50%", "100%"], transformOriginY: ["100%", "100%"], scaleX: 0, scaleY: 0, translateX: -700, translateZ: 0}]
						],
						reset: {transformOriginX: "50%", transformOriginY: "50%", scaleX: 1, scaleY: 1, translateX: 0}
					},
					/* Magic.css */
					/* Support: Loses rotation in IE9/Android 2.3. (Fades and scales only.) */
					"transition.whirlIn": {
						defaultDuration: 850,
						calls: [
							[{opacity: [1, 0], transformOriginX: ["50%", "50%"], transformOriginY: ["50%", "50%"], scaleX: [1, 0], scaleY: [1, 0], rotateY: [0, 160]}, 1, {easing: "easeInOutSine"}]
						]
					},
					/* Magic.css */
					/* Support: Loses rotation in IE9/Android 2.3. (Fades and scales only.) */
					"transition.whirlOut": {
						defaultDuration: 750,
						calls: [
							[{opacity: [0, "easeInOutQuint", 1], transformOriginX: ["50%", "50%"], transformOriginY: ["50%", "50%"], scaleX: 0, scaleY: 0, rotateY: 160}, 1, {easing: "swing"}]
						],
						reset: {scaleX: 1, scaleY: 1, rotateY: 0}
					},
					"transition.shrinkIn": {
						defaultDuration: 750,
						calls: [
							[{opacity: [1, 0], transformOriginX: ["50%", "50%"], transformOriginY: ["50%", "50%"], scaleX: [1, 1.5], scaleY: [1, 1.5], translateZ: 0}]
						]
					},
					"transition.shrinkOut": {
						defaultDuration: 600,
						calls: [
							[{opacity: [0, 1], transformOriginX: ["50%", "50%"], transformOriginY: ["50%", "50%"], scaleX: 1.3, scaleY: 1.3, translateZ: 0}]
						],
						reset: {scaleX: 1, scaleY: 1}
					},
					"transition.expandIn": {
						defaultDuration: 700,
						calls: [
							[{opacity: [1, 0], transformOriginX: ["50%", "50%"], transformOriginY: ["50%", "50%"], scaleX: [1, 0.625], scaleY: [1, 0.625], translateZ: 0}]
						]
					},
					"transition.expandOut": {
						defaultDuration: 700,
						calls: [
							[{opacity: [0, 1], transformOriginX: ["50%", "50%"], transformOriginY: ["50%", "50%"], scaleX: 0.5, scaleY: 0.5, translateZ: 0}]
						],
						reset: {scaleX: 1, scaleY: 1}
					},
					/* Animate.css */
					"transition.bounceIn": {
						defaultDuration: 800,
						calls: [
							[{opacity: [1, 0], scaleX: [1.05, 0.3], scaleY: [1.05, 0.3]}, 0.35],
							[{scaleX: 0.9, scaleY: 0.9, translateZ: 0}, 0.20],
							[{scaleX: 1, scaleY: 1}, 0.45]
						]
					},
					/* Animate.css */
					"transition.bounceOut": {
						defaultDuration: 800,
						calls: [
							[{scaleX: 0.95, scaleY: 0.95}, 0.35],
							[{scaleX: 1.1, scaleY: 1.1, translateZ: 0}, 0.35],
							[{opacity: [0, 1], scaleX: 0.3, scaleY: 0.3}, 0.30]
						],
						reset: {scaleX: 1, scaleY: 1}
					},
					/* Animate.css */
					"transition.bounceUpIn": {
						defaultDuration: 800,
						calls: [
							[{opacity: [1, 0], translateY: [-30, 1000]}, 0.60, {easing: "easeOutCirc"}],
							[{translateY: 10}, 0.20],
							[{translateY: 0}, 0.20]
						]
					},
					/* Animate.css */
					"transition.bounceUpOut": {
						defaultDuration: 1000,
						calls: [
							[{translateY: 20}, 0.20],
							[{opacity: [0, "easeInCirc", 1], translateY: -1000}, 0.80]
						],
						reset: {translateY: 0}
					},
					/* Animate.css */
					"transition.bounceDownIn": {
						defaultDuration: 800,
						calls: [
							[{opacity: [1, 0], translateY: [30, -1000]}, 0.60, {easing: "easeOutCirc"}],
							[{translateY: -10}, 0.20],
							[{translateY: 0}, 0.20]
						]
					},
					/* Animate.css */
					"transition.bounceDownOut": {
						defaultDuration: 1000,
						calls: [
							[{translateY: -20}, 0.20],
							[{opacity: [0, "easeInCirc", 1], translateY: 1000}, 0.80]
						],
						reset: {translateY: 0}
					},
					/* Animate.css */
					"transition.bounceLeftIn": {
						defaultDuration: 750,
						calls: [
							[{opacity: [1, 0], translateX: [30, -1250]}, 0.60, {easing: "easeOutCirc"}],
							[{translateX: -10}, 0.20],
							[{translateX: 0}, 0.20]
						]
					},
					/* Animate.css */
					"transition.bounceLeftOut": {
						defaultDuration: 750,
						calls: [
							[{translateX: 30}, 0.20],
							[{opacity: [0, "easeInCirc", 1], translateX: -1250}, 0.80]
						],
						reset: {translateX: 0}
					},
					/* Animate.css */
					"transition.bounceRightIn": {
						defaultDuration: 750,
						calls: [
							[{opacity: [1, 0], translateX: [-30, 1250]}, 0.60, {easing: "easeOutCirc"}],
							[{translateX: 10}, 0.20],
							[{translateX: 0}, 0.20]
						]
					},
					/* Animate.css */
					"transition.bounceRightOut": {
						defaultDuration: 750,
						calls: [
							[{translateX: -30}, 0.20],
							[{opacity: [0, "easeInCirc", 1], translateX: 1250}, 0.80]
						],
						reset: {translateX: 0}
					},
					"transition.slideUpIn": {
						defaultDuration: 900,
						calls: [
							[{opacity: [1, 0], translateY: [0, 20], translateZ: 0}]
						]
					},
					"transition.slideUpOut": {
						defaultDuration: 900,
						calls: [
							[{opacity: [0, 1], translateY: -20, translateZ: 0}]
						],
						reset: {translateY: 0}
					},
					"transition.slideDownIn": {
						defaultDuration: 900,
						calls: [
							[{opacity: [1, 0], translateY: [0, -20], translateZ: 0}]
						]
					},
					"transition.slideDownOut": {
						defaultDuration: 900,
						calls: [
							[{opacity: [0, 1], translateY: 20, translateZ: 0}]
						],
						reset: {translateY: 0}
					},
					"transition.slideLeftIn": {
						defaultDuration: 1000,
						calls: [
							[{opacity: [1, 0], translateX: [0, -20], translateZ: 0}]
						]
					},
					"transition.slideLeftOut": {
						defaultDuration: 1050,
						calls: [
							[{opacity: [0, 1], translateX: -20, translateZ: 0}]
						],
						reset: {translateX: 0}
					},
					"transition.slideRightIn": {
						defaultDuration: 1000,
						calls: [
							[{opacity: [1, 0], translateX: [0, 20], translateZ: 0}]
						]
					},
					"transition.slideRightOut": {
						defaultDuration: 1050,
						calls: [
							[{opacity: [0, 1], translateX: 20, translateZ: 0}]
						],
						reset: {translateX: 0}
					},
					"transition.slideUpBigIn": {
						defaultDuration: 850,
						calls: [
							[{opacity: [1, 0], translateY: [0, 75], translateZ: 0}]
						]
					},
					"transition.slideUpBigOut": {
						defaultDuration: 800,
						calls: [
							[{opacity: [0, 1], translateY: -75, translateZ: 0}]
						],
						reset: {translateY: 0}
					},
					"transition.slideDownBigIn": {
						defaultDuration: 850,
						calls: [
							[{opacity: [1, 0], translateY: [0, -75], translateZ: 0}]
						]
					},
					"transition.slideDownBigOut": {
						defaultDuration: 800,
						calls: [
							[{opacity: [0, 1], translateY: 75, translateZ: 0}]
						],
						reset: {translateY: 0}
					},
					"transition.slideLeftBigIn": {
						defaultDuration: 800,
						calls: [
							[{opacity: [1, 0], translateX: [0, -75], translateZ: 0}]
						]
					},
					"transition.slideLeftBigOut": {
						defaultDuration: 750,
						calls: [
							[{opacity: [0, 1], translateX: -75, translateZ: 0}]
						],
						reset: {translateX: 0}
					},
					"transition.slideRightBigIn": {
						defaultDuration: 800,
						calls: [
							[{opacity: [1, 0], translateX: [0, 75], translateZ: 0}]
						]
					},
					"transition.slideRightBigOut": {
						defaultDuration: 750,
						calls: [
							[{opacity: [0, 1], translateX: 75, translateZ: 0}]
						],
						reset: {translateX: 0}
					},
					/* Magic.css */
					"transition.perspectiveUpIn": {
						defaultDuration: 800,
						calls: [
							[{opacity: [1, 0], transformPerspective: [800, 800], transformOriginX: [0, 0], transformOriginY: ["100%", "100%"], rotateX: [0, -180]}]
						],
						reset: {transformPerspective: 0, transformOriginX: "50%", transformOriginY: "50%"}
					},
					/* Magic.css */
					/* Support: Loses rotation in IE9/Android 2.3 (fades only). */
					"transition.perspectiveUpOut": {
						defaultDuration: 850,
						calls: [
							[{opacity: [0, 1], transformPerspective: [800, 800], transformOriginX: [0, 0], transformOriginY: ["100%", "100%"], rotateX: -180}]
						],
						reset: {transformPerspective: 0, transformOriginX: "50%", transformOriginY: "50%", rotateX: 0}
					},
					/* Magic.css */
					/* Support: Loses rotation in IE9/Android 2.3 (fades only). */
					"transition.perspectiveDownIn": {
						defaultDuration: 800,
						calls: [
							[{opacity: [1, 0], transformPerspective: [800, 800], transformOriginX: [0, 0], transformOriginY: [0, 0], rotateX: [0, 180]}]
						],
						reset: {transformPerspective: 0, transformOriginX: "50%", transformOriginY: "50%"}
					},
					/* Magic.css */
					/* Support: Loses rotation in IE9/Android 2.3 (fades only). */
					"transition.perspectiveDownOut": {
						defaultDuration: 850,
						calls: [
							[{opacity: [0, 1], transformPerspective: [800, 800], transformOriginX: [0, 0], transformOriginY: [0, 0], rotateX: 180}]
						],
						reset: {transformPerspective: 0, transformOriginX: "50%", transformOriginY: "50%", rotateX: 0}
					},
					/* Magic.css */
					/* Support: Loses rotation in IE9/Android 2.3 (fades only). */
					"transition.perspectiveLeftIn": {
						defaultDuration: 950,
						calls: [
							[{opacity: [1, 0], transformPerspective: [2000, 2000], transformOriginX: [0, 0], transformOriginY: [0, 0], rotateY: [0, -180]}]
						],
						reset: {transformPerspective: 0, transformOriginX: "50%", transformOriginY: "50%"}
					},
					/* Magic.css */
					/* Support: Loses rotation in IE9/Android 2.3 (fades only). */
					"transition.perspectiveLeftOut": {
						defaultDuration: 950,
						calls: [
							[{opacity: [0, 1], transformPerspective: [2000, 2000], transformOriginX: [0, 0], transformOriginY: [0, 0], rotateY: -180}]
						],
						reset: {transformPerspective: 0, transformOriginX: "50%", transformOriginY: "50%", rotateY: 0}
					},
					/* Magic.css */
					/* Support: Loses rotation in IE9/Android 2.3 (fades only). */
					"transition.perspectiveRightIn": {
						defaultDuration: 950,
						calls: [
							[{opacity: [1, 0], transformPerspective: [2000, 2000], transformOriginX: ["100%", "100%"], transformOriginY: [0, 0], rotateY: [0, 180]}]
						],
						reset: {transformPerspective: 0, transformOriginX: "50%", transformOriginY: "50%"}
					},
					/* Magic.css */
					/* Support: Loses rotation in IE9/Android 2.3 (fades only). */
					"transition.perspectiveRightOut": {
						defaultDuration: 950,
						calls: [
							[{opacity: [0, 1], transformPerspective: [2000, 2000], transformOriginX: ["100%", "100%"], transformOriginY: [0, 0], rotateY: 180}]
						],
						reset: {transformPerspective: 0, transformOriginX: "50%", transformOriginY: "50%", rotateY: 0}
					}
				};

		/* Register the packaged effects. */
		for (var effectName in Velocity.RegisterEffect.packagedEffects) {
			if (Velocity.RegisterEffect.packagedEffects.hasOwnProperty(effectName)) {
				Velocity.RegisterEffect(effectName, Velocity.RegisterEffect.packagedEffects[effectName]);
			}
		}

		/*********************
		 Sequence Running
		 **********************/

		/* Note: Sequence calls must use Velocity's single-object arguments syntax. */
		Velocity.RunSequence = function(originalSequence) {
			var sequence = $.extend(true, [], originalSequence);

			if (sequence.length > 1) {
				$.each(sequence.reverse(), function(i, currentCall) {
					var nextCall = sequence[i + 1];

					if (nextCall) {
						/* Parallel sequence calls (indicated via sequenceQueue:false) are triggered
						 in the previous call's begin callback. Otherwise, chained calls are normally triggered
						 in the previous call's complete callback. */
						var currentCallOptions = currentCall.o || currentCall.options,
								nextCallOptions = nextCall.o || nextCall.options;

						var timing = (currentCallOptions && currentCallOptions.sequenceQueue === false) ? "begin" : "complete",
								callbackOriginal = nextCallOptions && nextCallOptions[timing],
								options = {};

						options[timing] = function() {
							var nextCallElements = nextCall.e || nextCall.elements;
							var elements = nextCallElements.nodeType ? [nextCallElements] : nextCallElements;

							if (callbackOriginal) {
								callbackOriginal.call(elements, elements);
							}
							Velocity(currentCall);
						};

						if (nextCall.o) {
							nextCall.o = $.extend({}, nextCallOptions, options);
						} else {
							nextCall.options = $.extend({}, nextCallOptions, options);
						}
					}
				});

				sequence.reverse();
			}

			Velocity(sequence[0]);
		};
	}((window.jQuery || window.Zepto || window), window, (window ? window.document : undefined));
}));

},{}]},{},[40]);
